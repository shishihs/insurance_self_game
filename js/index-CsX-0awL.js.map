{"version":3,"mappings":"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","names":["props","__props","transitionType","computed","onBeforeEnter","el","element","onEnter","done","onLeave","_openBlock","_createElementBlock","_hoisted_1","_createVNode","_Transition","_renderSlot","_ctx","ScreenReaderManager","__publicField","message","options","announcement","type","context","priority","card","description","current","total","percentage","currentIndex","totalOptions","currentOption","remainingTime","unit","unitText","screenName","stats","key","value","regionName","items","itemCount","itemType","phase","details","politeRegion","assertiveRegion","style","__async","region","messageElement","statusInfo","__spreadValues","parts","firstItem","ms","resolve","_a","_b","emit","__emit","defaultSettings","settings","ref","screenReaderManager","colorFilters","saveSettings","applySettings","loadSettings","saved","e","root","fontSizeMap","touchSizeMap","previewSettings","setting","originalValue","resetSettings","setupKeyboardShortcuts","handleKeyDown","schemes","onMounted","cleanup","watch","_createBlock","isOpen","_createElementVNode","_hoisted_2","_hoisted_4","_cache","_hoisted_5","_hoisted_6","_hoisted_7","$event","_vModelSelect","_hoisted_8","_hoisted_9","_vModelCheckbox","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_toDisplayString","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","FocusIndicatorManager","indicator","event","target","selector","rect","offset","borderRadius","isEnabled","currentOptions","focusIndicatorManager","showHints","hintTimer","indicatorStyle","keyboardShortcuts","initializeFocusIndicator","destroyFocusIndicator","updateOptions","showKeyboardHints","hideKeyboardHints","handleKeydown","updateSettings","newOptions","toggleEnabled","__spreadProps","onUnmounted","__expose","reducedMotion","_Fragment","_renderList","shortcut","_hoisted_3","_unref","isDev","hasError","error","errorInfo","errorCount","isRecovering","errorSeverity","userFriendlyMessage","onErrorCaptured","err","instance","info","tryRecover","reloadPage","copyErrorDetails","sendErrorReport","fallback","canRecover","_createTextVNode","UserFriendlyMessages","pattern","category","severity","p","id","index","errorMessage","mockError","userFriendlyMessages","maxNotifications","defaultHideDelay","notifications","addNotification","notification","newNotification","removeNotification","n","clearAll","handleError","userMessage","getIcon","getDefaultIcon","getColorClass","executeAction","actionType","actionData","retryEvent","contactEvent","toggleDetails","openHelp","helpUrl","visibleNotifications","_Teleport","_TransitionGroup","_normalizeClass","_normalizeStyle","sanitizeInput","input","match","RateLimiter","maxAttempts","windowMs","now","validAttempts","time","generateSecureRandomString","length","chars","array","i","byte","generateSecureHash","data","dataBuffer","hashBuffer","b","hash","char","secureLocalStorage","ENCRYPTION_KEY_PREFIX","INTEGRITY_SUFFIX","encrypt","sanitizedKey","serialized","encryptionKey","integrityHash","decrypt","item","keyName","result","keyChar","dataChar","encryptedData","KeyboardManager","focusableElement","existingIndex","a","modifiers","shortcutKey","groupName","groupElements","container","focusableInContainer","helpPanel","closeHelp","closeButton","skipLinks","skipToMain","skipToNav","skipToFooter","active","currentElement","enabled","focusableEl","tagName","textContent","text","href","link","panel","shortcuts","helpContent","title","shortcutsList","basicGroup","basicTitle","basicDl","desc","dt","dd","gameGroup","gameTitle","gameDl","m","gameButtonRef","tutorialButtonRef","$emit","ja","en","zh","ko","SUPPORTED_LOCALES","LOCALE_NAMES","RTL_LOCALES","detectBrowserLocale","browserLang","getSavedLocale","saveLocale","locale","getInitialLocale","i18nOptions","i18n","createI18n","setLocale","getCurrentLocale","t","useI18n","currentLocale","currentLocaleName","localeOptions","getFlagEmoji","changeLanguage","announceToScreenReader","toggleDropdown","handleClickOutside","trigger","nextOption","prevOption","mode","compact","ariaLabel","option","showGame","showAccessibilitySettings","showStatistics","StatisticsDashboard","defineAsyncComponent","__vitePreload","FeedbackButton","GameCanvas","navigationRef","keyboardManager","gameState","startGame","startTutorial","backToHome","openStatistics","closeStatistics","handleAccessibilitySettingsChanged","handleFeedbackSubmitted","feedbackId","gameButton","tutorialButton","backButton","errorNotification","transitionAnimations","errorBoundary","appHeader","navigationActions","featureShowcase","accessibilitySettings","visualIndicators","languageSwitcher","_SecurityMonitor","limiter","activity","suspiciousActivity","timeWindowMs","cutoff","existingLogs","trimmedLogs","blockDurationMs","allowed","remainingAttempts","nextAttemptTime","limit","activities","typeCount","severityCount","hourlyCount","hour","metrics","recommendations","SecurityMonitor","validateInputDepth","maxDepth","getDepth","obj","currentDepth","visitedObjects","keys","validateUserInput","maxLength","allowedTypes","sanitize","checkPatterns","errors","sanitizedInput","inputType","stringInput","sanitizeAdvancedInput","setupCSPMonitoring","setupDOMMonitoring","mutations","mutation","node","src","setupNetworkMonitoring","originalFetch","args","url","originalXHR","xhr","originalOpen","method","setupDevToolsDetection","devtools","lastCheck","detectionMethods","start","detectionResults","isDetected","handleDevToolsDetection","monitor","userAgent","initializeSecurity","setupInputValidationMonitoring","setupPerformanceMonitoring","setupMemoryLeakDetection","performInitialSecurityCheck","scheduleSecurityMaintenance","validation","memory","usedMB","limitMB","usagePercent","objectCounts","globalKeys","previousCount","securityFeatures","missingFeatures","supported","feature","report","incidents","oneDayAgo","recentIncidents","incident","_XSSProtection","domains","domain","tags","tag","html","sanitized","openTagRegex","closeTagRegex","str","parsedURL","operation","sanitizedValue","attrName","XSSProtection","_CSRFProtection","origins","origin","action","expiryMinutes","token","expires","providedToken","tokenData","isValid","normalizedOrigin","referer","refererURL","currentOrigin","CSRFProtection","CSPManager$1","nonce","directive","values","existing","directives","existingMeta","meta","code","scriptNonce","script","_SecurityInterceptor","CSPManager","form","csrfToken","formData","headers","jsonString","SecurityInterceptor","_CSPManager","providedNonce","v","policies","policyValues","existingCSP","cspMeta","htmlContent","violation","css","source","endpoint","_SecurityHeaderManager","newMeta","policy","httpEquiv","content","requiredHeaders","valid","missing","header","SecurityHeaderManager","cspManager","headerManager","_SecurityAuditLogger","timestamp","random","_0","_1","_2","_3","eventType","metadata","eventString","navigation","trimmedEvents","shouldCompress","events","filter","filteredEvents","searchTerm","startDate","endDate","end","severityCounts","eventTypeCount","sourceCount","topEventTypes","count","topSources","severityTrend","trend","date","dateStr","dayEvents","frequentEvents","format","csvRows","row","newConfig","SecurityAuditLogger","auditLogger","originalConsoleError","initializeSecuritySystem","validateSecurityConfiguration","setupSecurityEventListeners","startPeriodicSecurityChecks","setupFallbackSecurity","issues","storage","retrieved","isTabActive","init","usage","scriptTags","externalScripts","totalSize","sizeMB","originalInnerHTML","csrfInput","ErrorLogger","entry","warning","filteredLogs","log","timeRange","logs","errorMessages","timeSpan","regex","rows","maxAge","logsData","warningsData","recentLogs","recentWarnings","listener","impactIcon","fiveMinutesAgo","recentCriticalErrors","sameCorrelationErrors","alertEvent","buffer","patterns","trends","anomalies","analysisEvent","messageCount","component","timeSlots","slotSize","slot","slotKey","sortedSlots","sumX","sumY","sumXY","sum","y","x","sumXX","_","recentMessages","historicalMessages","newMessages","msg","errorId","resolvedBy","correlationId","userId","baseStats","resolvedErrors","mttr","impactStats","sourceStats","groups","ErrorReporter","additionalData","batch","payload","response","ua","browser","pushState","ErrorRecovery","timing","networkStatus","initialMemory","finalMemory","memoryReduced","componentName","remountEvent","reinitEvent","newGameEvent","attempt","delay","fallbackEvent","strategy","insertIndex","s","attempts","maxRetries","success","timeout","handler","keysToRemove","gameDataKeys","strategyName","successful","h","failed","byStrategy","startTime","latency","connection","bandwidth","offlineEvent","logElements","memoryLeakEvent","timerCleanupEvent","currentMemory","memoryIncrease","criticalThreshold","backupEvent","restoreEvent","savedState","autoSave","prerequisite","prerequisiteStrategy","sortedStrategies","healthCheckPassed","rollbackError","_GlobalErrorHandler","app","trace","lineno","colno","observer","list","enhancedErrorInfo","recoveryEvent","successEvent","stack","oneMinuteAgo","ts","breadcrumbs","lastSeen","logData","oneHourAgo","recentErrors","criticalErrorsRecent","GlobalErrorHandler","DebugInfoCollector","sessionId","buildVersion","environment","provider","opts","debugInfo","perfInfo","paintEntries","fpEntry","fcpEntry","appInfo","lastError","test","canvas","urlObj","sanitizedParams","sensitive","features","errorHandling","lastLog","flags","__vite_import_meta_env__","flagName","tests","abTestData","toggles","toggleData","part","maxSize","truncated","debugInfoCollector","getDebugInfoCollector","ErrorHandlingSystem","config","used","errorHandlingSystem","ErrorHandlingPlugin","ServiceWorkerManager","basePath","registration","newWorker","worker","cacheNames","cacheName","serviceWorkerManager","registerServiceWorker","DEFAULT_OPTIONS","createRippleCore","ripple","size","radius","clientX","clientY","removeRipple","addRippleEffect","handleRipple","initAutoRipple","addRipplesToElements","htmlElement","shouldUpdate","createApp","App","initializeApp"],"ignoreList":[],"sources":["../../src/components/animations/TransitionAnimations.vue","../../src/components/accessibility/ScreenReaderManager.ts","../../src/components/accessibility/AccessibilitySettings.vue","../../src/utils/focus-indicator.ts","../../src/components/accessibility/VisualIndicators.vue","../../src/components/error/ErrorBoundary.vue","../../src/utils/error-handling/UserFriendlyMessages.ts","../../src/components/error/ErrorNotification.vue","../../src/utils/security.ts","../../src/components/accessibility/KeyboardManager.ts","../../src/components/layout/AppHeader.vue","../../src/components/layout/NavigationActions.vue","../../src/components/layout/FeatureShowcase.vue","../../src/i18n/locales/ja.ts","../../src/i18n/locales/en.ts","../../src/i18n/locales/zh.ts","../../src/i18n/locales/ko.ts","../../src/i18n/index.ts","../../src/components/i18n/LanguageSwitcher.vue","../../src/App.vue","../../src/utils/security-extensions.ts","../../src/utils/xss-csrf-protection.ts","../../src/utils/csp-manager.ts","../../src/utils/security-audit-logger.ts","../../src/utils/security-init.ts","../../src/utils/error-handling/ErrorLogger.ts","../../src/utils/error-handling/ErrorReporter.ts","../../src/utils/error-handling/ErrorRecovery.ts","../../src/utils/error-handling/ErrorHandler.ts","../../src/utils/error-handling/DebugInfoCollector.ts","../../src/utils/error-handling/index.ts","../../src/pwa/registerServiceWorker.ts","../../src/utils/ripple-effect.ts","../../src/main.ts"],"sourcesContent":["<template>\r\n  <div class=\"transition-animations\">\r\n    <!-- ページ遷移アニメーション -->\r\n    <Transition\r\n      :name=\"transitionType\"\r\n      mode=\"out-in\"\r\n      @before-enter=\"onBeforeEnter\"\r\n      @enter=\"onEnter\"\r\n      @leave=\"onLeave\"\r\n    >\r\n      <slot />\r\n    </Transition>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed } from 'vue'\r\n\r\ninterface Props {\r\n  type?: 'slide' | 'fade' | 'zoom' | 'flip' | 'elastic' | 'game-phase' | 'card-stack' | 'score-change'\r\n  direction?: 'left' | 'right' | 'up' | 'down'\r\n  duration?: number\r\n  easing?: string\r\n  intensity?: 'subtle' | 'normal' | 'dramatic'\r\n}\r\n\r\nconst props = withDefaults(defineProps<Props>(), {\r\n  type: 'fade',\r\n  direction: 'right',\r\n  duration: 300,\r\n  easing: 'cubic-bezier(0.4, 0, 0.2, 1)',\r\n  intensity: 'normal'\r\n})\r\n\r\nconst transitionType = computed(() => {\r\n  return `${props.type}-${props.direction}-${props.intensity}`\r\n})\r\n\r\nconst onBeforeEnter = (el: Element) => {\r\n  const element = el as HTMLElement\r\n  element.style.transitionDuration = `${props.duration}ms`\r\n  element.style.transitionTimingFunction = props.easing\r\n}\r\n\r\nconst onEnter = (el: Element, done: () => void) => {\r\n  // エンター時のロジック\r\n  setTimeout(done, props.duration)\r\n}\r\n\r\nconst onLeave = (el: Element, done: () => void) => {\r\n  // リーブ時のロジック\r\n  setTimeout(done, props.duration)\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* =================================\r\n   ページ遷移アニメーション基本設定\r\n   ================================= */\r\n.transition-animations {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n/* =================================\r\n   フェードトランジション\r\n   ================================= */\r\n.fade-left-enter-active,\r\n.fade-right-enter-active,\r\n.fade-up-enter-active,\r\n.fade-down-enter-active,\r\n.fade-left-leave-active,\r\n.fade-right-leave-active,\r\n.fade-up-leave-active,\r\n.fade-down-leave-active {\r\n  transition: all var(--transition-duration, 300ms) var(--transition-easing, cubic-bezier(0.4, 0, 0.2, 1));\r\n}\r\n\r\n.fade-left-enter-from,\r\n.fade-right-enter-from,\r\n.fade-up-enter-from,\r\n.fade-down-enter-from {\r\n  opacity: 0;\r\n}\r\n\r\n.fade-left-leave-to,\r\n.fade-right-leave-to,\r\n.fade-up-leave-to,\r\n.fade-down-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n/* =================================\r\n   スライドトランジション\r\n   ================================= */\r\n.slide-left-enter-active,\r\n.slide-left-leave-active {\r\n  transition: all var(--transition-duration, 300ms) var(--transition-easing, cubic-bezier(0.4, 0, 0.2, 1));\r\n}\r\n\r\n.slide-left-enter-from {\r\n  transform: translateX(-100%);\r\n  opacity: 0;\r\n}\r\n\r\n.slide-left-leave-to {\r\n  transform: translateX(100%);\r\n  opacity: 0;\r\n}\r\n\r\n.slide-right-enter-active,\r\n.slide-right-leave-active {\r\n  transition: all var(--transition-duration, 300ms) var(--transition-easing, cubic-bezier(0.4, 0, 0.2, 1));\r\n}\r\n\r\n.slide-right-enter-from {\r\n  transform: translateX(100%);\r\n  opacity: 0;\r\n}\r\n\r\n.slide-right-leave-to {\r\n  transform: translateX(-100%);\r\n  opacity: 0;\r\n}\r\n\r\n.slide-up-enter-active,\r\n.slide-up-leave-active {\r\n  transition: all var(--transition-duration, 300ms) var(--transition-easing, cubic-bezier(0.4, 0, 0.2, 1));\r\n}\r\n\r\n.slide-up-enter-from {\r\n  transform: translateY(100%);\r\n  opacity: 0;\r\n}\r\n\r\n.slide-up-leave-to {\r\n  transform: translateY(-100%);\r\n  opacity: 0;\r\n}\r\n\r\n.slide-down-enter-active,\r\n.slide-down-leave-active {\r\n  transition: all var(--transition-duration, 300ms) var(--transition-easing, cubic-bezier(0.4, 0, 0.2, 1));\r\n}\r\n\r\n.slide-down-enter-from {\r\n  transform: translateY(-100%);\r\n  opacity: 0;\r\n}\r\n\r\n.slide-down-leave-to {\r\n  transform: translateY(100%);\r\n  opacity: 0;\r\n}\r\n\r\n/* =================================\r\n   ズームトランジション\r\n   ================================= */\r\n.zoom-left-enter-active,\r\n.zoom-right-enter-active,\r\n.zoom-up-enter-active,\r\n.zoom-down-enter-active,\r\n.zoom-left-leave-active,\r\n.zoom-right-leave-active,\r\n.zoom-up-leave-active,\r\n.zoom-down-leave-active {\r\n  transition: all var(--transition-duration, 300ms) var(--transition-easing, cubic-bezier(0.4, 0, 0.2, 1));\r\n}\r\n\r\n.zoom-left-enter-from,\r\n.zoom-right-enter-from,\r\n.zoom-up-enter-from,\r\n.zoom-down-enter-from {\r\n  transform: scale(0.8);\r\n  opacity: 0;\r\n}\r\n\r\n.zoom-left-leave-to,\r\n.zoom-right-leave-to,\r\n.zoom-up-leave-to,\r\n.zoom-down-leave-to {\r\n  transform: scale(1.2);\r\n  opacity: 0;\r\n}\r\n\r\n/* =================================\r\n   フリップトランジション\r\n   ================================= */\r\n.flip-left-enter-active,\r\n.flip-left-leave-active {\r\n  transition: all var(--transition-duration, 300ms) var(--transition-easing, cubic-bezier(0.4, 0, 0.2, 1));\r\n  transform-style: preserve-3d;\r\n  backface-visibility: hidden;\r\n}\r\n\r\n.flip-left-enter-from {\r\n  transform: rotateY(-90deg);\r\n  opacity: 0;\r\n}\r\n\r\n.flip-left-leave-to {\r\n  transform: rotateY(90deg);\r\n  opacity: 0;\r\n}\r\n\r\n.flip-right-enter-active,\r\n.flip-right-leave-active {\r\n  transition: all var(--transition-duration, 300ms) var(--transition-easing, cubic-bezier(0.4, 0, 0.2, 1));\r\n  transform-style: preserve-3d;\r\n  backface-visibility: hidden;\r\n}\r\n\r\n.flip-right-enter-from {\r\n  transform: rotateY(90deg);\r\n  opacity: 0;\r\n}\r\n\r\n.flip-right-leave-to {\r\n  transform: rotateY(-90deg);\r\n  opacity: 0;\r\n}\r\n\r\n/* =================================\r\n   エラスティックトランジション\r\n   ================================= */\r\n.elastic-left-enter-active,\r\n.elastic-right-enter-active,\r\n.elastic-up-enter-active,\r\n.elastic-down-enter-active {\r\n  transition: all var(--transition-duration, 600ms) cubic-bezier(0.68, -0.55, 0.265, 1.55);\r\n}\r\n\r\n.elastic-left-leave-active,\r\n.elastic-right-leave-active,\r\n.elastic-up-leave-active,\r\n.elastic-down-leave-active {\r\n  transition: all var(--transition-duration, 300ms) var(--transition-easing, cubic-bezier(0.4, 0, 0.2, 1));\r\n}\r\n\r\n.elastic-left-enter-from,\r\n.elastic-right-enter-from,\r\n.elastic-up-enter-from,\r\n.elastic-down-enter-from {\r\n  transform: scale(0.5);\r\n  opacity: 0;\r\n}\r\n\r\n.elastic-left-leave-to,\r\n.elastic-right-leave-to,\r\n.elastic-up-leave-to,\r\n.elastic-down-leave-to {\r\n  transform: scale(0.8);\r\n  opacity: 0;\r\n}\r\n\r\n/* =================================\r\n   レスポンシブアニメーション\r\n   ================================= */\r\n@media (max-width: 768px) {\r\n  .slide-left-enter-from,\r\n  .slide-right-enter-from,\r\n  .slide-up-enter-from,\r\n  .slide-down-enter-from {\r\n    /* モバイルでは控えめなアニメーション */\r\n    transform: translateX(0) scale(0.95);\r\n  }\r\n}\r\n\r\n/* =================================\r\n   ゲーム状態変化トランジション\r\n   ================================= */\r\n\r\n/* ゲームフェーズ遷移 */\r\n.game-phase-up-normal-enter-active,\r\n.game-phase-up-normal-leave-active {\r\n  transition: all 600ms cubic-bezier(0.25, 0.46, 0.45, 0.94);\r\n}\r\n\r\n.game-phase-up-subtle-enter-active,\r\n.game-phase-up-subtle-leave-active {\r\n  transition: all 400ms cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n\r\n.game-phase-up-dramatic-enter-active,\r\n.game-phase-up-dramatic-leave-active {\r\n  transition: all 800ms cubic-bezier(0.68, -0.55, 0.265, 1.55);\r\n}\r\n\r\n.game-phase-up-normal-enter-from,\r\n.game-phase-up-subtle-enter-from,\r\n.game-phase-up-dramatic-enter-from {\r\n  opacity: 0;\r\n  transform: translateY(30px) scale(0.95);\r\n}\r\n\r\n.game-phase-up-normal-leave-to,\r\n.game-phase-up-subtle-leave-to,\r\n.game-phase-up-dramatic-leave-to {\r\n  opacity: 0;\r\n  transform: translateY(-30px) scale(1.05);\r\n}\r\n\r\n/* カードスタック遷移 */\r\n.card-stack-up-normal-enter-active,\r\n.card-stack-up-normal-leave-active {\r\n  transition: all 500ms cubic-bezier(0.25, 0.46, 0.45, 0.94);\r\n}\r\n\r\n.card-stack-up-normal-enter-from {\r\n  opacity: 0;\r\n  transform: translateY(20px) scale(0.9) rotateX(15deg);\r\n}\r\n\r\n.card-stack-up-normal-leave-to {\r\n  opacity: 0;\r\n  transform: translateY(-20px) scale(1.1) rotateX(-15deg);\r\n}\r\n\r\n/* スコア変更アニメーション */\r\n.score-change-up-normal-enter-active {\r\n  transition: all 400ms cubic-bezier(0.68, -0.55, 0.265, 1.55);\r\n}\r\n\r\n.score-change-up-normal-leave-active {\r\n  transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n\r\n.score-change-up-normal-enter-from {\r\n  opacity: 0;\r\n  transform: scale(0.8);\r\n}\r\n\r\n.score-change-up-normal-leave-to {\r\n  opacity: 0;\r\n  transform: scale(1.2);\r\n}\r\n\r\n.score-change-up-dramatic-enter-active {\r\n  animation: score-pop-in 600ms cubic-bezier(0.68, -0.55, 0.265, 1.55);\r\n}\r\n\r\n@keyframes score-pop-in {\r\n  0% {\r\n    opacity: 0;\r\n    transform: scale(0.5) rotate(-5deg);\r\n  }\r\n  60% {\r\n    opacity: 1;\r\n    transform: scale(1.15) rotate(2deg);\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    transform: scale(1) rotate(0deg);\r\n  }\r\n}\r\n\r\n/* =================================\r\n   レスポンシブゲームアニメーション\r\n   ================================= */\r\n@media (max-width: 768px) {\r\n  .game-phase-up-normal-enter-from,\r\n  .game-phase-up-subtle-enter-from,\r\n  .game-phase-up-dramatic-enter-from,\r\n  .card-stack-up-normal-enter-from {\r\n    /* モバイルでは控えめなアニメーション */\r\n    transform: translateY(15px) scale(0.98);\r\n  }\r\n  \r\n  .game-phase-up-normal-leave-to,\r\n  .game-phase-up-subtle-leave-to,\r\n  .game-phase-up-dramatic-leave-to,\r\n  .card-stack-up-normal-leave-to {\r\n    transform: translateY(-15px) scale(1.02);\r\n  }\r\n}\r\n\r\n/* =================================\r\n   モーション削減設定\r\n   ================================= */\r\n@media (prefers-reduced-motion: reduce) {\r\n  .fade-left-enter-active,\r\n  .fade-right-enter-active,\r\n  .fade-up-enter-active,\r\n  .fade-down-enter-active,\r\n  .fade-left-leave-active,\r\n  .fade-right-leave-active,\r\n  .fade-up-leave-active,\r\n  .fade-down-leave-active,\r\n  .slide-left-enter-active,\r\n  .slide-left-leave-active,\r\n  .slide-right-enter-active,\r\n  .slide-right-leave-active,\r\n  .slide-up-enter-active,\r\n  .slide-up-leave-active,\r\n  .slide-down-enter-active,\r\n  .slide-down-leave-active,\r\n  .zoom-left-enter-active,\r\n  .zoom-right-enter-active,\r\n  .zoom-up-enter-active,\r\n  .zoom-down-enter-active,\r\n  .zoom-left-leave-active,\r\n  .zoom-right-leave-active,\r\n  .zoom-up-leave-active,\r\n  .zoom-down-leave-active,\r\n  .flip-left-enter-active,\r\n  .flip-left-leave-active,\r\n  .flip-right-enter-active,\r\n  .flip-right-leave-active,\r\n  .elastic-left-enter-active,\r\n  .elastic-right-enter-active,\r\n  .elastic-up-enter-active,\r\n  .elastic-down-enter-active,\r\n  .elastic-left-leave-active,\r\n  .elastic-right-leave-active,\r\n  .elastic-up-leave-active,\r\n  .elastic-down-leave-active,\r\n  .game-phase-up-normal-enter-active,\r\n  .game-phase-up-subtle-enter-active,\r\n  .game-phase-up-dramatic-enter-active,\r\n  .game-phase-up-normal-leave-active,\r\n  .game-phase-up-subtle-leave-active,\r\n  .game-phase-up-dramatic-leave-active,\r\n  .card-stack-up-normal-enter-active,\r\n  .card-stack-up-normal-leave-active,\r\n  .score-change-up-normal-enter-active,\r\n  .score-change-up-normal-leave-active,\r\n  .score-change-up-dramatic-enter-active {\r\n    transition: opacity 200ms ease !important;\r\n    transform: none !important;\r\n    animation: none !important;\r\n  }\r\n\r\n  .slide-left-enter-from,\r\n  .slide-right-enter-from,\r\n  .slide-up-enter-from,\r\n  .slide-down-enter-from,\r\n  .slide-left-leave-to,\r\n  .slide-right-leave-to,\r\n  .slide-up-leave-to,\r\n  .slide-down-leave-to,\r\n  .zoom-left-enter-from,\r\n  .zoom-right-enter-from,\r\n  .zoom-up-enter-from,\r\n  .zoom-down-enter-from,\r\n  .zoom-left-leave-to,\r\n  .zoom-right-leave-to,\r\n  .zoom-up-leave-to,\r\n  .zoom-down-leave-to,\r\n  .flip-left-enter-from,\r\n  .flip-right-enter-from,\r\n  .flip-left-leave-to,\r\n  .flip-right-leave-to,\r\n  .elastic-left-enter-from,\r\n  .elastic-right-enter-from,\r\n  .elastic-up-enter-from,\r\n  .elastic-down-enter-from,\r\n  .elastic-left-leave-to,\r\n  .elastic-right-leave-to,\r\n  .elastic-up-leave-to,\r\n  .elastic-down-leave-to,\r\n  .game-phase-up-normal-enter-from,\r\n  .game-phase-up-subtle-enter-from,\r\n  .game-phase-up-dramatic-enter-from,\r\n  .game-phase-up-normal-leave-to,\r\n  .game-phase-up-subtle-leave-to,\r\n  .game-phase-up-dramatic-leave-to,\r\n  .card-stack-up-normal-enter-from,\r\n  .card-stack-up-normal-leave-to,\r\n  .score-change-up-normal-enter-from,\r\n  .score-change-up-normal-leave-to {\r\n    transform: none !important;\r\n  }\r\n}\r\n</style>","/**\r\n * スクリーンリーダー対応マネージャー\r\n * ARIA Live Regionsとセマンティックマークアップによる\r\n * アクセシブルなゲーム状態通知システム\r\n */\r\n\r\nexport interface AnnouncementOptions {\r\n  priority: 'polite' | 'assertive'\r\n  persist?: boolean\r\n  delay?: number\r\n  interrupt?: boolean\r\n}\r\n\r\nexport interface GameStateAnnouncement {\r\n  type: 'game_start' | 'turn_change' | 'card_draw' | 'challenge_start' | 'challenge_result' | 'game_end'\r\n  message: string\r\n  context?: Record<string, any>\r\n}\r\n\r\nexport class ScreenReaderManager {\r\n  private liveRegions: Map<string, HTMLElement> = new Map()\r\n  private gameStatusElement: HTMLElement\r\n  private cardDetailsElement: HTMLElement\r\n  private announcementQueue: Array<{ message: string; options: AnnouncementOptions }> = []\r\n  private isProcessingQueue: boolean = false\r\n\r\n  constructor() {\r\n    this.createLiveRegions()\r\n    this.createGameStatusElements()\r\n    this.setupAriaDescriptions()\r\n  }\r\n\r\n  /**\r\n   * メッセージをアナウンス\r\n   */\r\n  announce(message: string, options: AnnouncementOptions = { priority: 'polite' }): void {\r\n    if (options.interrupt) {\r\n      this.clearQueue()\r\n    }\r\n\r\n    this.announcementQueue.push({ message, options })\r\n    this.processQueue()\r\n  }\r\n\r\n  /**\r\n   * ゲーム状態の変更をアナウンス\r\n   */\r\n  announceGameState(announcement: GameStateAnnouncement): void {\r\n    const { type, message, context } = announcement\r\n    \r\n    // ゲーム状態要素を更新\r\n    this.updateGameStatus(type, message, context)\r\n    \r\n    // 適切な優先度でアナウンス\r\n    const priority = this.getPriorityForGameState(type)\r\n    this.announce(message, { priority, persist: true })\r\n  }\r\n\r\n  /**\r\n   * カード情報の詳細説明\r\n   */\r\n  announceCardDetails(card: any): void {\r\n    const description = this.createCardDescription(card)\r\n    this.cardDetailsElement.textContent = description\r\n    this.announce(`カード選択: ${description}`, { priority: 'polite' })\r\n  }\r\n\r\n  /**\r\n   * エラーメッセージのアナウンス\r\n   */\r\n  announceError(message: string): void {\r\n    this.announce(`エラー: ${message}`, { priority: 'assertive', interrupt: true })\r\n  }\r\n\r\n  /**\r\n   * 成功メッセージのアナウンス\r\n   */\r\n  announceSuccess(message: string): void {\r\n    this.announce(`成功: ${message}`, { priority: 'polite' })\r\n  }\r\n\r\n  /**\r\n   * 進捗状況のアナウンス\r\n   */\r\n  announceProgress(current: number, total: number, description: string): void {\r\n    const percentage = Math.round((current / total) * 100)\r\n    const message = `${description}: ${current}/${total} (${percentage}%)`\r\n    this.announce(message, { priority: 'polite' })\r\n  }\r\n\r\n  /**\r\n   * 選択肢の説明\r\n   */\r\n  announceOptions(options: string[], currentIndex: number): void {\r\n    const totalOptions = options.length\r\n    const currentOption = options[currentIndex]\r\n    const message = `選択肢 ${currentIndex + 1}/${totalOptions}: ${currentOption}`\r\n    this.announce(message, { priority: 'polite' })\r\n  }\r\n\r\n  /**\r\n   * タイマー情報のアナウンス\r\n   */\r\n  announceTimer(remainingTime: number, unit: 'seconds' | 'minutes' = 'seconds'): void {\r\n    const unitText = unit === 'seconds' ? '秒' : '分'\r\n    let message: string\r\n\r\n    if (remainingTime <= 0) {\r\n      message = '時間切れです'\r\n    } else if (remainingTime <= 10 && unit === 'seconds') {\r\n      message = `残り${remainingTime}${unitText}`\r\n    } else if (remainingTime <= 60 && unit === 'seconds') {\r\n      message = `残り${remainingTime}${unitText}`\r\n    } else {\r\n      message = `残り時間: ${remainingTime}${unitText}`\r\n    }\r\n\r\n    const priority = remainingTime <= 10 ? 'assertive' : 'polite'\r\n    this.announce(message, { priority })\r\n  }\r\n\r\n  /**\r\n   * 画面の状態変更をアナウンス\r\n   */\r\n  announceScreenChange(screenName: string, description?: string): void {\r\n    let message = `画面が変更されました: ${screenName}`\r\n    if (description) {\r\n      message += `. ${description}`\r\n    }\r\n    this.announce(message, { priority: 'assertive', persist: true })\r\n  }\r\n\r\n  /**\r\n   * キーボードショートカットのヘルプ\r\n   */\r\n  announceKeyboardHelp(): void {\r\n    const shortcuts = [\r\n      'Tabキーで次の要素に移動',\r\n      'Shift+Tabで前の要素に移動',\r\n      'Enterキーまたはスペースキーで選択',\r\n      'F1キーでヘルプを表示'\r\n    ]\r\n    \r\n    const message = `キーボードショートカット: ${shortcuts.join(', ')}`\r\n    this.announce(message, { priority: 'polite', persist: true })\r\n  }\r\n\r\n  /**\r\n   * ゲーム統計のアナウンス\r\n   */\r\n  announceGameStats(stats: Record<string, number | string>): void {\r\n    const statMessages = Object.entries(stats).map(([key, value]) => {\r\n      return `${this.translateStatKey(key)}: ${value}`\r\n    })\r\n    \r\n    const message = `ゲーム統計. ${statMessages.join(', ')}`\r\n    this.announce(message, { priority: 'polite', persist: true })\r\n  }\r\n\r\n  /**\r\n   * 領域の状態説明\r\n   */\r\n  announceRegionStatus(regionName: string, items: any[]): void {\r\n    const itemCount = items.length\r\n    const itemType = this.getItemType(items)\r\n    \r\n    let message: string\r\n    if (itemCount === 0) {\r\n      message = `${regionName}は空です`\r\n    } else if (itemCount === 1) {\r\n      message = `${regionName}に${itemType}が1つあります`\r\n    } else {\r\n      message = `${regionName}に${itemType}が${itemCount}個あります`\r\n    }\r\n    \r\n    this.announce(message, { priority: 'polite' })\r\n  }\r\n\r\n  /**\r\n   * ドラッグ&ドロップ操作のアナウンス\r\n   */\r\n  announceDragDrop(phase: 'start' | 'move' | 'drop' | 'cancel', details: any): void {\r\n    let message: string\r\n    \r\n    switch (phase) {\r\n      case 'start':\r\n        message = `${details.itemName}のドラッグを開始しました`\r\n        break\r\n      case 'move':\r\n        message = `${details.targetName}の上に移動中`\r\n        break\r\n      case 'drop':\r\n        message = details.success \r\n          ? `${details.targetName}に${details.itemName}をドロップしました`\r\n          : `ドロップに失敗しました: ${details.reason}`\r\n        break\r\n      case 'cancel':\r\n        message = 'ドラッグ操作をキャンセルしました'\r\n        break\r\n    }\r\n    \r\n    const priority = phase === 'drop' && !details.success ? 'assertive' : 'polite'\r\n    this.announce(message, { priority })\r\n  }\r\n\r\n  private createLiveRegions(): void {\r\n    // Polite live region\r\n    const politeRegion = document.createElement('div')\r\n    politeRegion.setAttribute('aria-live', 'polite')\r\n    politeRegion.setAttribute('aria-relevant', 'additions text')\r\n    politeRegion.setAttribute('aria-atomic', 'false')\r\n    politeRegion.className = 'sr-only'\r\n    politeRegion.id = 'live-region-polite'\r\n    document.body.appendChild(politeRegion)\r\n    this.liveRegions.set('polite', politeRegion)\r\n\r\n    // Assertive live region\r\n    const assertiveRegion = document.createElement('div')\r\n    assertiveRegion.setAttribute('aria-live', 'assertive')\r\n    assertiveRegion.setAttribute('aria-relevant', 'additions text')\r\n    assertiveRegion.setAttribute('aria-atomic', 'true')\r\n    assertiveRegion.className = 'sr-only'\r\n    assertiveRegion.id = 'live-region-assertive'\r\n    document.body.appendChild(assertiveRegion)\r\n    this.liveRegions.set('assertive', assertiveRegion)\r\n  }\r\n\r\n  private createGameStatusElements(): void {\r\n    // ゲーム状態を説明する要素\r\n    this.gameStatusElement = document.createElement('div')\r\n    this.gameStatusElement.id = 'game-status'\r\n    this.gameStatusElement.className = 'sr-only'\r\n    this.gameStatusElement.setAttribute('aria-label', 'ゲーム状態')\r\n    document.body.appendChild(this.gameStatusElement)\r\n\r\n    // カード詳細を説明する要素\r\n    this.cardDetailsElement = document.createElement('div')\r\n    this.cardDetailsElement.id = 'card-details'\r\n    this.cardDetailsElement.className = 'sr-only'\r\n    this.cardDetailsElement.setAttribute('aria-label', 'カード詳細')\r\n    document.body.appendChild(this.cardDetailsElement)\r\n  }\r\n\r\n  private setupAriaDescriptions(): void {\r\n    // Screen Reader Only用のCSSを追加\r\n    const style = document.createElement('style')\r\n    style.textContent = `\r\n      .sr-only {\r\n        position: absolute;\r\n        width: 1px;\r\n        height: 1px;\r\n        padding: 0;\r\n        margin: -1px;\r\n        overflow: hidden;\r\n        clip: rect(0, 0, 0, 0);\r\n        white-space: nowrap;\r\n        border: 0;\r\n      }\r\n      \r\n      .sr-only-focusable:focus {\r\n        position: static;\r\n        width: auto;\r\n        height: auto;\r\n        padding: inherit;\r\n        margin: inherit;\r\n        overflow: visible;\r\n        clip: auto;\r\n        white-space: normal;\r\n      }\r\n    `\r\n    document.head.appendChild(style)\r\n  }\r\n\r\n  private async processQueue(): Promise<void> {\r\n    if (this.isProcessingQueue || this.announcementQueue.length === 0) return\r\n\r\n    this.isProcessingQueue = true\r\n\r\n    while (this.announcementQueue.length > 0) {\r\n      const { message, options } = this.announcementQueue.shift()!\r\n      \r\n      if (options.delay) {\r\n        await this.delay(options.delay)\r\n      }\r\n\r\n      await this.performAnnouncement(message, options)\r\n      \r\n      // メッセージ間の間隔\r\n      await this.delay(100)\r\n    }\r\n\r\n    this.isProcessingQueue = false\r\n  }\r\n\r\n  private async performAnnouncement(message: string, options: AnnouncementOptions): Promise<void> {\r\n    const region = this.liveRegions.get(options.priority)\r\n    if (!region) return\r\n\r\n    // 既存のメッセージをクリア（必要に応じて）\r\n    if (!options.persist) {\r\n      region.textContent = ''\r\n      await this.delay(10) // DOM更新を待つ\r\n    }\r\n\r\n    // 新しいメッセージを追加\r\n    if (options.persist) {\r\n      const messageElement = document.createElement('div')\r\n      messageElement.textContent = message\r\n      region.appendChild(messageElement)\r\n      \r\n      // 一定時間後に削除（永続化しない場合）\r\n      setTimeout(() => {\r\n        if (messageElement.parentNode) {\r\n          messageElement.parentNode.removeChild(messageElement)\r\n        }\r\n      }, 5000)\r\n    } else {\r\n      region.textContent = message\r\n    }\r\n  }\r\n\r\n  private updateGameStatus(type: string, message: string, context?: Record<string, any>): void {\r\n    const statusInfo = {\r\n      type,\r\n      message,\r\n      timestamp: new Date().toISOString(),\r\n      ...context\r\n    }\r\n\r\n    this.gameStatusElement.setAttribute('data-game-state', JSON.stringify(statusInfo))\r\n    this.gameStatusElement.textContent = message\r\n  }\r\n\r\n  private createCardDescription(card: any): string {\r\n    const parts = [card.name]\r\n    \r\n    if (card.type) {\r\n      parts.push(`種類: ${this.translateCardType(card.type)}`)\r\n    }\r\n    \r\n    if (card.power !== undefined) {\r\n      parts.push(`パワー: ${card.power}`)\r\n    }\r\n    \r\n    if (card.cost !== undefined) {\r\n      parts.push(`コスト: ${card.cost}`)\r\n    }\r\n    \r\n    if (card.description) {\r\n      parts.push(`説明: ${card.description}`)\r\n    }\r\n\r\n    return parts.join(', ')\r\n  }\r\n\r\n  private getPriorityForGameState(type: string): 'polite' | 'assertive' {\r\n    const assertiveStates = ['challenge_result', 'game_end', 'error']\r\n    return assertiveStates.includes(type) ? 'assertive' : 'polite'\r\n  }\r\n\r\n  private translateStatKey(key: string): string {\r\n    const translations: Record<string, string> = {\r\n      'vitality': '活力',\r\n      'turn': 'ターン',\r\n      'cardsInHand': '手札枚数',\r\n      'challengesCompleted': '完了チャレンジ数',\r\n      'insuranceCards': '保険カード数'\r\n    }\r\n    return translations[key] || key\r\n  }\r\n\r\n  private translateCardType(type: string): string {\r\n    const translations: Record<string, string> = {\r\n      'life': 'ライフカード',\r\n      'insurance': '保険カード',\r\n      'challenge': 'チャレンジカード',\r\n      'dream': 'ドリームカード'\r\n    }\r\n    return translations[type] || type\r\n  }\r\n\r\n  private getItemType(items: any[]): string {\r\n    if (items.length === 0) return 'アイテム'\r\n    \r\n    const firstItem = items[0]\r\n    if (firstItem.type) {\r\n      return this.translateCardType(firstItem.type)\r\n    }\r\n    \r\n    return 'アイテム'\r\n  }\r\n\r\n  private clearQueue(): void {\r\n    this.announcementQueue = []\r\n    this.liveRegions.forEach(region => {\r\n      region.textContent = ''\r\n    })\r\n  }\r\n\r\n  private delay(ms: number): Promise<void> {\r\n    return new Promise(resolve => setTimeout(resolve, ms))\r\n  }\r\n\r\n  /**\r\n   * クリーンアップ\r\n   */\r\n  destroy(): void {\r\n    this.liveRegions.forEach(region => {\r\n      if (region.parentNode) {\r\n        region.parentNode.removeChild(region)\r\n      }\r\n    })\r\n    \r\n    if (this.gameStatusElement?.parentNode) {\r\n      this.gameStatusElement.parentNode.removeChild(this.gameStatusElement)\r\n    }\r\n    \r\n    if (this.cardDetailsElement?.parentNode) {\r\n      this.cardDetailsElement.parentNode.removeChild(this.cardDetailsElement)\r\n    }\r\n    \r\n    this.clearQueue()\r\n  }\r\n}","<script setup lang=\"ts\">\r\nimport { ref, computed, onMounted, watch } from 'vue'\r\nimport { ScreenReaderManager } from './ScreenReaderManager'\r\n\r\n// アクセシビリティ設定の型定義\r\ninterface AccessibilitySettings {\r\n  // 視覚設定\r\n  colorScheme: 'default' | 'protanopia' | 'deuteranopia' | 'tritanopia' | 'achromatopsia'\r\n  highContrast: boolean\r\n  fontSize: 'small' | 'medium' | 'large' | 'extra-large'\r\n  \r\n  // モーション設定\r\n  reduceMotion: boolean\r\n  animationSpeed: number // 0.0 - 2.0\r\n  \r\n  // オーディオ設定\r\n  screenReaderEnabled: boolean\r\n  audioDescriptions: boolean\r\n  soundEffectsVolume: number // 0 - 100\r\n  \r\n  // インタラクション設定\r\n  stickyKeys: boolean\r\n  keyRepeatDelay: number // ミリ秒\r\n  touchTargetSize: 'default' | 'large' | 'extra-large'\r\n}\r\n\r\nconst props = defineProps<{\r\n  isOpen: boolean\r\n}>()\r\n\r\nconst emit = defineEmits<{\r\n  close: []\r\n  settingsChanged: [settings: AccessibilitySettings]\r\n}>()\r\n\r\n// デフォルト設定\r\nconst defaultSettings: AccessibilitySettings = {\r\n  colorScheme: 'default',\r\n  highContrast: false,\r\n  fontSize: 'medium',\r\n  reduceMotion: false,\r\n  animationSpeed: 1.0,\r\n  screenReaderEnabled: false,\r\n  audioDescriptions: false,\r\n  soundEffectsVolume: 70,\r\n  stickyKeys: false,\r\n  keyRepeatDelay: 500,\r\n  touchTargetSize: 'default'\r\n}\r\n\r\nconst settings = ref<AccessibilitySettings>({ ...defaultSettings })\r\nconst screenReaderManager = ref<ScreenReaderManager | null>(null)\r\n\r\n// 色覚シミュレーションフィルター\r\nconst colorFilters = {\r\n  default: '',\r\n  protanopia: `\r\n    <filter id=\"protanopia\">\r\n      <feColorMatrix type=\"matrix\" values=\"\r\n        0.567, 0.433, 0,     0, 0\r\n        0.558, 0.442, 0,     0, 0\r\n        0,     0.242, 0.758, 0, 0\r\n        0,     0,     0,     1, 0\r\n      \"/>\r\n    </filter>\r\n  `,\r\n  deuteranopia: `\r\n    <filter id=\"deuteranopia\">\r\n      <feColorMatrix type=\"matrix\" values=\"\r\n        0.625, 0.375, 0,   0, 0\r\n        0.7,   0.3,   0,   0, 0\r\n        0,     0.3,   0.7, 0, 0\r\n        0,     0,     0,   1, 0\r\n      \"/>\r\n    </filter>\r\n  `,\r\n  tritanopia: `\r\n    <filter id=\"tritanopia\">\r\n      <feColorMatrix type=\"matrix\" values=\"\r\n        0.95, 0.05,  0,     0, 0\r\n        0,    0.433, 0.567, 0, 0\r\n        0,    0.475, 0.525, 0, 0\r\n        0,    0,     0,     1, 0\r\n      \"/>\r\n    </filter>\r\n  `,\r\n  achromatopsia: `\r\n    <filter id=\"achromatopsia\">\r\n      <feColorMatrix type=\"matrix\" values=\"\r\n        0.299, 0.587, 0.114, 0, 0\r\n        0.299, 0.587, 0.114, 0, 0\r\n        0.299, 0.587, 0.114, 0, 0\r\n        0,     0,     0,     1, 0\r\n      \"/>\r\n    </filter>\r\n  `\r\n}\r\n\r\n// 設定の永続化\r\nconst saveSettings = () => {\r\n  localStorage.setItem('accessibility-settings', JSON.stringify(settings.value))\r\n  emit('settingsChanged', settings.value)\r\n  applySettings()\r\n}\r\n\r\nconst loadSettings = () => {\r\n  const saved = localStorage.getItem('accessibility-settings')\r\n  if (saved) {\r\n    try {\r\n      settings.value = { ...defaultSettings, ...JSON.parse(saved) }\r\n    } catch (e) {\r\n      console.error('Failed to load accessibility settings:', e)\r\n    }\r\n  }\r\n}\r\n\r\n// 設定の適用\r\nconst applySettings = () => {\r\n  const root = document.documentElement\r\n  \r\n  // 色覚異常フィルター\r\n  if (settings.value.colorScheme !== 'default') {\r\n    root.style.filter = `url(#${settings.value.colorScheme})`\r\n  } else {\r\n    root.style.filter = ''\r\n  }\r\n  \r\n  // ハイコントラストモード\r\n  root.classList.toggle('high-contrast', settings.value.highContrast)\r\n  \r\n  // フォントサイズ\r\n  const fontSizeMap = {\r\n    'small': '14px',\r\n    'medium': '16px',\r\n    'large': '20px',\r\n    'extra-large': '24px'\r\n  }\r\n  root.style.setProperty('--base-font-size', fontSizeMap[settings.value.fontSize])\r\n  \r\n  // モーション設定\r\n  root.classList.toggle('reduce-motion', settings.value.reduceMotion)\r\n  root.style.setProperty('--animation-speed-multiplier', String(settings.value.animationSpeed))\r\n  \r\n  // タッチターゲットサイズ\r\n  const touchSizeMap = {\r\n    'default': '44px',\r\n    'large': '56px',\r\n    'extra-large': '72px'\r\n  }\r\n  root.style.setProperty('--touch-target-size', touchSizeMap[settings.value.touchTargetSize])\r\n  \r\n  // スクリーンリーダー通知\r\n  if (screenReaderManager.value) {\r\n    screenReaderManager.value.announce('アクセシビリティ設定が更新されました', { priority: 'polite' })\r\n  }\r\n}\r\n\r\n// プレビュー機能\r\nconst previewSettings = (setting: keyof AccessibilitySettings, value: any) => {\r\n  const originalValue = settings.value[setting]\r\n  settings.value[setting] = value\r\n  applySettings()\r\n  \r\n  // 3秒後に元に戻す\r\n  setTimeout(() => {\r\n    if (settings.value[setting] === value) {\r\n      settings.value[setting] = originalValue\r\n      applySettings()\r\n    }\r\n  }, 3000)\r\n}\r\n\r\n// 設定のリセット\r\nconst resetSettings = () => {\r\n  settings.value = { ...defaultSettings }\r\n  saveSettings()\r\n  \r\n  if (screenReaderManager.value) {\r\n    screenReaderManager.value.announce('アクセシビリティ設定をリセットしました', { priority: 'assertive' })\r\n  }\r\n}\r\n\r\n// ショートカットキーの設定\r\nconst setupKeyboardShortcuts = () => {\r\n  const handleKeyDown = (e: KeyboardEvent) => {\r\n    if (!props.isOpen) return\r\n    \r\n    // Ctrl + Alt + キーの組み合わせ\r\n    if (e.ctrlKey && e.altKey) {\r\n      switch (e.key) {\r\n        case 'c':\r\n          // 色覚設定を循環\r\n          const schemes: AccessibilitySettings['colorScheme'][] = \r\n            ['default', 'protanopia', 'deuteranopia', 'tritanopia', 'achromatopsia']\r\n          const currentIndex = schemes.indexOf(settings.value.colorScheme)\r\n          settings.value.colorScheme = schemes[(currentIndex + 1) % schemes.length]\r\n          saveSettings()\r\n          break\r\n          \r\n        case 'h':\r\n          // ハイコントラスト切り替え\r\n          settings.value.highContrast = !settings.value.highContrast\r\n          saveSettings()\r\n          break\r\n          \r\n        case 'm':\r\n          // モーション削減切り替え\r\n          settings.value.reduceMotion = !settings.value.reduceMotion\r\n          saveSettings()\r\n          break\r\n      }\r\n    }\r\n  }\r\n  \r\n  window.addEventListener('keydown', handleKeyDown)\r\n  return () => window.removeEventListener('keydown', handleKeyDown)\r\n}\r\n\r\nonMounted(() => {\r\n  loadSettings()\r\n  applySettings()\r\n  screenReaderManager.value = new ScreenReaderManager()\r\n  const cleanup = setupKeyboardShortcuts()\r\n  \r\n  // クリーンアップ\r\n  return () => {\r\n    cleanup()\r\n    screenReaderManager.value?.destroy()\r\n  }\r\n})\r\n\r\n// 設定変更の監視\r\nwatch(() => settings.value, () => {\r\n  saveSettings()\r\n}, { deep: true })\r\n</script>\r\n\r\n<template>\r\n  <Transition name=\"modal\">\r\n    <div v-if=\"isOpen\" class=\"accessibility-modal\" @click.self=\"emit('close')\">\r\n      <div \r\n        class=\"modal-content\"\r\n        role=\"dialog\"\r\n        aria-labelledby=\"accessibility-title\"\r\n        aria-describedby=\"accessibility-description\"\r\n      >\r\n        <!-- SVGフィルター定義 -->\r\n        <svg style=\"position: absolute; width: 0; height: 0;\">\r\n          <defs v-html=\"Object.values(colorFilters).join('')\"></defs>\r\n        </svg>\r\n        \r\n        <div class=\"modal-header\">\r\n          <h2 id=\"accessibility-title\">アクセシビリティ設定</h2>\r\n          <button \r\n            @click=\"emit('close')\"\r\n            class=\"close-button\"\r\n            aria-label=\"設定を閉じる\"\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n        </div>\r\n        \r\n        <div id=\"accessibility-description\" class=\"sr-only\">\r\n          ゲームのアクセシビリティオプションを設定できます。\r\n          Ctrl+Alt+Cで色覚設定、Ctrl+Alt+Hでハイコントラスト、Ctrl+Alt+Mでモーション削減を切り替えられます。\r\n        </div>\r\n        \r\n        <div class=\"modal-body\">\r\n          <!-- 視覚設定 -->\r\n          <section class=\"settings-section\">\r\n            <h3>視覚設定</h3>\r\n            \r\n            <div class=\"setting-item\">\r\n              <label for=\"color-scheme\">色覚サポート</label>\r\n              <select \r\n                id=\"color-scheme\"\r\n                v-model=\"settings.colorScheme\"\r\n                @change=\"saveSettings\"\r\n              >\r\n                <option value=\"default\">標準</option>\r\n                <option value=\"protanopia\">赤色覚異常（1型）</option>\r\n                <option value=\"deuteranopia\">緑色覚異常（2型）</option>\r\n                <option value=\"tritanopia\">青色覚異常（3型）</option>\r\n                <option value=\"achromatopsia\">全色覚異常</option>\r\n              </select>\r\n              <button \r\n                @click=\"previewSettings('colorScheme', settings.colorScheme)\"\r\n                class=\"preview-button\"\r\n                aria-label=\"色覚設定をプレビュー\"\r\n              >\r\n                プレビュー\r\n              </button>\r\n            </div>\r\n            \r\n            <div class=\"setting-item\">\r\n              <label for=\"high-contrast\">\r\n                <input \r\n                  id=\"high-contrast\"\r\n                  type=\"checkbox\"\r\n                  v-model=\"settings.highContrast\"\r\n                  @change=\"saveSettings\"\r\n                >\r\n                ハイコントラストモード\r\n              </label>\r\n              <span class=\"setting-description\">\r\n                コントラストを高めて視認性を向上させます\r\n              </span>\r\n            </div>\r\n            \r\n            <div class=\"setting-item\">\r\n              <label for=\"font-size\">文字サイズ</label>\r\n              <select \r\n                id=\"font-size\"\r\n                v-model=\"settings.fontSize\"\r\n                @change=\"saveSettings\"\r\n              >\r\n                <option value=\"small\">小（14px）</option>\r\n                <option value=\"medium\">中（16px）</option>\r\n                <option value=\"large\">大（20px）</option>\r\n                <option value=\"extra-large\">特大（24px）</option>\r\n              </select>\r\n            </div>\r\n          </section>\r\n          \r\n          <!-- モーション設定 -->\r\n          <section class=\"settings-section\">\r\n            <h3>モーション設定</h3>\r\n            \r\n            <div class=\"setting-item\">\r\n              <label for=\"reduce-motion\">\r\n                <input \r\n                  id=\"reduce-motion\"\r\n                  type=\"checkbox\"\r\n                  v-model=\"settings.reduceMotion\"\r\n                  @change=\"saveSettings\"\r\n                >\r\n                モーションを削減\r\n              </label>\r\n              <span class=\"setting-description\">\r\n                アニメーションを最小限に抑えます\r\n              </span>\r\n            </div>\r\n            \r\n            <div class=\"setting-item\" v-if=\"!settings.reduceMotion\">\r\n              <label for=\"animation-speed\">アニメーション速度</label>\r\n              <input \r\n                id=\"animation-speed\"\r\n                type=\"range\"\r\n                min=\"0.1\"\r\n                max=\"2.0\"\r\n                step=\"0.1\"\r\n                v-model.number=\"settings.animationSpeed\"\r\n                @change=\"saveSettings\"\r\n              >\r\n              <span class=\"range-value\">{{ settings.animationSpeed }}x</span>\r\n            </div>\r\n          </section>\r\n          \r\n          <!-- オーディオ設定 -->\r\n          <section class=\"settings-section\">\r\n            <h3>オーディオ設定</h3>\r\n            \r\n            <div class=\"setting-item\">\r\n              <label for=\"screen-reader\">\r\n                <input \r\n                  id=\"screen-reader\"\r\n                  type=\"checkbox\"\r\n                  v-model=\"settings.screenReaderEnabled\"\r\n                  @change=\"saveSettings\"\r\n                >\r\n                スクリーンリーダー対応を有効化\r\n              </label>\r\n            </div>\r\n            \r\n            <div class=\"setting-item\">\r\n              <label for=\"audio-descriptions\">\r\n                <input \r\n                  id=\"audio-descriptions\"\r\n                  type=\"checkbox\"\r\n                  v-model=\"settings.audioDescriptions\"\r\n                  @change=\"saveSettings\"\r\n                >\r\n                音声説明を有効化\r\n              </label>\r\n            </div>\r\n            \r\n            <div class=\"setting-item\">\r\n              <label for=\"sound-volume\">効果音の音量</label>\r\n              <input \r\n                id=\"sound-volume\"\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                step=\"5\"\r\n                v-model.number=\"settings.soundEffectsVolume\"\r\n                @change=\"saveSettings\"\r\n              >\r\n              <span class=\"range-value\">{{ settings.soundEffectsVolume }}%</span>\r\n            </div>\r\n          </section>\r\n          \r\n          <!-- インタラクション設定 -->\r\n          <section class=\"settings-section\">\r\n            <h3>インタラクション設定</h3>\r\n            \r\n            <div class=\"setting-item\">\r\n              <label for=\"sticky-keys\">\r\n                <input \r\n                  id=\"sticky-keys\"\r\n                  type=\"checkbox\"\r\n                  v-model=\"settings.stickyKeys\"\r\n                  @change=\"saveSettings\"\r\n                >\r\n                スティッキーキー\r\n              </label>\r\n              <span class=\"setting-description\">\r\n                修飾キーを一度に押す必要がありません\r\n              </span>\r\n            </div>\r\n            \r\n            <div class=\"setting-item\">\r\n              <label for=\"touch-target-size\">タッチターゲットサイズ</label>\r\n              <select \r\n                id=\"touch-target-size\"\r\n                v-model=\"settings.touchTargetSize\"\r\n                @change=\"saveSettings\"\r\n              >\r\n                <option value=\"default\">標準（44px）</option>\r\n                <option value=\"large\">大（56px）</option>\r\n                <option value=\"extra-large\">特大（72px）</option>\r\n              </select>\r\n            </div>\r\n          </section>\r\n        </div>\r\n        \r\n        <div class=\"modal-footer\">\r\n          <button \r\n            @click=\"resetSettings\"\r\n            class=\"reset-button\"\r\n            aria-label=\"すべての設定をリセット\"\r\n          >\r\n            設定をリセット\r\n          </button>\r\n          <button \r\n            @click=\"emit('close')\"\r\n            class=\"save-button\"\r\n            aria-label=\"設定を保存して閉じる\"\r\n          >\r\n            保存して閉じる\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </Transition>\r\n</template>\r\n\r\n<style scoped>\r\n.accessibility-modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: var(--z-modal);\r\n  padding: var(--space-md);\r\n}\r\n\r\n.modal-content {\r\n  background: var(--bg-primary);\r\n  border-radius: 12px;\r\n  max-width: 600px;\r\n  width: 100%;\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n  box-shadow: var(--shadow-card);\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: var(--space-lg);\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.modal-header h2 {\r\n  margin: 0;\r\n  color: var(--primary-light);\r\n  font-size: var(--text-2xl);\r\n}\r\n\r\n.close-button {\r\n  background: none;\r\n  border: none;\r\n  color: rgba(255, 255, 255, 0.6);\r\n  font-size: var(--text-2xl);\r\n  cursor: pointer;\r\n  padding: var(--space-xs);\r\n  width: var(--touch-target-min);\r\n  height: var(--touch-target-min);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 4px;\r\n  transition: all var(--transition-fast);\r\n}\r\n\r\n.close-button:hover {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  color: white;\r\n}\r\n\r\n.close-button:focus {\r\n  outline: 2px solid var(--primary-light);\r\n  outline-offset: 2px;\r\n}\r\n\r\n.modal-body {\r\n  padding: var(--space-lg);\r\n}\r\n\r\n.settings-section {\r\n  margin-bottom: var(--space-2xl);\r\n}\r\n\r\n.settings-section:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.settings-section h3 {\r\n  color: white;\r\n  font-size: var(--text-lg);\r\n  margin-bottom: var(--space-md);\r\n  padding-bottom: var(--space-xs);\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.setting-item {\r\n  margin-bottom: var(--space-lg);\r\n  display: flex;\r\n  align-items: center;\r\n  gap: var(--space-md);\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.setting-item label {\r\n  color: rgba(255, 255, 255, 0.9);\r\n  font-size: var(--text-base);\r\n  display: flex;\r\n  align-items: center;\r\n  gap: var(--space-sm);\r\n  min-width: 200px;\r\n}\r\n\r\n.setting-item select,\r\n.setting-item input[type=\"range\"] {\r\n  flex: 1;\r\n  min-width: 150px;\r\n  padding: var(--space-sm);\r\n  background: rgba(255, 255, 255, 0.1);\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  border-radius: 4px;\r\n  color: white;\r\n  font-size: var(--text-base);\r\n}\r\n\r\n.setting-item select:focus,\r\n.setting-item input:focus {\r\n  outline: 2px solid var(--primary-light);\r\n  outline-offset: 2px;\r\n}\r\n\r\n.setting-item input[type=\"checkbox\"] {\r\n  width: 20px;\r\n  height: 20px;\r\n  cursor: pointer;\r\n}\r\n\r\n.setting-description {\r\n  display: block;\r\n  width: 100%;\r\n  font-size: var(--text-sm);\r\n  color: rgba(255, 255, 255, 0.6);\r\n  margin-top: var(--space-xs);\r\n}\r\n\r\n.preview-button {\r\n  padding: var(--space-xs) var(--space-sm);\r\n  background: rgba(129, 140, 248, 0.2);\r\n  border: 1px solid rgba(129, 140, 248, 0.4);\r\n  border-radius: 4px;\r\n  color: var(--primary-light);\r\n  font-size: var(--text-sm);\r\n  cursor: pointer;\r\n  transition: all var(--transition-fast);\r\n}\r\n\r\n.preview-button:hover {\r\n  background: rgba(129, 140, 248, 0.3);\r\n  border-color: rgba(129, 140, 248, 0.6);\r\n}\r\n\r\n.range-value {\r\n  color: var(--primary-light);\r\n  font-size: var(--text-sm);\r\n  min-width: 50px;\r\n  text-align: right;\r\n}\r\n\r\n.modal-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: var(--space-lg);\r\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.reset-button,\r\n.save-button {\r\n  padding: var(--space-sm) var(--space-lg);\r\n  border-radius: 8px;\r\n  font-size: var(--text-base);\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all var(--transition-normal);\r\n  min-height: var(--touch-target-min);\r\n}\r\n\r\n.reset-button {\r\n  background: rgba(239, 68, 68, 0.2);\r\n  border: 1px solid rgba(239, 68, 68, 0.4);\r\n  color: #EF4444;\r\n}\r\n\r\n.reset-button:hover {\r\n  background: rgba(239, 68, 68, 0.3);\r\n  border-color: rgba(239, 68, 68, 0.6);\r\n}\r\n\r\n.save-button {\r\n  background: var(--primary-gradient);\r\n  border: none;\r\n  color: white;\r\n}\r\n\r\n.save-button:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: var(--shadow-glow);\r\n}\r\n\r\n/* モーダルアニメーション */\r\n.modal-enter-active,\r\n.modal-leave-active {\r\n  transition: all var(--transition-normal);\r\n}\r\n\r\n.modal-enter-from,\r\n.modal-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n.modal-enter-from .modal-content,\r\n.modal-leave-to .modal-content {\r\n  transform: scale(0.9) translateY(20px);\r\n}\r\n\r\n/* ハイコントラストモード対応 */\r\n@media (prefers-contrast: high) {\r\n  .modal-content {\r\n    border: 2px solid white;\r\n  }\r\n  \r\n  .setting-item select,\r\n  .setting-item input[type=\"range\"] {\r\n    border-width: 2px;\r\n  }\r\n  \r\n  .close-button:focus,\r\n  .setting-item select:focus,\r\n  .setting-item input:focus {\r\n    outline-width: 3px;\r\n  }\r\n}\r\n\r\n/* モバイル対応 */\r\n@media (max-width: 640px) {\r\n  .modal-content {\r\n    max-height: 100vh;\r\n    height: 100%;\r\n    border-radius: 0;\r\n  }\r\n  \r\n  .setting-item {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n  \r\n  .setting-item label {\r\n    min-width: auto;\r\n  }\r\n  \r\n  .modal-footer {\r\n    flex-direction: column;\r\n    gap: var(--space-md);\r\n  }\r\n  \r\n  .reset-button,\r\n  .save-button {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>","/**\r\n * フォーカスインジケーター管理システム\r\n * アクセシビリティ向上のための視覚的フィードバック\r\n */\r\n\r\nexport interface FocusIndicatorOptions {\r\n  color?: string\r\n  width?: number\r\n  style?: 'solid' | 'dashed' | 'dotted'\r\n  offset?: number\r\n  borderRadius?: number\r\n}\r\n\r\n/**\r\n * フォーカスインジケーターの管理クラス\r\n */\r\nexport class FocusIndicatorManager {\r\n  private focusedElement: HTMLElement | null = null\r\n  private indicator: HTMLElement\r\n  private options: Required<FocusIndicatorOptions>\r\n\r\n  constructor(options: FocusIndicatorOptions = {}) {\r\n    this.options = {\r\n      color: options.color || '#818CF8',\r\n      width: options.width || 3,\r\n      style: options.style || 'solid',\r\n      offset: options.offset || 4,\r\n      borderRadius: options.borderRadius || 8\r\n    }\r\n\r\n    this.indicator = this.createIndicator()\r\n    document.body.appendChild(this.indicator)\r\n    this.setupEventListeners()\r\n  }\r\n\r\n  private createIndicator(): HTMLElement {\r\n    const indicator = document.createElement('div')\r\n    indicator.className = 'focus-indicator'\r\n    indicator.style.cssText = `\r\n      position: fixed;\r\n      pointer-events: none;\r\n      z-index: 10000;\r\n      transition: all 200ms cubic-bezier(0.25, 0.46, 0.45, 0.94);\r\n      opacity: 0;\r\n      border: ${this.options.width}px ${this.options.style} ${this.options.color};\r\n      border-radius: ${this.options.borderRadius}px;\r\n      box-shadow: 0 0 20px rgba(129, 140, 248, 0.4);\r\n    `\r\n    return indicator\r\n  }\r\n\r\n  private setupEventListeners(): void {\r\n    // フォーカスイベントの監視\r\n    document.addEventListener('focusin', this.handleFocusIn.bind(this))\r\n    document.addEventListener('focusout', this.handleFocusOut.bind(this))\r\n    \r\n    // スクロールやリサイズ時の位置更新\r\n    window.addEventListener('scroll', this.updatePosition.bind(this), true)\r\n    window.addEventListener('resize', this.updatePosition.bind(this))\r\n    \r\n    // MutationObserverで要素の変更を監視\r\n    const observer = new MutationObserver(() => {\r\n      if (this.focusedElement) {\r\n        this.updatePosition()\r\n      }\r\n    })\r\n    \r\n    observer.observe(document.body, {\r\n      attributes: true,\r\n      childList: true,\r\n      subtree: true,\r\n      attributeFilter: ['style', 'class']\r\n    })\r\n  }\r\n\r\n  private handleFocusIn(event: FocusEvent): void {\r\n    const target = event.target as HTMLElement\r\n    \r\n    // フォーカス可能な要素のみ対象にする\r\n    if (this.isFocusableElement(target)) {\r\n      this.focusedElement = target\r\n      this.showIndicator(target)\r\n    }\r\n  }\r\n\r\n  private handleFocusOut(): void {\r\n    this.focusedElement = null\r\n    this.hideIndicator()\r\n  }\r\n\r\n  private isFocusableElement(element: HTMLElement): boolean {\r\n    // フォーカス可能な要素の判定\r\n    const focusableSelectors = [\r\n      'button', 'input', 'select', 'textarea', 'a[href]',\r\n      '[tabindex]:not([tabindex=\"-1\"])', '[contenteditable]'\r\n    ]\r\n    \r\n    return focusableSelectors.some(selector => \r\n      element.matches(selector) || element.closest(selector)\r\n    )\r\n  }\r\n\r\n  private showIndicator(element: HTMLElement): void {\r\n    const rect = element.getBoundingClientRect()\r\n    const offset = this.options.offset\r\n    \r\n    this.indicator.style.left = `${rect.left - offset}px`\r\n    this.indicator.style.top = `${rect.top - offset}px`\r\n    this.indicator.style.width = `${rect.width + offset * 2}px`\r\n    this.indicator.style.height = `${rect.height + offset * 2}px`\r\n    this.indicator.style.opacity = '1'\r\n    \r\n    // 要素の角丸に合わせる\r\n    const computedStyle = window.getComputedStyle(element)\r\n    const borderRadius = computedStyle.borderRadius\r\n    if (borderRadius && borderRadius !== '0px') {\r\n      this.indicator.style.borderRadius = borderRadius\r\n    }\r\n  }\r\n\r\n  private hideIndicator(): void {\r\n    this.indicator.style.opacity = '0'\r\n  }\r\n\r\n  private updatePosition(): void {\r\n    if (this.focusedElement && this.focusedElement === document.activeElement) {\r\n      this.showIndicator(this.focusedElement)\r\n    }\r\n  }\r\n\r\n  public setOptions(options: Partial<FocusIndicatorOptions>): void {\r\n    Object.assign(this.options, options)\r\n    \r\n    this.indicator.style.border = \r\n      `${this.options.width}px ${this.options.style} ${this.options.color}`\r\n    this.indicator.style.borderRadius = `${this.options.borderRadius}px`\r\n    \r\n    if (this.focusedElement) {\r\n      this.updatePosition()\r\n    }\r\n  }\r\n\r\n  public destroy(): void {\r\n    this.indicator.remove()\r\n    document.removeEventListener('focusin', this.handleFocusIn.bind(this))\r\n    document.removeEventListener('focusout', this.handleFocusOut.bind(this))\r\n    window.removeEventListener('scroll', this.updatePosition.bind(this), true)\r\n    window.removeEventListener('resize', this.updatePosition.bind(this))\r\n  }\r\n}","<script setup lang=\"ts\">\r\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\r\nimport { FocusIndicatorManager, type FocusIndicatorOptions } from '@/utils/focus-indicator'\r\n\r\n// 開発環境フラグ\r\nconst isDev = import.meta.env.DEV\r\n\r\n// Props\r\ninterface Props {\r\n  enabled?: boolean\r\n  color?: string\r\n  width?: number\r\n  style?: 'solid' | 'dashed' | 'dotted'\r\n  offset?: number\r\n  borderRadius?: number\r\n  showKeyboardHints?: boolean\r\n  reducedMotion?: boolean\r\n}\r\n\r\nconst props = withDefaults(defineProps<Props>(), {\r\n  enabled: true,\r\n  color: '#818CF8',\r\n  width: 3,\r\n  style: 'solid',\r\n  offset: 4,\r\n  borderRadius: 8,\r\n  showKeyboardHints: true,\r\n  reducedMotion: false\r\n})\r\n\r\n// リアクティブな状態\r\nconst isEnabled = ref(props.enabled)\r\nconst currentOptions = ref<FocusIndicatorOptions>({\r\n  color: props.color,\r\n  width: props.width,\r\n  style: props.style,\r\n  offset: props.offset,\r\n  borderRadius: props.borderRadius\r\n})\r\n\r\n// Focus Indicator Manager\r\nlet focusIndicatorManager: FocusIndicatorManager | null = null\r\n\r\n// キーボードヒント表示状態\r\nconst showHints = ref(false)\r\nconst hintTimer = ref<number | null>(null)\r\n\r\n// 計算されたプロパティ\r\nconst indicatorStyle = computed(() => ({\r\n  '--focus-color': currentOptions.value.color,\r\n  '--focus-width': `${currentOptions.value.width}px`,\r\n  '--focus-offset': `${currentOptions.value.offset}px`,\r\n  '--focus-radius': `${currentOptions.value.borderRadius}px`\r\n}))\r\n\r\n// キーボードショートカット\r\nconst keyboardShortcuts = computed(() => [\r\n  { key: 'Tab', description: '次の要素にフォーカス' },\r\n  { key: 'Shift + Tab', description: '前の要素にフォーカス' },\r\n  { key: 'Enter', description: '選択した要素を実行' },\r\n  { key: 'Space', description: 'ボタンやチェックボックスを操作' },\r\n  { key: 'Arrow Keys', description: 'メニューや選択肢を移動' },\r\n  { key: 'Escape', description: 'モーダルやメニューを閉じる' }\r\n])\r\n\r\n// メソッド\r\nconst initializeFocusIndicator = () => {\r\n  if (isEnabled.value && !focusIndicatorManager) {\r\n    focusIndicatorManager = new FocusIndicatorManager(currentOptions.value)\r\n  }\r\n}\r\n\r\nconst destroyFocusIndicator = () => {\r\n  if (focusIndicatorManager) {\r\n    focusIndicatorManager.destroy()\r\n    focusIndicatorManager = null\r\n  }\r\n}\r\n\r\nconst updateOptions = () => {\r\n  if (focusIndicatorManager) {\r\n    focusIndicatorManager.setOptions(currentOptions.value)\r\n  }\r\n}\r\n\r\nconst showKeyboardHints = () => {\r\n  if (!props.showKeyboardHints) return\r\n  \r\n  showHints.value = true\r\n  \r\n  // 5秒後に自動的に隠す\r\n  if (hintTimer.value) {\r\n    clearTimeout(hintTimer.value)\r\n  }\r\n  \r\n  hintTimer.value = window.setTimeout(() => {\r\n    showHints.value = false\r\n  }, 5000)\r\n}\r\n\r\nconst hideKeyboardHints = () => {\r\n  showHints.value = false\r\n  if (hintTimer.value) {\r\n    clearTimeout(hintTimer.value)\r\n    hintTimer.value = null\r\n  }\r\n}\r\n\r\n// キーボード使用検出\r\nconst handleKeydown = (event: KeyboardEvent) => {\r\n  if (event.key === 'Tab') {\r\n    showKeyboardHints()\r\n  }\r\n}\r\n\r\n// 設定を更新\r\nconst updateSettings = (newOptions: Partial<FocusIndicatorOptions>) => {\r\n  Object.assign(currentOptions.value, newOptions)\r\n  updateOptions()\r\n}\r\n\r\n// 有効/無効の切り替え\r\nconst toggleEnabled = () => {\r\n  isEnabled.value = !isEnabled.value\r\n  \r\n  if (isEnabled.value) {\r\n    initializeFocusIndicator()\r\n  } else {\r\n    destroyFocusIndicator()\r\n  }\r\n}\r\n\r\n// ライフサイクル\r\nonMounted(() => {\r\n  initializeFocusIndicator()\r\n  \r\n  // キーボード使用検出のためのイベントリスナー\r\n  document.addEventListener('keydown', handleKeydown)\r\n  \r\n  // ユーザーのモーション設定を検出\r\n  const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)')\r\n  if (prefersReducedMotion.matches) {\r\n    currentOptions.value = {\r\n      ...currentOptions.value,\r\n      offset: 2 // モーション削減時はオフセットを小さく\r\n    }\r\n    updateOptions()\r\n  }\r\n})\r\n\r\nonUnmounted(() => {\r\n  destroyFocusIndicator()\r\n  document.removeEventListener('keydown', handleKeydown)\r\n  \r\n  if (hintTimer.value) {\r\n    clearTimeout(hintTimer.value)\r\n  }\r\n})\r\n\r\n// 外部に公開する関数\r\ndefineExpose({\r\n  updateSettings,\r\n  toggleEnabled,\r\n  showKeyboardHints,\r\n  hideKeyboardHints\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div \r\n    class=\"visual-indicators\"\r\n    :class=\"{\r\n      'reduced-motion': reducedMotion,\r\n      'hints-visible': showHints\r\n    }\"\r\n    :style=\"indicatorStyle\"\r\n  >\r\n    <!-- キーボードヒント -->\r\n    <Transition name=\"hints-fade\">\r\n      <div \r\n        v-if=\"showHints && showKeyboardHints\" \r\n        class=\"keyboard-hints\"\r\n        role=\"tooltip\"\r\n        aria-live=\"polite\"\r\n      >\r\n        <div class=\"hints-header\">\r\n          <h3 class=\"hints-title\">キーボードショートカット</h3>\r\n          <button \r\n            @click=\"hideKeyboardHints\"\r\n            class=\"hints-close\"\r\n            aria-label=\"ヒントを閉じる\"\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n        <ul class=\"hints-list\">\r\n          <li \r\n            v-for=\"shortcut in keyboardShortcuts\"\r\n            :key=\"shortcut.key\"\r\n            class=\"hint-item\"\r\n          >\r\n            <kbd class=\"hint-key\">{{ shortcut.key }}</kbd>\r\n            <span class=\"hint-description\">{{ shortcut.description }}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </Transition>\r\n\r\n    <!-- 設定パネル（開発環境のみ） -->\r\n    <div \r\n      v-if=\"isDev\" \r\n      class=\"settings-panel\"\r\n    >\r\n      <h4>フォーカスインジケーター設定</h4>\r\n      <label>\r\n        <input \r\n          v-model=\"isEnabled\" \r\n          type=\"checkbox\"\r\n          @change=\"toggleEnabled\"\r\n        >\r\n        有効\r\n      </label>\r\n      \r\n      <label>\r\n        色:\r\n        <input \r\n          :value=\"currentOptions.color\"\r\n          type=\"color\"\r\n          @input=\"updateSettings({ color: ($event.target as HTMLInputElement).value })\"\r\n        >\r\n      </label>\r\n      \r\n      <label>\r\n        幅:\r\n        <input \r\n          :value=\"currentOptions.width\"\r\n          type=\"range\"\r\n          min=\"1\"\r\n          max=\"10\"\r\n          @input=\"updateSettings({ width: parseInt(($event.target as HTMLInputElement).value) })\"\r\n        >\r\n      </label>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.visual-indicators {\r\n  /* CSS変数でスタイルを制御 */\r\n  --focus-transition: all 200ms cubic-bezier(0.25, 0.46, 0.45, 0.94);\r\n}\r\n\r\n.visual-indicators.reduced-motion {\r\n  --focus-transition: none;\r\n}\r\n\r\n/* キーボードヒント */\r\n.keyboard-hints {\r\n  position: fixed;\r\n  top: 20px;\r\n  right: 20px;\r\n  z-index: 10001;\r\n  \r\n  background: var(--bg-overlay);\r\n  border: 1px solid var(--border-primary);\r\n  border-radius: var(--rounded-lg);\r\n  padding: var(--space-4);\r\n  max-width: 300px;\r\n  \r\n  backdrop-filter: blur(12px);\r\n  box-shadow: var(--shadow-xl);\r\n  \r\n  color: rgba(255, 255, 255, 0.9);\r\n  font-size: var(--text-sm);\r\n}\r\n\r\n.hints-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: var(--space-3);\r\n}\r\n\r\n.hints-title {\r\n  font-size: var(--text-base);\r\n  font-weight: var(--font-weight-semibold);\r\n  margin: 0;\r\n  color: var(--primary-300);\r\n}\r\n\r\n.hints-close {\r\n  background: none;\r\n  border: none;\r\n  color: rgba(255, 255, 255, 0.7);\r\n  font-size: var(--text-lg);\r\n  cursor: pointer;\r\n  padding: var(--space-1);\r\n  border-radius: var(--rounded);\r\n}\r\n\r\n.hints-close:hover {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  color: white;\r\n}\r\n\r\n.hints-list {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.hint-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: var(--space-3);\r\n  margin-bottom: var(--space-2);\r\n}\r\n\r\n.hint-key {\r\n  background: var(--bg-tertiary);\r\n  border: 1px solid var(--border-gray);\r\n  border-radius: var(--rounded);\r\n  padding: var(--space-1) var(--space-2);\r\n  font-family: monospace;\r\n  font-size: var(--text-xs);\r\n  min-width: 60px;\r\n  text-align: center;\r\n  color: var(--primary-200);\r\n}\r\n\r\n.hint-description {\r\n  flex: 1;\r\n  color: rgba(255, 255, 255, 0.8);\r\n}\r\n\r\n/* アニメーション */\r\n.hints-fade-enter-active,\r\n.hints-fade-leave-active {\r\n  transition: all var(--duration-300) var(--ease-out);\r\n}\r\n\r\n.hints-fade-enter-from,\r\n.hints-fade-leave-to {\r\n  opacity: 0;\r\n  transform: translateY(-10px) scale(0.95);\r\n}\r\n\r\n/* 設定パネル（開発環境） */\r\n.settings-panel {\r\n  position: fixed;\r\n  bottom: 20px;\r\n  left: 20px;\r\n  z-index: 10001;\r\n  \r\n  background: var(--bg-card);\r\n  border: 1px solid var(--border-primary);\r\n  border-radius: var(--rounded-lg);\r\n  padding: var(--space-4);\r\n  \r\n  color: rgba(255, 255, 255, 0.9);\r\n  font-size: var(--text-sm);\r\n}\r\n\r\n.settings-panel h4 {\r\n  margin: 0 0 var(--space-3) 0;\r\n  font-size: var(--text-base);\r\n  color: var(--primary-300);\r\n}\r\n\r\n.settings-panel label {\r\n  display: block;\r\n  margin-bottom: var(--space-2);\r\n}\r\n\r\n.settings-panel input {\r\n  margin-left: var(--space-2);\r\n}\r\n\r\n/* レスポンシブ */\r\n@media (max-width: 640px) {\r\n  .keyboard-hints {\r\n    top: 10px;\r\n    right: 10px;\r\n    left: 10px;\r\n    max-width: none;\r\n  }\r\n  \r\n  .settings-panel {\r\n    bottom: 10px;\r\n    left: 10px;\r\n    right: 10px;\r\n  }\r\n}\r\n\r\n/* モーション削減対応 */\r\n@media (prefers-reduced-motion: reduce) {\r\n  .hints-fade-enter-active,\r\n  .hints-fade-leave-active {\r\n    transition: opacity var(--duration-200) linear;\r\n  }\r\n  \r\n  .hints-fade-enter-from,\r\n  .hints-fade-leave-to {\r\n    transform: none;\r\n  }\r\n}\r\n</style>","<script setup lang=\"ts\">\r\nimport { ref, onErrorCaptured, computed } from 'vue'\r\nimport type { ComponentPublicInstance } from 'vue'\r\n\r\ninterface Props {\r\n  fallback?: 'minimal' | 'detailed' | 'custom'\r\n  onError?: (error: Error, instance: ComponentPublicInstance | null, info: string) => void\r\n  canRecover?: boolean\r\n  recoveryMessage?: string\r\n}\r\n\r\nconst props = withDefaults(defineProps<Props>(), {\r\n  fallback: 'detailed',\r\n  canRecover: true,\r\n  recoveryMessage: 'エラーから回復するには、ページを再読み込みしてください'\r\n})\r\n\r\n// 開発環境フラグ\r\nconst isDev = import.meta.env.DEV\r\n\r\nconst emit = defineEmits<{\r\n  error: [error: Error, info: string]\r\n  recover: []\r\n}>()\r\n\r\nconst hasError = ref(false)\r\nconst error = ref<Error | null>(null)\r\nconst errorInfo = ref<string>('')\r\nconst errorCount = ref(0)\r\nconst isRecovering = ref(false)\r\n\r\n// エラーの深刻度を判定\r\nconst errorSeverity = computed(() => {\r\n  if (!error.value) return 'low'\r\n  \r\n  const message = error.value.message.toLowerCase()\r\n  if (message.includes('cannot read') || message.includes('undefined')) {\r\n    return 'high'\r\n  }\r\n  if (message.includes('network') || message.includes('fetch')) {\r\n    return 'medium'\r\n  }\r\n  return 'low'\r\n})\r\n\r\n// エラーメッセージのユーザーフレンドリー版\r\nconst userFriendlyMessage = computed(() => {\r\n  if (!error.value) return ''\r\n  \r\n  const message = error.value.message\r\n  \r\n  // 一般的なエラーパターンのマッピング\r\n  if (message.includes('Network')) {\r\n    return 'ネットワーク接続に問題が発生しました'\r\n  }\r\n  if (message.includes('Cannot read')) {\r\n    return '画面の表示中にエラーが発生しました'\r\n  }\r\n  if (message.includes('undefined') || message.includes('null')) {\r\n    return 'データの読み込みに失敗しました'\r\n  }\r\n  if (message.includes('timeout')) {\r\n    return '処理がタイムアウトしました'\r\n  }\r\n  \r\n  return '予期しないエラーが発生しました'\r\n})\r\n\r\n// エラーをキャプチャ\r\nonErrorCaptured((err: Error, instance: ComponentPublicInstance | null, info: string) => {\r\n  console.error('[ErrorBoundary] Caught error:', err)\r\n  console.error('[ErrorBoundary] Error info:', info)\r\n  console.error('[ErrorBoundary] Component instance:', instance)\r\n  \r\n  hasError.value = true\r\n  error.value = err\r\n  errorInfo.value = info\r\n  errorCount.value++\r\n  \r\n  // カスタムエラーハンドラーを呼び出し\r\n  if (props.onError) {\r\n    props.onError(err, instance, info)\r\n  }\r\n  \r\n  // エラーイベントを発火\r\n  emit('error', err, info)\r\n  \r\n  // エラーの伝播を止める\r\n  return false\r\n})\r\n\r\n// エラーから回復を試みる\r\nconst tryRecover = async () => {\r\n  isRecovering.value = true\r\n  \r\n  try {\r\n    // コンポーネントの状態をリセット\r\n    hasError.value = false\r\n    error.value = null\r\n    errorInfo.value = ''\r\n    \r\n    // リカバリーイベントを発火\r\n    emit('recover')\r\n    \r\n    // 少し待ってから回復完了\r\n    await new Promise(resolve => setTimeout(resolve, 100))\r\n  } catch (e) {\r\n    console.error('[ErrorBoundary] Recovery failed:', e)\r\n    hasError.value = true\r\n  } finally {\r\n    isRecovering.value = false\r\n  }\r\n}\r\n\r\n// ページをリロード\r\nconst reloadPage = () => {\r\n  window.location.reload()\r\n}\r\n\r\n// エラー詳細をクリップボードにコピー\r\nconst copyErrorDetails = async () => {\r\n  if (!error.value) return\r\n  \r\n  const details = `\r\nエラー: ${error.value.message}\r\nスタック: ${error.value.stack || 'N/A'}\r\n情報: ${errorInfo.value}\r\n時刻: ${new Date().toISOString()}\r\nユーザーエージェント: ${navigator.userAgent}\r\n  `.trim()\r\n  \r\n  try {\r\n    await navigator.clipboard.writeText(details)\r\n    alert('エラー詳細をクリップボードにコピーしました')\r\n  } catch (e) {\r\n    console.error('Failed to copy error details:', e)\r\n  }\r\n}\r\n\r\n// エラーレポートを送信\r\nconst sendErrorReport = () => {\r\n  if (!error.value) return\r\n  \r\n  // エラーレポート送信のイベントを発火\r\n  const event = new CustomEvent('app:send-error-report', {\r\n    detail: {\r\n      error: error.value,\r\n      info: errorInfo.value,\r\n      component: 'ErrorBoundary'\r\n    }\r\n  })\r\n  window.dispatchEvent(event)\r\n  \r\n  alert('エラーレポートを送信しました')\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div v-if=\"hasError\" class=\"error-boundary\" :data-severity=\"errorSeverity\">\r\n    <!-- ミニマルフォールバック -->\r\n    <div v-if=\"fallback === 'minimal'\" class=\"error-minimal\">\r\n      <p class=\"error-message\">エラーが発生しました</p>\r\n      <button @click=\"reloadPage\" class=\"error-action-btn\">\r\n        ページを再読み込み\r\n      </button>\r\n    </div>\r\n    \r\n    <!-- 詳細フォールバック -->\r\n    <div v-else-if=\"fallback === 'detailed'\" class=\"error-detailed\">\r\n      <div class=\"error-icon\" aria-hidden=\"true\">\r\n        <svg width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n          <circle cx=\"12\" cy=\"12\" r=\"10\" stroke-width=\"2\"/>\r\n          <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\" stroke-width=\"2\"/>\r\n          <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\" stroke-width=\"2\"/>\r\n        </svg>\r\n      </div>\r\n      \r\n      <h2 class=\"error-title\">エラーが発生しました</h2>\r\n      <p class=\"error-user-message\">{{ userFriendlyMessage }}</p>\r\n      \r\n      <div class=\"error-actions\">\r\n        <button \r\n          v-if=\"canRecover && !isRecovering\" \r\n          @click=\"tryRecover\"\r\n          class=\"error-action-btn primary\"\r\n          :disabled=\"errorCount > 3\"\r\n        >\r\n          {{ errorCount > 3 ? '回復できません' : '回復を試みる' }}\r\n        </button>\r\n        \r\n        <button \r\n          @click=\"reloadPage\" \r\n          class=\"error-action-btn secondary\"\r\n        >\r\n          ページを再読み込み\r\n        </button>\r\n      </div>\r\n      \r\n      <!-- エラー詳細（開発環境のみ） -->\r\n      <details v-if=\"isDev\" class=\"error-details\">\r\n        <summary>エラー詳細（開発者向け）</summary>\r\n        <div class=\"error-technical\">\r\n          <p><strong>エラーメッセージ:</strong> {{ error?.message }}</p>\r\n          <p><strong>エラー情報:</strong> {{ errorInfo }}</p>\r\n          <p><strong>エラー回数:</strong> {{ errorCount }}</p>\r\n          <pre v-if=\"error?.stack\" class=\"error-stack\">{{ error.stack }}</pre>\r\n          \r\n          <div class=\"error-dev-actions\">\r\n            <button @click=\"copyErrorDetails\" class=\"error-action-btn small\">\r\n              詳細をコピー\r\n            </button>\r\n            <button @click=\"sendErrorReport\" class=\"error-action-btn small\">\r\n              レポート送信\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </details>\r\n    </div>\r\n    \r\n    <!-- カスタムフォールバック -->\r\n    <div v-else-if=\"fallback === 'custom'\" class=\"error-custom\">\r\n      <slot name=\"error\" :error=\"error\" :retry=\"tryRecover\" :reload=\"reloadPage\" />\r\n    </div>\r\n  </div>\r\n  \r\n  <!-- 正常時は子コンポーネントを表示 -->\r\n  <slot v-else />\r\n</template>\r\n\r\n<style scoped>\r\n.error-boundary {\r\n  min-height: 200px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: var(--space-xl);\r\n  background: rgba(239, 68, 68, 0.05);\r\n  border: 1px solid rgba(239, 68, 68, 0.2);\r\n  border-radius: 12px;\r\n  margin: var(--space-md);\r\n}\r\n\r\n.error-boundary[data-severity=\"high\"] {\r\n  background: rgba(239, 68, 68, 0.1);\r\n  border-color: rgba(239, 68, 68, 0.4);\r\n}\r\n\r\n.error-boundary[data-severity=\"medium\"] {\r\n  background: rgba(245, 158, 11, 0.05);\r\n  border-color: rgba(245, 158, 11, 0.2);\r\n}\r\n\r\n/* ミニマルスタイル */\r\n.error-minimal {\r\n  text-align: center;\r\n}\r\n\r\n.error-message {\r\n  margin-bottom: var(--space-md);\r\n  color: rgba(239, 68, 68, 1);\r\n  font-weight: 500;\r\n}\r\n\r\n/* 詳細スタイル */\r\n.error-detailed {\r\n  text-align: center;\r\n  max-width: 600px;\r\n  width: 100%;\r\n}\r\n\r\n.error-icon {\r\n  color: rgba(239, 68, 68, 0.8);\r\n  margin-bottom: var(--space-lg);\r\n}\r\n\r\n.error-title {\r\n  font-size: var(--text-2xl);\r\n  font-weight: 700;\r\n  color: rgba(239, 68, 68, 1);\r\n  margin-bottom: var(--space-sm);\r\n}\r\n\r\n.error-user-message {\r\n  font-size: var(--text-lg);\r\n  color: rgba(255, 255, 255, 0.8);\r\n  margin-bottom: var(--space-xl);\r\n}\r\n\r\n.error-actions {\r\n  display: flex;\r\n  gap: var(--space-md);\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.error-action-btn {\r\n  padding: var(--space-sm) var(--space-lg);\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-weight: 600;\r\n  font-size: var(--text-base);\r\n  cursor: pointer;\r\n  transition: all var(--transition-fast);\r\n  min-width: 140px;\r\n}\r\n\r\n.error-action-btn.primary {\r\n  background: rgba(239, 68, 68, 0.9);\r\n  color: white;\r\n}\r\n\r\n.error-action-btn.primary:hover:not(:disabled) {\r\n  background: rgba(220, 38, 38, 1);\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.error-action-btn.secondary {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  color: white;\r\n  border: 1px solid rgba(239, 68, 68, 0.5);\r\n}\r\n\r\n.error-action-btn.secondary:hover {\r\n  background: rgba(255, 255, 255, 0.2);\r\n  border-color: rgba(239, 68, 68, 0.8);\r\n}\r\n\r\n.error-action-btn:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.error-action-btn.small {\r\n  padding: var(--space-xs) var(--space-sm);\r\n  font-size: var(--text-sm);\r\n  min-width: auto;\r\n}\r\n\r\n/* エラー詳細 */\r\n.error-details {\r\n  margin-top: var(--space-xl);\r\n  text-align: left;\r\n  width: 100%;\r\n}\r\n\r\n.error-details summary {\r\n  cursor: pointer;\r\n  padding: var(--space-sm);\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border-radius: 6px;\r\n  font-weight: 500;\r\n  color: rgba(255, 255, 255, 0.7);\r\n  transition: background var(--transition-fast);\r\n}\r\n\r\n.error-details summary:hover {\r\n  background: rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.error-technical {\r\n  margin-top: var(--space-md);\r\n  padding: var(--space-md);\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border-radius: 6px;\r\n  font-size: var(--text-sm);\r\n}\r\n\r\n.error-technical p {\r\n  margin-bottom: var(--space-sm);\r\n  color: rgba(255, 255, 255, 0.8);\r\n}\r\n\r\n.error-technical strong {\r\n  color: rgba(255, 255, 255, 0.9);\r\n}\r\n\r\n.error-stack {\r\n  margin-top: var(--space-md);\r\n  padding: var(--space-sm);\r\n  background: rgba(0, 0, 0, 0.5);\r\n  border-radius: 4px;\r\n  overflow-x: auto;\r\n  font-family: monospace;\r\n  font-size: var(--text-xs);\r\n  line-height: 1.6;\r\n  color: rgba(255, 255, 255, 0.7);\r\n}\r\n\r\n.error-dev-actions {\r\n  margin-top: var(--space-md);\r\n  display: flex;\r\n  gap: var(--space-sm);\r\n}\r\n\r\n/* カスタムスタイル */\r\n.error-custom {\r\n  width: 100%;\r\n}\r\n\r\n/* レスポンシブ */\r\n@media (max-width: 640px) {\r\n  .error-boundary {\r\n    padding: var(--space-md);\r\n    margin: var(--space-sm);\r\n  }\r\n  \r\n  .error-actions {\r\n    flex-direction: column;\r\n    width: 100%;\r\n  }\r\n  \r\n  .error-action-btn {\r\n    width: 100%;\r\n  }\r\n  \r\n  .error-icon svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n  \r\n  .error-title {\r\n    font-size: var(--text-xl);\r\n  }\r\n  \r\n  .error-user-message {\r\n    font-size: var(--text-base);\r\n  }\r\n}\r\n\r\n/* アニメーション */\r\n@keyframes pulse {\r\n  0% { opacity: 1; }\r\n  50% { opacity: 0.6; }\r\n  100% { opacity: 1; }\r\n}\r\n\r\n.error-boundary[data-severity=\"high\"] .error-icon {\r\n  animation: pulse 2s infinite;\r\n}\r\n\r\n/* アクセシビリティ */\r\n@media (prefers-reduced-motion: reduce) {\r\n  .error-boundary .error-icon {\r\n    animation: none;\r\n  }\r\n  \r\n  .error-action-btn {\r\n    transition: none;\r\n  }\r\n}\r\n\r\n/* ハイコントラストモード */\r\n@media (prefers-contrast: high) {\r\n  .error-boundary {\r\n    border-width: 2px;\r\n  }\r\n  \r\n  .error-action-btn {\r\n    border: 2px solid currentColor;\r\n  }\r\n}\r\n</style>","/**\r\n * ユーザーフレンドリーなエラーメッセージ管理システム\r\n * 技術的なエラーを分かりやすいメッセージに変換\r\n */\r\n\r\nimport type { ErrorInfo } from './ErrorHandler'\r\n\r\nexport interface UserMessage {\r\n  title: string\r\n  description: string\r\n  actionLabel?: string\r\n  actionType?: 'reload' | 'retry' | 'contact' | 'close' | 'navigate'\r\n  actionData?: Record<string, any>\r\n  icon?: string\r\n  severity: 'info' | 'warning' | 'error' | 'critical'\r\n  showDetails?: boolean\r\n  helpUrl?: string\r\n}\r\n\r\nexport interface MessagePattern {\r\n  id: string\r\n  pattern: RegExp | string\r\n  message: UserMessage\r\n  conditions?: {\r\n    category?: ErrorInfo['category'][]\r\n    severity?: ErrorInfo['severity'][]\r\n    context?: (errorInfo: ErrorInfo) => boolean\r\n  }\r\n}\r\n\r\nexport class UserFriendlyMessages {\r\n  private patterns: MessagePattern[] = []\r\n  private fallbackMessages: Map<ErrorInfo['category'], UserMessage> = new Map()\r\n\r\n  constructor() {\r\n    this.initializeDefaultPatterns()\r\n    this.initializeFallbackMessages()\r\n  }\r\n\r\n  /**\r\n   * デフォルトのメッセージパターンを初期化\r\n   */\r\n  private initializeDefaultPatterns(): void {\r\n    // ネットワーク関連エラー\r\n    this.patterns.push({\r\n      id: 'network-offline',\r\n      pattern: /network|offline|connection/i,\r\n      message: {\r\n        title: 'インターネット接続が切断されています',\r\n        description: 'インターネット接続を確認して、もう一度お試しください。',\r\n        actionLabel: '再試行',\r\n        actionType: 'retry',\r\n        icon: '📡',\r\n        severity: 'error',\r\n        helpUrl: '/help/network-issues'\r\n      },\r\n      conditions: {\r\n        category: ['network']\r\n      }\r\n    })\r\n\r\n    this.patterns.push({\r\n      id: 'network-timeout',\r\n      pattern: /timeout|slow/i,\r\n      message: {\r\n        title: '接続が遅くなっています',\r\n        description: 'サーバーへの接続に時間がかかっています。しばらく待ってから再試行してください。',\r\n        actionLabel: 'もう一度試す',\r\n        actionType: 'retry',\r\n        icon: '⏰',\r\n        severity: 'warning'\r\n      },\r\n      conditions: {\r\n        category: ['network', 'async']\r\n      }\r\n    })\r\n\r\n    // ゲーム関連エラー\r\n    this.patterns.push({\r\n      id: 'game-save-failed',\r\n      pattern: /save|storage|quota/i,\r\n      message: {\r\n        title: 'ゲームの保存に失敗しました',\r\n        description: 'ゲームデータの保存に失敗しました。ストレージ容量を確認してください。',\r\n        actionLabel: 'ストレージを確認',\r\n        actionType: 'navigate',\r\n        actionData: { url: '/settings/storage' },\r\n        icon: '💾',\r\n        severity: 'error',\r\n        showDetails: true\r\n      },\r\n      conditions: {\r\n        category: ['game', 'system']\r\n      }\r\n    })\r\n\r\n    this.patterns.push({\r\n      id: 'game-state-corrupted',\r\n      pattern: /corrupted|invalid.*state|cannot.*read.*game/i,\r\n      message: {\r\n        title: 'ゲームデータに問題があります',\r\n        description: 'ゲームデータが破損している可能性があります。新しいゲームを開始することをお勧めします。',\r\n        actionLabel: '新しいゲーム',\r\n        actionType: 'navigate',\r\n        actionData: { url: '/new-game' },\r\n        icon: '🎮',\r\n        severity: 'critical',\r\n        showDetails: true\r\n      },\r\n      conditions: {\r\n        category: ['game'],\r\n        severity: ['high', 'critical']\r\n      }\r\n    })\r\n\r\n    // Vue/UI関連エラー\r\n    this.patterns.push({\r\n      id: 'ui-component-error',\r\n      pattern: /component|render|mount/i,\r\n      message: {\r\n        title: '画面の表示エラー',\r\n        description: '画面の一部が正しく表示されていません。ページを再読み込みすると解決する場合があります。',\r\n        actionLabel: 'ページを再読み込み',\r\n        actionType: 'reload',\r\n        icon: '🖥️',\r\n        severity: 'warning'\r\n      },\r\n      conditions: {\r\n        category: ['vue']\r\n      }\r\n    })\r\n\r\n    // パフォーマンス関連\r\n    this.patterns.push({\r\n      id: 'performance-memory',\r\n      pattern: /memory|heap|stack.*overflow/i,\r\n      message: {\r\n        title: 'メモリ不足の可能性があります',\r\n        description: '他のアプリケーションを閉じて、メモリを解放してください。',\r\n        actionLabel: 'ページを再読み込み',\r\n        actionType: 'reload',\r\n        icon: '⚡',\r\n        severity: 'error',\r\n        helpUrl: '/help/performance'\r\n      },\r\n      conditions: {\r\n        category: ['performance', 'system']\r\n      }\r\n    })\r\n\r\n    // セキュリティ関連\r\n    this.patterns.push({\r\n      id: 'security-cors',\r\n      pattern: /cors|cross.*origin|blocked/i,\r\n      message: {\r\n        title: 'セキュリティ制限が発生しました',\r\n        description: 'ブラウザのセキュリティ設定により、一部の機能が制限されています。',\r\n        actionLabel: 'サポートに連絡',\r\n        actionType: 'contact',\r\n        icon: '🔒',\r\n        severity: 'error',\r\n        helpUrl: '/help/security-issues'\r\n      },\r\n      conditions: {\r\n        category: ['security']\r\n      }\r\n    })\r\n\r\n    // 一般的なJavaScriptエラー\r\n    this.patterns.push({\r\n      id: 'js-undefined',\r\n      pattern: /undefined|null.*property|cannot.*read/i,\r\n      message: {\r\n        title: '予期しないエラーが発生しました',\r\n        description: 'アプリケーションで予期しない問題が発生しました。開発チームに報告されます。',\r\n        actionLabel: 'ページを再読み込み',\r\n        actionType: 'reload',\r\n        icon: '⚠️',\r\n        severity: 'error',\r\n        showDetails: true\r\n      },\r\n      conditions: {\r\n        category: ['javascript'],\r\n        severity: ['high', 'critical']\r\n      }\r\n    })\r\n\r\n    // ロード関連エラー\r\n    this.patterns.push({\r\n      id: 'resource-load-failed',\r\n      pattern: /loading|chunk.*error|failed.*fetch.*resource/i,\r\n      message: {\r\n        title: 'リソースの読み込みに失敗しました',\r\n        description: 'ページの一部のリソースが読み込まれませんでした。ページを再読み込みしてください。',\r\n        actionLabel: 'ページを再読み込み',\r\n        actionType: 'reload',\r\n        icon: '📦',\r\n        severity: 'warning'\r\n      },\r\n      conditions: {\r\n        category: ['network', 'system']\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * カテゴリ別のフォールバックメッセージを初期化\r\n   */\r\n  private initializeFallbackMessages(): void {\r\n    this.fallbackMessages.set('network', {\r\n      title: 'ネットワークエラー',\r\n      description: 'ネットワーク接続に問題が発生しました。',\r\n      actionLabel: '再試行',\r\n      actionType: 'retry',\r\n      icon: '🌐',\r\n      severity: 'error'\r\n    })\r\n\r\n    this.fallbackMessages.set('vue', {\r\n      title: 'UI エラー',\r\n      description: '画面の表示に問題が発生しました。',\r\n      actionLabel: 'ページを再読み込み',\r\n      actionType: 'reload',\r\n      icon: '🖼️',\r\n      severity: 'warning'\r\n    })\r\n\r\n    this.fallbackMessages.set('javascript', {\r\n      title: 'アプリケーションエラー',\r\n      description: 'アプリケーションで問題が発生しました。',\r\n      actionLabel: 'ページを再読み込み',\r\n      actionType: 'reload',\r\n      icon: '⚙️',\r\n      severity: 'error'\r\n    })\r\n\r\n    this.fallbackMessages.set('game', {\r\n      title: 'ゲームエラー',\r\n      description: 'ゲーム中に問題が発生しました。',\r\n      actionLabel: 'ゲームを再開',\r\n      actionType: 'retry',\r\n      icon: '🎮',\r\n      severity: 'error'\r\n    })\r\n\r\n    this.fallbackMessages.set('async', {\r\n      title: '処理エラー',\r\n      description: '非同期処理でエラーが発生しました。',\r\n      actionLabel: '再試行',\r\n      actionType: 'retry',\r\n      icon: '⏳',\r\n      severity: 'warning'\r\n    })\r\n\r\n    this.fallbackMessages.set('performance', {\r\n      title: 'パフォーマンスの問題',\r\n      description: 'アプリケーションの動作が重くなっています。',\r\n      actionLabel: 'ページを再読み込み',\r\n      actionType: 'reload',\r\n      icon: '🚀',\r\n      severity: 'warning'\r\n    })\r\n\r\n    this.fallbackMessages.set('security', {\r\n      title: 'セキュリティエラー',\r\n      description: 'セキュリティ制限により操作が制限されました。',\r\n      actionLabel: 'サポートに連絡',\r\n      actionType: 'contact',\r\n      icon: '🔐',\r\n      severity: 'error'\r\n    })\r\n\r\n    this.fallbackMessages.set('user', {\r\n      title: 'ユーザー操作エラー',\r\n      description: '操作に問題が発生しました。',\r\n      actionLabel: 'もう一度試す',\r\n      actionType: 'retry',\r\n      icon: '👤',\r\n      severity: 'info'\r\n    })\r\n\r\n    this.fallbackMessages.set('system', {\r\n      title: 'システムエラー',\r\n      description: 'システムで問題が発生しました。',\r\n      actionLabel: 'ページを再読み込み',\r\n      actionType: 'reload',\r\n      icon: '🖥️',\r\n      severity: 'error'\r\n    })\r\n  }\r\n\r\n  /**\r\n   * エラー情報からユーザーフレンドリーなメッセージを生成\r\n   */\r\n  generateUserMessage(errorInfo: ErrorInfo): UserMessage {\r\n    // パターンマッチングを試行\r\n    for (const pattern of this.patterns) {\r\n      if (this.matchesPattern(errorInfo, pattern)) {\r\n        return this.enrichMessage(pattern.message, errorInfo)\r\n      }\r\n    }\r\n\r\n    // フォールバックメッセージを使用\r\n    const fallback = this.fallbackMessages.get(errorInfo.category)\r\n    if (fallback) {\r\n      return this.enrichMessage(fallback, errorInfo)\r\n    }\r\n\r\n    // 最終フォールバック\r\n    return this.enrichMessage({\r\n      title: 'エラーが発生しました',\r\n      description: 'アプリケーションで問題が発生しました。しばらく時間をおいてから再試行してください。',\r\n      actionLabel: 'ページを再読み込み',\r\n      actionType: 'reload',\r\n      icon: '❗',\r\n      severity: 'error'\r\n    }, errorInfo)\r\n  }\r\n\r\n  /**\r\n   * パターンがエラーにマッチするかチェック\r\n   */\r\n  private matchesPattern(errorInfo: ErrorInfo, pattern: MessagePattern): boolean {\r\n    // メッセージパターンのチェック\r\n    const messageMatch = pattern.pattern instanceof RegExp\r\n      ? pattern.pattern.test(errorInfo.message)\r\n      : errorInfo.message.toLowerCase().includes(pattern.pattern.toLowerCase())\r\n\r\n    if (!messageMatch) {\r\n      return false\r\n    }\r\n\r\n    // 条件のチェック\r\n    if (pattern.conditions) {\r\n      const { category, severity, context } = pattern.conditions\r\n\r\n      if (category && !category.includes(errorInfo.category)) {\r\n        return false\r\n      }\r\n\r\n      if (severity && !severity.includes(errorInfo.severity)) {\r\n        return false\r\n      }\r\n\r\n      if (context && !context(errorInfo)) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * メッセージを拡張（時間情報など）\r\n   */\r\n  private enrichMessage(message: UserMessage, errorInfo: ErrorInfo): UserMessage {\r\n    const timeString = new Date(errorInfo.timestamp).toLocaleTimeString()\r\n    \r\n    return {\r\n      ...message,\r\n      description: `${message.description}${errorInfo.context?.deviceInfo?.isMobile ? ' (モバイル)' : ''}`,\r\n      actionData: {\r\n        ...message.actionData,\r\n        timestamp: errorInfo.timestamp,\r\n        errorId: errorInfo.fingerprint,\r\n        component: errorInfo.component\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * カスタムパターンを追加\r\n   */\r\n  addPattern(pattern: MessagePattern): void {\r\n    // 既存のパターンと重複しないかチェック\r\n    const exists = this.patterns.some(p => p.id === pattern.id)\r\n    if (exists) {\r\n      console.warn(`Pattern with id \"${pattern.id}\" already exists`)\r\n      return\r\n    }\r\n\r\n    this.patterns.unshift(pattern) // 新しいパターンを優先\r\n  }\r\n\r\n  /**\r\n   * パターンを削除\r\n   */\r\n  removePattern(id: string): boolean {\r\n    const index = this.patterns.findIndex(p => p.id === id)\r\n    if (index !== -1) {\r\n      this.patterns.splice(index, 1)\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * すべてのパターンを取得\r\n   */\r\n  getPatterns(): MessagePattern[] {\r\n    return [...this.patterns]\r\n  }\r\n\r\n  /**\r\n   * メッセージのプレビュー（テスト用）\r\n   */\r\n  previewMessage(errorMessage: string, category: ErrorInfo['category'], severity: ErrorInfo['severity'] = 'medium'): UserMessage {\r\n    const mockError: ErrorInfo = {\r\n      message: errorMessage,\r\n      category,\r\n      severity,\r\n      timestamp: Date.now(),\r\n      userAgent: navigator.userAgent\r\n    }\r\n\r\n    return this.generateUserMessage(mockError)\r\n  }\r\n\r\n  /**\r\n   * 統計情報を取得\r\n   */\r\n  getStats() {\r\n    return {\r\n      patternsCount: this.patterns.length,\r\n      categoriesCount: this.fallbackMessages.size,\r\n      patterns: this.patterns.map(p => ({\r\n        id: p.id,\r\n        hasConditions: !!p.conditions\r\n      }))\r\n    }\r\n  }\r\n}\r\n\r\n// シングルトンインスタンス\r\nexport const userFriendlyMessages = new UserFriendlyMessages()","<script setup lang=\"ts\">\r\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\r\nimport type { ErrorInfo } from '@/utils/error-handling/ErrorHandler'\r\nimport { userFriendlyMessages, type UserMessage } from '@/utils/error-handling/UserFriendlyMessages'\r\n\r\ninterface ErrorNotification {\r\n  id: string\r\n  userMessage: UserMessage\r\n  originalError: ErrorInfo\r\n  timestamp: number\r\n  autoHide?: boolean\r\n  hideDelay?: number\r\n  isExpanded?: boolean\r\n}\r\n\r\nconst notifications = ref<ErrorNotification[]>([])\r\nconst maxNotifications = 3\r\nconst defaultHideDelay = 5000\r\n\r\n// 通知を追加\r\nconst addNotification = (notification: Omit<ErrorNotification, 'id' | 'timestamp'>) => {\r\n  const id = `${Date.now()}-${Math.random()}`\r\n  const newNotification: ErrorNotification = {\r\n    ...notification,\r\n    id,\r\n    timestamp: Date.now(),\r\n    autoHide: notification.autoHide ?? notification.userMessage.severity !== 'critical',\r\n    hideDelay: notification.hideDelay ?? defaultHideDelay,\r\n    isExpanded: false\r\n  }\r\n\r\n  notifications.value.unshift(newNotification)\r\n\r\n  // 最大数を超えたら古いものを削除\r\n  if (notifications.value.length > maxNotifications) {\r\n    notifications.value = notifications.value.slice(0, maxNotifications)\r\n  }\r\n\r\n  // 自動非表示\r\n  if (newNotification.autoHide) {\r\n    setTimeout(() => {\r\n      removeNotification(id)\r\n    }, newNotification.hideDelay)\r\n  }\r\n}\r\n\r\n// 通知を削除\r\nconst removeNotification = (id: string) => {\r\n  const index = notifications.value.findIndex(n => n.id === id)\r\n  if (index !== -1) {\r\n    notifications.value.splice(index, 1)\r\n  }\r\n}\r\n\r\n// すべての通知をクリア\r\nconst clearAll = () => {\r\n  notifications.value = []\r\n}\r\n\r\n// エラーイベントリスナー\r\nconst handleError = (event: CustomEvent) => {\r\n  const errorInfo: ErrorInfo = event.detail\r\n  \r\n  // 同じフィンガープリントの通知が既にある場合はスキップ\r\n  if (notifications.value.some(n => n.originalError.fingerprint === errorInfo.fingerprint)) {\r\n    return\r\n  }\r\n\r\n  // ユーザーフレンドリーなメッセージを生成\r\n  const userMessage = userFriendlyMessages.generateUserMessage(errorInfo)\r\n\r\n  addNotification({\r\n    userMessage,\r\n    originalError: errorInfo\r\n  })\r\n}\r\n\r\n// 通知のアイコン\r\nconst getIcon = (userMessage: UserMessage) => {\r\n  return userMessage.icon || getDefaultIcon(userMessage.severity)\r\n}\r\n\r\nconst getDefaultIcon = (severity: UserMessage['severity']) => {\r\n  switch (severity) {\r\n    case 'critical':\r\n      return '🚨'\r\n    case 'error':\r\n      return '⚠️'\r\n    case 'warning':\r\n      return 'ℹ️'\r\n    case 'info':\r\n      return '💡'\r\n  }\r\n}\r\n\r\n// 通知の色\r\nconst getColorClass = (severity: UserMessage['severity']) => {\r\n  switch (severity) {\r\n    case 'critical':\r\n      return 'notification-critical'\r\n    case 'error':\r\n      return 'notification-error'\r\n    case 'warning':\r\n      return 'notification-warning'\r\n    case 'info':\r\n      return 'notification-info'\r\n  }\r\n}\r\n\r\n// 通知のアクションを実行\r\nconst executeAction = (notification: ErrorNotification) => {\r\n  const { actionType, actionData } = notification.userMessage\r\n  \r\n  switch (actionType) {\r\n    case 'reload':\r\n      window.location.reload()\r\n      break\r\n    case 'retry':\r\n      // リトライロジック（カスタムイベント）\r\n      const retryEvent = new CustomEvent('app:retry-action', {\r\n        detail: { errorId: actionData?.errorId, component: actionData?.component }\r\n      })\r\n      window.dispatchEvent(retryEvent)\r\n      removeNotification(notification.id)\r\n      break\r\n    case 'navigate':\r\n      if (actionData?.url) {\r\n        window.location.href = actionData.url\r\n      }\r\n      break\r\n    case 'contact':\r\n      // サポート連絡フォームを開く\r\n      const contactEvent = new CustomEvent('app:open-support', {\r\n        detail: { errorInfo: notification.originalError }\r\n      })\r\n      window.dispatchEvent(contactEvent)\r\n      break\r\n    case 'close':\r\n    default:\r\n      removeNotification(notification.id)\r\n      break\r\n  }\r\n}\r\n\r\n// 詳細の表示/非表示を切り替え\r\nconst toggleDetails = (id: string) => {\r\n  const notification = notifications.value.find(n => n.id === id)\r\n  if (notification) {\r\n    notification.isExpanded = !notification.isExpanded\r\n  }\r\n}\r\n\r\n// ヘルプURLを開く\r\nconst openHelp = (helpUrl: string) => {\r\n  window.open(helpUrl, '_blank', 'noopener,noreferrer')\r\n}\r\n\r\n// アニメーションのための計算プロパティ\r\nconst visibleNotifications = computed(() => \r\n  notifications.value.map((notification, index) => ({\r\n    ...notification,\r\n    offset: index * (notification.isExpanded ? 120 : 80),\r\n    opacity: index < 3 ? 1 : 0.5\r\n  }))\r\n)\r\n\r\nonMounted(() => {\r\n  window.addEventListener('app:error', handleError as EventListener)\r\n  \r\n  // システムアラート用のリスナー\r\n  window.addEventListener('app:system-alert', (event: CustomEvent) => {\r\n    const { message } = event.detail\r\n    addNotification({\r\n      userMessage: {\r\n        title: 'システムアラート',\r\n        description: message,\r\n        actionLabel: 'ページを再読み込み',\r\n        actionType: 'reload',\r\n        icon: '🚀',\r\n        severity: 'critical',\r\n        showDetails: false\r\n      },\r\n      originalError: {\r\n        message,\r\n        category: 'system',\r\n        severity: 'critical',\r\n        timestamp: Date.now(),\r\n        userAgent: navigator.userAgent\r\n      },\r\n      autoHide: false\r\n    })\r\n  })\r\n})\r\n\r\nonUnmounted(() => {\r\n  window.removeEventListener('app:error', handleError as EventListener)\r\n  window.removeEventListener('app:system-alert', () => {})\r\n})\r\n\r\n// 外部からアクセス可能なメソッドを公開\r\ndefineExpose({\r\n  addNotification,\r\n  removeNotification,\r\n  clearAll,\r\n  executeAction,\r\n  toggleDetails\r\n})\r\n</script>\r\n\r\n<template>\r\n  <Teleport to=\"body\">\r\n    <div class=\"error-notification-container\" role=\"alert\" aria-live=\"polite\">\r\n      <TransitionGroup name=\"notification\" tag=\"div\">\r\n        <div\r\n          v-for=\"(notification, index) in visibleNotifications\"\r\n          :key=\"notification.id\"\r\n          :class=\"['error-notification', getColorClass(notification.userMessage.severity), { 'expanded': notification.isExpanded }]\"\r\n          :style=\"{\r\n            transform: `translateY(${notification.offset}px)`,\r\n            opacity: notification.opacity,\r\n            zIndex: 1000 - index\r\n          }\"\r\n          role=\"alertdialog\"\r\n          :aria-label=\"`${notification.userMessage.severity}エラー: ${notification.userMessage.title}`\"\r\n        >\r\n          <div class=\"notification-content\">\r\n            <span class=\"notification-icon\" aria-hidden=\"true\">\r\n              {{ getIcon(notification.userMessage) }}\r\n            </span>\r\n            \r\n            <div class=\"notification-body\">\r\n              <h4 class=\"notification-title\">{{ notification.userMessage.title }}</h4>\r\n              <p class=\"notification-description\">{{ notification.userMessage.description }}</p>\r\n              \r\n              <!-- メインアクション -->\r\n              <div v-if=\"notification.userMessage.actionLabel\" class=\"notification-actions\">\r\n                <button\r\n                  @click=\"executeAction(notification)\"\r\n                  class=\"notification-action-btn primary\"\r\n                >\r\n                  {{ notification.userMessage.actionLabel }}\r\n                </button>\r\n                \r\n                <!-- ヘルプリンク -->\r\n                <button\r\n                  v-if=\"notification.userMessage.helpUrl\"\r\n                  @click=\"openHelp(notification.userMessage.helpUrl!)\"\r\n                  class=\"notification-action-btn secondary small\"\r\n                >\r\n                  ヘルプ\r\n                </button>\r\n                \r\n                <!-- 詳細表示トグル -->\r\n                <button\r\n                  v-if=\"notification.userMessage.showDetails\"\r\n                  @click=\"toggleDetails(notification.id)\"\r\n                  class=\"notification-action-btn secondary small\"\r\n                >\r\n                  {{ notification.isExpanded ? '詳細を隠す' : '詳細を表示' }}\r\n                </button>\r\n              </div>\r\n              \r\n              <!-- 詳細情報（開発者向け） -->\r\n              <div v-if=\"notification.isExpanded && notification.userMessage.showDetails\" class=\"notification-details\">\r\n                <div class=\"detail-section\">\r\n                  <strong>エラーメッセージ:</strong>\r\n                  <code>{{ notification.originalError.message }}</code>\r\n                </div>\r\n                \r\n                <div v-if=\"notification.originalError.component\" class=\"detail-section\">\r\n                  <strong>コンポーネント:</strong>\r\n                  <code>{{ notification.originalError.component }}</code>\r\n                </div>\r\n                \r\n                <div class=\"detail-section\">\r\n                  <strong>カテゴリ:</strong>\r\n                  <span class=\"detail-tag\">{{ notification.originalError.category }}</span>\r\n                  <strong>深刻度:</strong>\r\n                  <span class=\"detail-tag\">{{ notification.originalError.severity }}</span>\r\n                </div>\r\n                \r\n                <div v-if=\"notification.originalError.context?.route\" class=\"detail-section\">\r\n                  <strong>ページ:</strong>\r\n                  <code>{{ notification.originalError.context.route }}</code>\r\n                </div>\r\n                \r\n                <div class=\"detail-section\">\r\n                  <strong>時刻:</strong>\r\n                  {{ new Date(notification.originalError.timestamp).toLocaleString() }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <button\r\n              @click=\"removeNotification(notification.id)\"\r\n              class=\"notification-close\"\r\n              :aria-label=\"`通知を閉じる: ${notification.userMessage.title}`\"\r\n            >\r\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n                <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" stroke-width=\"2\"/>\r\n                <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" stroke-width=\"2\"/>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          \r\n          <!-- 自動非表示のプログレスバー -->\r\n          <div\r\n            v-if=\"notification.autoHide\"\r\n            class=\"notification-progress\"\r\n            :style=\"{\r\n              animationDuration: `${notification.hideDelay}ms`\r\n            }\"\r\n          />\r\n        </div>\r\n      </TransitionGroup>\r\n    </div>\r\n  </Teleport>\r\n</template>\r\n\r\n<style scoped>\r\n.error-notification-container {\r\n  position: fixed;\r\n  top: var(--space-md);\r\n  right: var(--space-md);\r\n  z-index: var(--z-notification);\r\n  pointer-events: none;\r\n}\r\n\r\n.error-notification {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  min-width: 320px;\r\n  max-width: 420px;\r\n  background: rgba(17, 24, 39, 0.95);\r\n  border-radius: 12px;\r\n  box-shadow: \r\n    0 10px 25px rgba(0, 0, 0, 0.3),\r\n    0 0 0 1px rgba(255, 255, 255, 0.1);\r\n  backdrop-filter: blur(12px);\r\n  pointer-events: auto;\r\n  transition: all 0.3s ease;\r\n  overflow: hidden;\r\n}\r\n\r\n.notification-content {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: var(--space-sm);\r\n  padding: var(--space-md);\r\n}\r\n\r\n.notification-icon {\r\n  font-size: var(--text-xl);\r\n  flex-shrink: 0;\r\n  margin-top: 2px;\r\n}\r\n\r\n.notification-body {\r\n  flex: 1;\r\n  min-width: 0;\r\n}\r\n\r\n.notification-title {\r\n  color: rgba(255, 255, 255, 0.95);\r\n  font-size: var(--text-base);\r\n  font-weight: 600;\r\n  line-height: 1.4;\r\n  margin: 0 0 var(--space-xs) 0;\r\n}\r\n\r\n.notification-description {\r\n  color: rgba(255, 255, 255, 0.8);\r\n  font-size: var(--text-sm);\r\n  line-height: 1.5;\r\n  margin: 0;\r\n  word-wrap: break-word;\r\n}\r\n\r\n.notification-actions {\r\n  margin-top: var(--space-sm);\r\n  display: flex;\r\n  gap: var(--space-xs);\r\n}\r\n\r\n.notification-action-btn {\r\n  padding: var(--space-xs) var(--space-sm);\r\n  background: rgba(255, 255, 255, 0.1);\r\n  color: white;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  border-radius: 6px;\r\n  font-size: var(--text-sm);\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all var(--transition-fast);\r\n}\r\n\r\n.notification-action-btn.primary {\r\n  background: rgba(59, 130, 246, 0.8);\r\n  border-color: rgba(59, 130, 246, 1);\r\n}\r\n\r\n.notification-action-btn.primary:hover {\r\n  background: rgba(59, 130, 246, 1);\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.notification-action-btn.secondary {\r\n  background: rgba(255, 255, 255, 0.05);\r\n  border-color: rgba(255, 255, 255, 0.3);\r\n}\r\n\r\n.notification-action-btn.secondary:hover {\r\n  background: rgba(255, 255, 255, 0.15);\r\n  border-color: rgba(255, 255, 255, 0.5);\r\n}\r\n\r\n.notification-action-btn.small {\r\n  padding: var(--space-2xs) var(--space-xs);\r\n  font-size: var(--text-xs);\r\n}\r\n\r\n.notification-action-btn:hover {\r\n  background: rgba(255, 255, 255, 0.2);\r\n  border-color: rgba(255, 255, 255, 0.4);\r\n}\r\n\r\n.notification-close {\r\n  position: absolute;\r\n  top: var(--space-sm);\r\n  right: var(--space-sm);\r\n  width: 24px;\r\n  height: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: transparent;\r\n  border: none;\r\n  color: rgba(255, 255, 255, 0.5);\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  transition: all var(--transition-fast);\r\n  padding: 0;\r\n}\r\n\r\n.notification-close:hover {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  color: rgba(255, 255, 255, 0.8);\r\n}\r\n\r\n/* 詳細情報スタイル */\r\n.notification-details {\r\n  margin-top: var(--space-sm);\r\n  padding: var(--space-sm);\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border-radius: 6px;\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.detail-section {\r\n  margin-bottom: var(--space-xs);\r\n  font-size: var(--text-xs);\r\n}\r\n\r\n.detail-section:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.detail-section strong {\r\n  color: rgba(255, 255, 255, 0.9);\r\n  font-weight: 600;\r\n  margin-right: var(--space-xs);\r\n}\r\n\r\n.detail-section code {\r\n  background: rgba(0, 0, 0, 0.5);\r\n  padding: 2px var(--space-xs);\r\n  border-radius: 3px;\r\n  font-family: monospace;\r\n  font-size: var(--text-2xs);\r\n  color: rgba(255, 255, 255, 0.8);\r\n}\r\n\r\n.detail-tag {\r\n  display: inline-block;\r\n  background: rgba(59, 130, 246, 0.2);\r\n  color: rgba(59, 130, 246, 1);\r\n  padding: 1px var(--space-xs);\r\n  border-radius: 3px;\r\n  font-size: var(--text-2xs);\r\n  font-weight: 500;\r\n  margin-right: var(--space-xs);\r\n}\r\n\r\n/* 拡張状態 */\r\n.error-notification.expanded {\r\n  min-height: 120px;\r\n}\r\n\r\n/* プログレスバー */\r\n.notification-progress {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  height: 3px;\r\n  background: currentColor;\r\n  animation: progress linear forwards;\r\n  transform-origin: left;\r\n}\r\n\r\n@keyframes progress {\r\n  from {\r\n    transform: scaleX(1);\r\n  }\r\n  to {\r\n    transform: scaleX(0);\r\n  }\r\n}\r\n\r\n/* 深刻度別のスタイル */\r\n.notification-critical {\r\n  border-left: 4px solid rgba(239, 68, 68, 1);\r\n  animation: pulse-critical 2s infinite;\r\n}\r\n\r\n.notification-critical .notification-icon {\r\n  color: rgba(239, 68, 68, 1);\r\n}\r\n\r\n.notification-critical .notification-progress {\r\n  color: rgba(239, 68, 68, 0.6);\r\n}\r\n\r\n.notification-error {\r\n  border-left: 4px solid rgba(245, 158, 11, 1);\r\n}\r\n\r\n.notification-error .notification-icon {\r\n  color: rgba(245, 158, 11, 1);\r\n}\r\n\r\n.notification-error .notification-progress {\r\n  color: rgba(245, 158, 11, 0.6);\r\n}\r\n\r\n.notification-warning {\r\n  border-left: 4px solid rgba(59, 130, 246, 1);\r\n}\r\n\r\n.notification-warning .notification-icon {\r\n  color: rgba(59, 130, 246, 1);\r\n}\r\n\r\n.notification-warning .notification-progress {\r\n  color: rgba(59, 130, 246, 0.6);\r\n}\r\n\r\n.notification-info {\r\n  border-left: 4px solid rgba(156, 163, 175, 1);\r\n}\r\n\r\n.notification-info .notification-icon {\r\n  color: rgba(156, 163, 175, 1);\r\n}\r\n\r\n.notification-info .notification-progress {\r\n  color: rgba(156, 163, 175, 0.6);\r\n}\r\n\r\n@keyframes pulse-critical {\r\n  0% { box-shadow: 0 0 0 0 rgba(239, 68, 68, 0.3); }\r\n  70% { box-shadow: 0 0 0 10px rgba(239, 68, 68, 0); }\r\n  100% { box-shadow: 0 0 0 0 rgba(239, 68, 68, 0); }\r\n}\r\n\r\n/* トランジション */\r\n.notification-enter-active,\r\n.notification-leave-active {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.notification-enter-from {\r\n  transform: translateX(100%) !important;\r\n  opacity: 0 !important;\r\n}\r\n\r\n.notification-leave-to {\r\n  transform: translateX(100%) !important;\r\n  opacity: 0 !important;\r\n}\r\n\r\n/* レスポンシブ */\r\n@media (max-width: 640px) {\r\n  .error-notification-container {\r\n    top: var(--space-sm);\r\n    right: var(--space-sm);\r\n    left: var(--space-sm);\r\n  }\r\n  \r\n  .error-notification {\r\n    position: relative;\r\n    transform: none !important;\r\n    max-width: 100%;\r\n    margin-bottom: var(--space-sm);\r\n  }\r\n  \r\n  .notification-content {\r\n    padding: var(--space-sm);\r\n  }\r\n  \r\n  .notification-title {\r\n    font-size: var(--text-sm);\r\n  }\r\n  \r\n  .notification-description {\r\n    font-size: var(--text-xs);\r\n  }\r\n  \r\n  .notification-actions {\r\n    flex-direction: column;\r\n    gap: var(--space-xs);\r\n  }\r\n  \r\n  .notification-action-btn {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n/* アクセシビリティ */\r\n@media (prefers-reduced-motion: reduce) {\r\n  .error-notification,\r\n  .notification-action-btn,\r\n  .notification-close {\r\n    transition: none;\r\n  }\r\n  \r\n  .notification-progress {\r\n    animation: none;\r\n    display: none;\r\n  }\r\n}\r\n\r\n/* ハイコントラストモード */\r\n@media (prefers-contrast: high) {\r\n  .error-notification {\r\n    border: 2px solid currentColor;\r\n  }\r\n  \r\n  .notification-action-btn {\r\n    border-width: 2px;\r\n  }\r\n}\r\n\r\n/* ダークモード対応は既に考慮済み（背景が半透明） */\r\n</style>","/**\r\n * セキュリティユーティリティ\r\n * 入力検証、サニタイゼーション、脅威検出、データ保護機能を提供\r\n * OWASP Top 10 対策を実装\r\n */\r\n\r\n/**\r\n * XSS攻撃対策強化版入力サニタイゼーション\r\n * HTMLタグ、スクリプト、危険な文字を除去\r\n */\r\nexport function sanitizeInput(input: string): string {\r\n  if (typeof input !== 'string') {\r\n    throw new Error('入力は文字列である必要があります')\r\n  }\r\n  \r\n  return input\r\n    // XSS対策: HTMLタグとスクリプト関連文字を除去\r\n    .replace(/<[^>]*>/g, '') // HTMLタグ全般\r\n    .replace(/javascript:/gi, '') // JavaScriptプロトコル\r\n    .replace(/on\\w+\\s*=/gi, '') // イベントハンドラー\r\n    .replace(/[<>\"'&]/g, (match) => {\r\n      const htmlEntities: Record<string, string> = {\r\n        '<': '&lt;',\r\n        '>': '&gt;',\r\n        '\"': '&quot;',\r\n        \"'\": '&#x27;',\r\n        '&': '&amp;'\r\n      }\r\n      return htmlEntities[match] || match\r\n    })\r\n    .replace(/\\x00-\\x1f\\x7f-\\x9f/g, '') // 制御文字を除去\r\n    .trim()\r\n    .slice(0, 1000) // 長さ制限\r\n}\r\n\r\n/**\r\n * 数値入力を検証\r\n */\r\nexport function validateNumber(\r\n  value: unknown,\r\n  min: number,\r\n  max: number,\r\n  allowFloat = false\r\n): number | null {\r\n  const num = Number(value)\r\n  \r\n  if (isNaN(num)) {\r\n    return null\r\n  }\r\n  \r\n  if (!allowFloat && !Number.isInteger(num)) {\r\n    return null\r\n  }\r\n  \r\n  if (num < min || num > max) {\r\n    return null\r\n  }\r\n  \r\n  return num\r\n}\r\n\r\n/**\r\n * 配列の長さを検証\r\n */\r\nexport function validateArrayLength<T>(\r\n  array: T[],\r\n  minLength: number,\r\n  maxLength: number\r\n): boolean {\r\n  return array.length >= minLength && array.length <= maxLength\r\n}\r\n\r\n/**\r\n * レート制限クラス\r\n */\r\nexport class RateLimiter {\r\n  private attempts = new Map<string, number[]>()\r\n  \r\n  /**\r\n   * アクションが許可されているかチェック\r\n   */\r\n  isAllowed(key: string, maxAttempts: number, windowMs: number): boolean {\r\n    const now = Date.now()\r\n    const userAttempts = this.attempts.get(key) || []\r\n    \r\n    // 古いエントリを削除\r\n    const validAttempts = userAttempts.filter(time => now - time < windowMs)\r\n    \r\n    if (validAttempts.length >= maxAttempts) {\r\n      return false\r\n    }\r\n    \r\n    validAttempts.push(now)\r\n    this.attempts.set(key, validAttempts)\r\n    return true\r\n  }\r\n  \r\n  /**\r\n   * 特定のキーのレート制限をリセット\r\n   */\r\n  reset(key: string): void {\r\n    this.attempts.delete(key)\r\n  }\r\n  \r\n  /**\r\n   * 全てのレート制限をクリア\r\n   */\r\n  clear(): void {\r\n    this.attempts.clear()\r\n  }\r\n}\r\n\r\n/**\r\n * セキュアなランダム文字列を生成\r\n * CSRFトークン、セッションID等に使用\r\n */\r\nexport function generateSecureRandomString(length: number): string {\r\n  if (length <= 0 || length > 256) {\r\n    throw new Error('長さは1から256の間である必要があります')\r\n  }\r\n  \r\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n  const array = new Uint8Array(length)\r\n  \r\n  if (typeof window !== 'undefined' && window.crypto && window.crypto.getRandomValues) {\r\n    window.crypto.getRandomValues(array)\r\n  } else {\r\n    // フォールバック（セキュリティレベル低下の警告）\r\n    console.warn('⚠️ セキュリティ警告: crypto.getRandomValues が利用できません。フォールバック実装を使用します。')\r\n    for (let i = 0; i < length; i++) {\r\n      array[i] = Math.floor(Math.random() * 256)\r\n    }\r\n  }\r\n  \r\n  return Array.from(array, byte => chars[byte % chars.length]).join('')\r\n}\r\n\r\n/**\r\n * CSRF トークンを生成\r\n */\r\nexport function generateCSRFToken(): string {\r\n  return generateSecureRandomString(32)\r\n}\r\n\r\n/**\r\n * セキュアハッシュ生成（簡易版）\r\n */\r\nexport async function generateSecureHash(data: string): Promise<string> {\r\n  if (typeof window !== 'undefined' && window.crypto && window.crypto.subtle) {\r\n    const encoder = new TextEncoder()\r\n    const dataBuffer = encoder.encode(data)\r\n    const hashBuffer = await window.crypto.subtle.digest('SHA-256', dataBuffer)\r\n    const hashArray = Array.from(new Uint8Array(hashBuffer))\r\n    return hashArray.map(b => b.toString(16).padStart(2, '0')).join('')\r\n  } else {\r\n    // フォールバック: 簡易ハッシュ（セキュリティレベル低下）\r\n    console.warn('⚠️ セキュリティ警告: crypto.subtle が利用できません。簡易ハッシュを使用します。')\r\n    let hash = 0\r\n    for (let i = 0; i < data.length; i++) {\r\n      const char = data.charCodeAt(i)\r\n      hash = ((hash << 5) - hash) + char\r\n      hash = hash & hash // 32bit整数に変換\r\n    }\r\n    return Math.abs(hash).toString(16)\r\n  }\r\n}\r\n\r\n/**\r\n * 暗号化対応 localStorageへの安全な保存\r\n * データ改ざん検知機能付き\r\n */\r\nexport function secureLocalStorage() {\r\n  const ENCRYPTION_KEY_PREFIX = 'game_enc_'\r\n  const INTEGRITY_SUFFIX = '_integrity'\r\n  \r\n  return {\r\n    async setItem(key: string, value: unknown, encrypt = false): Promise<void> {\r\n      try {\r\n        const sanitizedKey = sanitizeInput(key)\r\n        let serialized = JSON.stringify(value)\r\n        \r\n        if (encrypt) {\r\n          // 簡易暗号化（本格実装では Web Crypto API使用推奨）\r\n          const encryptionKey = await this.getOrCreateEncryptionKey()\r\n          serialized = await this.simpleEncrypt(serialized, encryptionKey)\r\n        }\r\n        \r\n        // 整合性チェック用ハッシュを生成\r\n        const integrityHash = await generateSecureHash(serialized)\r\n        \r\n        localStorage.setItem(sanitizedKey, serialized)\r\n        localStorage.setItem(sanitizedKey + INTEGRITY_SUFFIX, integrityHash)\r\n        \r\n      } catch (error) {\r\n        console.error('❌ セキュアストレージ保存失敗:', error)\r\n        throw new Error(`ストレージ保存に失敗: ${error instanceof Error ? error.message : String(error)}`)\r\n      }\r\n    },\r\n    \r\n    async getItem<T>(key: string, decrypt = false): Promise<T | null> {\r\n      try {\r\n        const sanitizedKey = sanitizeInput(key)\r\n        const item = localStorage.getItem(sanitizedKey)\r\n        const integrityHash = localStorage.getItem(sanitizedKey + INTEGRITY_SUFFIX)\r\n        \r\n        if (!item) return null\r\n        \r\n        // 整合性チェック\r\n        if (integrityHash) {\r\n          const currentHash = await generateSecureHash(item)\r\n          if (currentHash !== integrityHash) {\r\n            console.error('❌ データ改ざんを検出しました:', sanitizedKey)\r\n            this.removeItem(sanitizedKey) // 改ざんされたデータを削除\r\n            throw new Error('データ改ざんが検出されました')\r\n          }\r\n        }\r\n        \r\n        let data = item\r\n        if (decrypt) {\r\n          const encryptionKey = await this.getOrCreateEncryptionKey()\r\n          data = await this.simpleDecrypt(data, encryptionKey)\r\n        }\r\n        \r\n        return JSON.parse(data)\r\n      } catch (error) {\r\n        console.error('❌ セキュアストレージ読み込み失敗:', error)\r\n        return null\r\n      }\r\n    },\r\n    \r\n    removeItem(key: string): void {\r\n      try {\r\n        const sanitizedKey = sanitizeInput(key)\r\n        localStorage.removeItem(sanitizedKey)\r\n        localStorage.removeItem(sanitizedKey + INTEGRITY_SUFFIX)\r\n      } catch (error) {\r\n        console.error('❌ セキュアストレージ削除失敗:', error)\r\n      }\r\n    },\r\n    \r\n    async getOrCreateEncryptionKey(): Promise<string> {\r\n      const keyName = `${ENCRYPTION_KEY_PREFIX  }master`\r\n      let key = localStorage.getItem(keyName)\r\n      \r\n      if (!key) {\r\n        key = generateSecureRandomString(32)\r\n        localStorage.setItem(keyName, key)\r\n      }\r\n      \r\n      return key\r\n    },\r\n    \r\n    async simpleEncrypt(data: string, key: string): Promise<string> {\r\n      // 注意: これは簡易実装です。本格的な暗号化にはWeb Crypto APIを使用してください\r\n      const result = []\r\n      for (let i = 0; i < data.length; i++) {\r\n        const keyChar = key.charCodeAt(i % key.length)\r\n        const dataChar = data.charCodeAt(i)\r\n        result.push(String.fromCharCode(dataChar ^ keyChar))\r\n      }\r\n      return btoa(result.join(''))\r\n    },\r\n    \r\n    async simpleDecrypt(encryptedData: string, key: string): Promise<string> {\r\n      try {\r\n        const data = atob(encryptedData)\r\n        const result = []\r\n        for (let i = 0; i < data.length; i++) {\r\n          const keyChar = key.charCodeAt(i % key.length)\r\n          const dataChar = data.charCodeAt(i)\r\n          result.push(String.fromCharCode(dataChar ^ keyChar))\r\n        }\r\n        return result.join('')\r\n      } catch {\r\n        throw new Error('復号化に失敗しました')\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * セキュリティ監査ログの取得\r\n */\r\nexport function getSecurityIncidents(): any[] {\r\n  try {\r\n    return JSON.parse(localStorage.getItem('security_incidents') || '[]')\r\n  } catch {\r\n    return []\r\n  }\r\n}\r\n\r\n/**\r\n * セキュリティインシデントのクリア\r\n */\r\nexport function clearSecurityIncidents(): void {\r\n  localStorage.removeItem('security_incidents')\r\n}\r\n\r\n/**\r\n * データ整合性の一括検証\r\n */\r\nexport async function validateAllStoredData(): Promise<{ valid: number; invalid: number; details: string[] }> {\r\n  const storage = secureLocalStorage()\r\n  const results = { valid: 0, invalid: 0, details: [] as string[] }\r\n  \r\n  // localStorage内の全てのゲームデータをチェック\r\n  for (let i = 0; i < localStorage.length; i++) {\r\n    const key = localStorage.key(i)\r\n    if (!key || key.includes('_integrity') || key.includes('_version') || key.includes('_timestamp')) {\r\n      continue // メタデータキーはスキップ\r\n    }\r\n    \r\n    try {\r\n      await storage.getItem(key)\r\n      results.valid++\r\n    } catch (error) {\r\n      results.invalid++\r\n      results.details.push(`${key}: ${error instanceof Error ? error.message : String(error)}`)\r\n    }\r\n  }\r\n  \r\n  return results\r\n}","/**\r\n * キーボードアクセシビリティマネージャー\r\n * WCAG 2.1 AA準拠のキーボードナビゲーション実装\r\n */\r\n\r\nimport { sanitizeInput } from '@/utils/security'\r\n\r\nexport interface FocusableElement {\r\n  element: HTMLElement\r\n  priority: number\r\n  group?: string\r\n  onFocus?: () => void\r\n  onBlur?: () => void\r\n  onActivate?: () => void\r\n}\r\n\r\nexport interface KeyboardShortcut {\r\n  key: string\r\n  modifiers?: ('ctrl' | 'alt' | 'shift' | 'meta')[]\r\n  description: string\r\n  action: () => void\r\n  global?: boolean\r\n}\r\n\r\nexport class KeyboardManager {\r\n  private focusableElements: FocusableElement[] = []\r\n  private currentFocusIndex: number = -1\r\n  private shortcuts: Map<string, KeyboardShortcut> = new Map()\r\n  private isActive: boolean = true\r\n  private focusVisibleEnabled: boolean = true\r\n\r\n  constructor() {\r\n    this.setupEventListeners()\r\n    this.setupFocusVisible()\r\n  }\r\n\r\n  /**\r\n   * フォーカス可能要素を登録\r\n   */\r\n  registerFocusableElement(element: HTMLElement, options: Partial<FocusableElement> = {}): void {\r\n    const focusableElement: FocusableElement = {\r\n      element,\r\n      priority: options.priority || 0,\r\n      group: options.group,\r\n      onFocus: options.onFocus,\r\n      onBlur: options.onBlur,\r\n      onActivate: options.onActivate\r\n    }\r\n\r\n    // 既存要素の更新または新規追加\r\n    const existingIndex = this.focusableElements.findIndex(el => el.element === element)\r\n    if (existingIndex >= 0) {\r\n      this.focusableElements[existingIndex] = focusableElement\r\n    } else {\r\n      this.focusableElements.push(focusableElement)\r\n    }\r\n\r\n    // 優先度順にソート\r\n    this.focusableElements.sort((a, b) => b.priority - a.priority)\r\n\r\n    // ARIA属性の設定\r\n    this.setupElementAccessibility(element)\r\n  }\r\n\r\n  /**\r\n   * フォーカス可能要素の登録解除\r\n   */\r\n  unregisterFocusableElement(element: HTMLElement): void {\r\n    const index = this.focusableElements.findIndex(el => el.element === element)\r\n    if (index >= 0) {\r\n      this.focusableElements.splice(index, 1)\r\n      \r\n      // 現在のフォーカスインデックスを調整\r\n      if (this.currentFocusIndex >= index) {\r\n        this.currentFocusIndex = Math.max(0, this.currentFocusIndex - 1)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * キーボードショートカットを登録\r\n   */\r\n  registerShortcut(shortcut: KeyboardShortcut): void {\r\n    const key = this.createShortcutKey(shortcut.key, shortcut.modifiers || [])\r\n    this.shortcuts.set(key, shortcut)\r\n  }\r\n\r\n  /**\r\n   * キーボードショートカットの登録解除\r\n   */\r\n  unregisterShortcut(key: string, modifiers: ('ctrl' | 'alt' | 'shift' | 'meta')[] = []): void {\r\n    const shortcutKey = this.createShortcutKey(key, modifiers)\r\n    this.shortcuts.delete(shortcutKey)\r\n  }\r\n\r\n  /**\r\n   * 次の要素にフォーカス移動\r\n   */\r\n  focusNext(): void {\r\n    if (this.focusableElements.length === 0) return\r\n\r\n    this.currentFocusIndex = (this.currentFocusIndex + 1) % this.focusableElements.length\r\n    this.setFocus(this.currentFocusIndex)\r\n  }\r\n\r\n  /**\r\n   * 前の要素にフォーカス移動\r\n   */\r\n  focusPrevious(): void {\r\n    if (this.focusableElements.length === 0) return\r\n\r\n    this.currentFocusIndex = this.currentFocusIndex <= 0 \r\n      ? this.focusableElements.length - 1 \r\n      : this.currentFocusIndex - 1\r\n    this.setFocus(this.currentFocusIndex)\r\n  }\r\n\r\n  /**\r\n   * 特定のグループの最初の要素にフォーカス\r\n   */\r\n  focusGroup(groupName: string): void {\r\n    const groupElements = this.focusableElements.filter(el => el.group === groupName)\r\n    if (groupElements.length > 0) {\r\n      const index = this.focusableElements.indexOf(groupElements[0])\r\n      if (index >= 0) {\r\n        this.currentFocusIndex = index\r\n        this.setFocus(index)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 特定の要素にフォーカス\r\n   */\r\n  focusElement(element: HTMLElement): void {\r\n    const index = this.focusableElements.findIndex(el => el.element === element)\r\n    if (index >= 0) {\r\n      this.currentFocusIndex = index\r\n      this.setFocus(index)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 現在のフォーカス要素を取得\r\n   */\r\n  getCurrentFocusedElement(): HTMLElement | null {\r\n    if (this.currentFocusIndex >= 0 && this.currentFocusIndex < this.focusableElements.length) {\r\n      return this.focusableElements[this.currentFocusIndex].element\r\n    }\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * フォーカストラップの開始\r\n   */\r\n  startFocusTrap(container: HTMLElement): void {\r\n    const focusableInContainer = this.focusableElements.filter(el => \r\n      container.contains(el.element)\r\n    )\r\n    \r\n    if (focusableInContainer.length > 0) {\r\n      // コンテナ外の要素を一時的に無効化\r\n      this.focusableElements.forEach(el => {\r\n        if (!container.contains(el.element)) {\r\n          el.element.setAttribute('tabindex', '-1')\r\n          el.element.setAttribute('aria-hidden', 'true')\r\n        }\r\n      })\r\n      \r\n      // 最初の要素にフォーカス\r\n      this.focusElement(focusableInContainer[0].element)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * フォーカストラップの終了\r\n   */\r\n  endFocusTrap(): void {\r\n    // すべての要素の属性を復元\r\n    this.focusableElements.forEach(el => {\r\n      el.element.removeAttribute('tabindex')\r\n      el.element.removeAttribute('aria-hidden')\r\n    })\r\n  }\r\n\r\n  /**\r\n   * ヘルプテキストの表示/非表示\r\n   */\r\n  toggleHelp(): void {\r\n    const helpPanel = this.createHelpPanel()\r\n    document.body.appendChild(helpPanel)\r\n    \r\n    // ESCキーで閉じる\r\n    const closeHelp = (e: KeyboardEvent) => {\r\n      if (e.key === 'Escape') {\r\n        helpPanel.remove()\r\n        document.removeEventListener('keydown', closeHelp)\r\n      }\r\n    }\r\n    document.addEventListener('keydown', closeHelp)\r\n    \r\n    // フォーカスを移動\r\n    const closeButton = helpPanel.querySelector('button')\r\n    if (closeButton) {\r\n      closeButton.focus()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * スキップリンクの作成\r\n   */\r\n  createSkipLinks(): HTMLElement {\r\n    const skipLinks = document.createElement('div')\r\n    skipLinks.className = 'skip-links'\r\n    skipLinks.setAttribute('aria-label', 'スキップリンク')\r\n    \r\n    const skipToMain = this.createSkipLink('メインコンテンツに移動', '#main-content')\r\n    const skipToNav = this.createSkipLink('ナビゲーションに移動', '#navigation')\r\n    const skipToFooter = this.createSkipLink('フッターに移動', '#footer')\r\n    \r\n    skipLinks.appendChild(skipToMain)\r\n    skipLinks.appendChild(skipToNav)\r\n    skipLinks.appendChild(skipToFooter)\r\n    \r\n    return skipLinks\r\n  }\r\n\r\n  /**\r\n   * アクティブ状態の切り替え\r\n   */\r\n  setActive(active: boolean): void {\r\n    this.isActive = active\r\n    \r\n    if (!active) {\r\n      // フォーカスを解除\r\n      const currentElement = this.getCurrentFocusedElement()\r\n      if (currentElement) {\r\n        currentElement.blur()\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * フォーカス表示の有効/無効切り替え\r\n   */\r\n  setFocusVisible(enabled: boolean): void {\r\n    this.focusVisibleEnabled = enabled\r\n    document.documentElement.classList.toggle('keyboard-navigation', enabled)\r\n  }\r\n\r\n  private setupEventListeners(): void {\r\n    document.addEventListener('keydown', this.handleKeyDown.bind(this))\r\n    document.addEventListener('focusin', this.handleFocusIn.bind(this))\r\n    document.addEventListener('focusout', this.handleFocusOut.bind(this))\r\n    \r\n    // マウス使用時はフォーカス表示を無効化\r\n    document.addEventListener('mousedown', () => {\r\n      document.documentElement.classList.remove('keyboard-navigation')\r\n    })\r\n  }\r\n\r\n  private handleKeyDown(event: KeyboardEvent): void {\r\n    if (!this.isActive) return\r\n\r\n    // ショートカットの処理\r\n    const shortcutKey = this.createShortcutKey(event.key, this.getActiveModifiers(event))\r\n    const shortcut = this.shortcuts.get(shortcutKey)\r\n    \r\n    if (shortcut) {\r\n      event.preventDefault()\r\n      shortcut.action()\r\n      return\r\n    }\r\n\r\n    // 基本的なナビゲーション\r\n    switch (event.key) {\r\n      case 'Tab':\r\n        event.preventDefault()\r\n        if (event.shiftKey) {\r\n          this.focusPrevious()\r\n        } else {\r\n          this.focusNext()\r\n        }\r\n        break\r\n\r\n      case 'ArrowDown':\r\n      case 'ArrowRight':\r\n        event.preventDefault()\r\n        this.focusNext()\r\n        break\r\n\r\n      case 'ArrowUp':\r\n      case 'ArrowLeft':\r\n        event.preventDefault()\r\n        this.focusPrevious()\r\n        break\r\n\r\n      case 'Home':\r\n        event.preventDefault()\r\n        this.currentFocusIndex = 0\r\n        this.setFocus(0)\r\n        break\r\n\r\n      case 'End':\r\n        event.preventDefault()\r\n        this.currentFocusIndex = this.focusableElements.length - 1\r\n        this.setFocus(this.currentFocusIndex)\r\n        break\r\n\r\n      case 'Enter':\r\n      case ' ':\r\n        const currentElement = this.getCurrentFocusedElement()\r\n        if (currentElement) {\r\n          event.preventDefault()\r\n          const focusableEl = this.focusableElements[this.currentFocusIndex]\r\n          if (focusableEl.onActivate) {\r\n            focusableEl.onActivate()\r\n          } else {\r\n            currentElement.click()\r\n          }\r\n        }\r\n        break\r\n\r\n      case 'F1':\r\n        event.preventDefault()\r\n        this.toggleHelp()\r\n        break\r\n    }\r\n  }\r\n\r\n  private handleFocusIn(event: FocusEvent): void {\r\n    if (!this.focusVisibleEnabled) return\r\n\r\n    const target = event.target as HTMLElement\r\n    const index = this.focusableElements.findIndex(el => el.element === target)\r\n    \r\n    if (index >= 0) {\r\n      this.currentFocusIndex = index\r\n      const focusableEl = this.focusableElements[index]\r\n      \r\n      // カスタムフォーカスハンドラを実行\r\n      if (focusableEl.onFocus) {\r\n        focusableEl.onFocus()\r\n      }\r\n      \r\n      // キーボードナビゲーション表示を有効化\r\n      document.documentElement.classList.add('keyboard-navigation')\r\n    }\r\n  }\r\n\r\n  private handleFocusOut(event: FocusEvent): void {\r\n    const target = event.target as HTMLElement\r\n    const index = this.focusableElements.findIndex(el => el.element === target)\r\n    \r\n    if (index >= 0) {\r\n      const focusableEl = this.focusableElements[index]\r\n      \r\n      // カスタムブラーハンドラを実行\r\n      if (focusableEl.onBlur) {\r\n        focusableEl.onBlur()\r\n      }\r\n    }\r\n  }\r\n\r\n  private setFocus(index: number): void {\r\n    if (index < 0 || index >= this.focusableElements.length) return\r\n\r\n    const focusableEl = this.focusableElements[index]\r\n    const element = focusableEl.element\r\n\r\n    // 要素が表示されているかチェック\r\n    if (element.offsetParent === null) {\r\n      // 非表示の場合は次の要素に移動\r\n      this.focusNext()\r\n      return\r\n    }\r\n\r\n    element.focus()\r\n    \r\n    // スクロールして表示\r\n    element.scrollIntoView({\r\n      behavior: 'smooth',\r\n      block: 'center',\r\n      inline: 'center'\r\n    })\r\n  }\r\n\r\n  private setupElementAccessibility(element: HTMLElement): void {\r\n    // タブインデックスの設定\r\n    if (!element.hasAttribute('tabindex')) {\r\n      element.setAttribute('tabindex', '0')\r\n    }\r\n\r\n    // ロールの設定（必要に応じて）\r\n    if (!element.hasAttribute('role')) {\r\n      const tagName = element.tagName.toLowerCase()\r\n      if (tagName === 'div' || tagName === 'span') {\r\n        element.setAttribute('role', 'button')\r\n      }\r\n    }\r\n\r\n    // ARIA-LABELが未設定の場合の対応\r\n    if (!element.hasAttribute('aria-label') && !element.hasAttribute('aria-labelledby')) {\r\n      const textContent = element.textContent?.trim()\r\n      if (textContent) {\r\n        element.setAttribute('aria-label', textContent)\r\n      }\r\n    }\r\n  }\r\n\r\n  private createShortcutKey(key: string, modifiers: string[]): string {\r\n    const sortedModifiers = modifiers.sort()\r\n    return `${sortedModifiers.join('+')}+${key.toLowerCase()}`\r\n  }\r\n\r\n  private getActiveModifiers(event: KeyboardEvent): string[] {\r\n    const modifiers: string[] = []\r\n    if (event.ctrlKey) modifiers.push('ctrl')\r\n    if (event.altKey) modifiers.push('alt')\r\n    if (event.shiftKey) modifiers.push('shift')\r\n    if (event.metaKey) modifiers.push('meta')\r\n    return modifiers\r\n  }\r\n\r\n  private createSkipLink(text: string, href: string): HTMLElement {\r\n    const link = document.createElement('a')\r\n    link.href = href\r\n    link.textContent = text\r\n    link.className = 'skip-link'\r\n    \r\n    link.addEventListener('click', (e) => {\r\n      e.preventDefault()\r\n      const target = document.querySelector(href)\r\n      if (target) {\r\n        (target as HTMLElement).focus()\r\n      }\r\n    })\r\n    \r\n    return link\r\n  }\r\n\r\n  private createHelpPanel(): HTMLElement {\r\n    const panel = document.createElement('div')\r\n    panel.className = 'keyboard-help-panel'\r\n    panel.setAttribute('role', 'dialog')\r\n    panel.setAttribute('aria-labelledby', 'help-title')\r\n    panel.setAttribute('aria-modal', 'true')\r\n    \r\n    const shortcuts = Array.from(this.shortcuts.values())\r\n    \r\n    // セキュリティ対策: innerHTML の代わりに DOM 操作を使用\r\n    const helpContent = document.createElement('div')\r\n    helpContent.className = 'help-content'\r\n    \r\n    const title = document.createElement('h2')\r\n    title.id = 'help-title'\r\n    title.textContent = 'キーボードショートカット'\r\n    \r\n    const shortcutsList = document.createElement('div')\r\n    shortcutsList.className = 'shortcuts-list'\r\n    \r\n    // 基本ナビゲーション\r\n    const basicGroup = document.createElement('div')\r\n    basicGroup.className = 'shortcut-group'\r\n    \r\n    const basicTitle = document.createElement('h3')\r\n    basicTitle.textContent = '基本ナビゲーション'\r\n    \r\n    const basicDl = document.createElement('dl')\r\n    const basicShortcuts = [\r\n      { key: 'Tab / Shift+Tab', desc: '次/前の要素に移動' },\r\n      { key: '矢印キー', desc: '方向に応じて移動' },\r\n      { key: 'Enter / Space', desc: '要素を選択/実行' },\r\n      { key: 'Home / End', desc: '最初/最後の要素に移動' }\r\n    ]\r\n    \r\n    basicShortcuts.forEach(({ key, desc }) => {\r\n      const dt = document.createElement('dt')\r\n      dt.textContent = key\r\n      const dd = document.createElement('dd')\r\n      dd.textContent = desc\r\n      basicDl.appendChild(dt)\r\n      basicDl.appendChild(dd)\r\n    })\r\n    \r\n    basicGroup.appendChild(basicTitle)\r\n    basicGroup.appendChild(basicDl)\r\n    shortcutsList.appendChild(basicGroup)\r\n    \r\n    // ゲーム操作（動的生成）\r\n    if (shortcuts.length > 0) {\r\n      const gameGroup = document.createElement('div')\r\n      gameGroup.className = 'shortcut-group'\r\n      \r\n      const gameTitle = document.createElement('h3')\r\n      gameTitle.textContent = 'ゲーム操作'\r\n      \r\n      const gameDl = document.createElement('dl')\r\n      shortcuts.forEach(shortcut => {\r\n        const dt = document.createElement('dt')\r\n        dt.textContent = sanitizeInput(this.formatShortcut(shortcut))\r\n        const dd = document.createElement('dd')\r\n        dd.textContent = sanitizeInput(shortcut.description)\r\n        gameDl.appendChild(dt)\r\n        gameDl.appendChild(dd)\r\n      })\r\n      \r\n      gameGroup.appendChild(gameTitle)\r\n      gameGroup.appendChild(gameDl)\r\n      shortcutsList.appendChild(gameGroup)\r\n    }\r\n    \r\n    const closeButton = document.createElement('button')\r\n    closeButton.type = 'button'\r\n    closeButton.textContent = '閉じる (Esc)'\r\n    closeButton.onclick = () => panel.remove()\r\n    \r\n    helpContent.appendChild(title)\r\n    helpContent.appendChild(shortcutsList)\r\n    helpContent.appendChild(closeButton)\r\n    \r\n    panel.appendChild(helpContent)\r\n    \r\n    return panel\r\n  }\r\n\r\n  private formatShortcut(shortcut: KeyboardShortcut): string {\r\n    const modifiers = shortcut.modifiers || []\r\n    const parts = [...modifiers.map(m => m.charAt(0).toUpperCase() + m.slice(1)), shortcut.key]\r\n    return parts.join(' + ')\r\n  }\r\n\r\n  private setupFocusVisible(): void {\r\n    // CSS変数でキーボードナビゲーション状態を管理\r\n    const style = document.createElement('style')\r\n    style.textContent = `\r\n      .keyboard-navigation *:focus {\r\n        outline: 2px solid #818CF8;\r\n        outline-offset: 2px;\r\n        border-radius: 4px;\r\n      }\r\n      \r\n      .skip-links {\r\n        position: absolute;\r\n        top: -40px;\r\n        left: 6px;\r\n        z-index: 1000;\r\n      }\r\n      \r\n      .skip-link {\r\n        position: absolute;\r\n        left: -10000px;\r\n        top: auto;\r\n        width: 1px;\r\n        height: 1px;\r\n        overflow: hidden;\r\n        background: #000;\r\n        color: #fff;\r\n        padding: 8px 16px;\r\n        text-decoration: none;\r\n        border-radius: 4px;\r\n      }\r\n      \r\n      .skip-link:focus {\r\n        position: static;\r\n        width: auto;\r\n        height: auto;\r\n        left: auto;\r\n        top: auto;\r\n      }\r\n      \r\n      .keyboard-help-panel {\r\n        position: fixed;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        background: rgba(0, 0, 0, 0.95);\r\n        color: white;\r\n        padding: 2rem;\r\n        border-radius: 12px;\r\n        max-width: 500px;\r\n        max-height: 80vh;\r\n        overflow-y: auto;\r\n        z-index: 10000;\r\n      }\r\n      \r\n      .help-content h2 {\r\n        margin-top: 0;\r\n        color: #818CF8;\r\n      }\r\n      \r\n      .shortcuts-list dt {\r\n        font-weight: bold;\r\n        color: #FFD43B;\r\n        margin-top: 0.5rem;\r\n      }\r\n      \r\n      .shortcuts-list dd {\r\n        margin-left: 1rem;\r\n        margin-bottom: 0.5rem;\r\n      }\r\n      \r\n      .help-content button {\r\n        margin-top: 1rem;\r\n        padding: 0.5rem 1rem;\r\n        background: #818CF8;\r\n        color: white;\r\n        border: none;\r\n        border-radius: 4px;\r\n        cursor: pointer;\r\n      }\r\n    `\r\n    document.head.appendChild(style)\r\n  }\r\n\r\n  /**\r\n   * クリーンアップ\r\n   */\r\n  destroy(): void {\r\n    this.focusableElements = []\r\n    this.shortcuts.clear()\r\n    document.removeEventListener('keydown', this.handleKeyDown.bind(this))\r\n    document.removeEventListener('focusin', this.handleFocusIn.bind(this))\r\n    document.removeEventListener('focusout', this.handleFocusOut.bind(this))\r\n  }\r\n}","<template>\r\n  <header class=\"app-header\">\r\n    <div class=\"hero-section\">\r\n      <div class=\"hero-background\">\r\n        <div class=\"hero-orb hero-orb-1\"></div>\r\n        <div class=\"hero-orb hero-orb-2\"></div>\r\n        <div class=\"hero-orb hero-orb-3\"></div>\r\n      </div>\r\n      <div class=\"hero-content\">\r\n        <div class=\"brand-logo pulse\">\r\n          <div class=\"logo-glow\"></div>\r\n          <span class=\"logo-icon\">🛡️</span>\r\n        </div>\r\n        <h1 class=\"hero-title bounce-in\" style=\"animation-delay: 0.2s;\">\r\n          人生充実ゲーム\r\n        </h1>\r\n        <p class=\"hero-subtitle bounce-in\" style=\"animation-delay: 0.4s;\">\r\n          Life Fulfillment - 生命保険を「人生の味方」として描く\r\n        </p>\r\n        <div class=\"hero-accent bounce-in\" style=\"animation-delay: 0.6s;\">\r\n          <span class=\"accent-icon\">✨</span>\r\n          <span class=\"accent-text\">一人の時間を、最高の冒険に</span>\r\n          <span class=\"accent-icon\">✨</span>\r\n        </div>\r\n        <div class=\"hero-stats bounce-in\" style=\"animation-delay: 0.8s;\">\r\n          <div class=\"stat-item\">\r\n            <span class=\"stat-value\">100+</span>\r\n            <span class=\"stat-label\">イベントカード</span>\r\n          </div>\r\n          <div class=\"stat-divider\"></div>\r\n          <div class=\"stat-item\">\r\n            <span class=\"stat-value\">7</span>\r\n            <span class=\"stat-label\">人生ステージ</span>\r\n          </div>\r\n          <div class=\"stat-divider\"></div>\r\n          <div class=\"stat-item\">\r\n            <span class=\"stat-value\">∞</span>\r\n            <span class=\"stat-label\">プレイパターン</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </header>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n// ヘッダーは純粋なプレゼンテーション層\r\n// プロップスやイベントは不要\r\n</script>\r\n\r\n<style scoped>\r\n/* ===========================================\r\n   ヘッダー専用スタイル\r\n   ========================================= */\r\n\r\n.app-header {\r\n  text-align: center;\r\n  padding: var(--space-2xl) 0;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.hero-section {\r\n  width: 100%;\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n  position: relative;\r\n}\r\n\r\n/* 背景装飾 */\r\n.hero-background {\r\n  position: absolute;\r\n  inset: -50%;\r\n  pointer-events: none;\r\n  opacity: 0.15;\r\n}\r\n\r\n.hero-orb {\r\n  position: absolute;\r\n  border-radius: 50%;\r\n  filter: blur(60px);\r\n  animation: float 20s infinite ease-in-out;\r\n}\r\n\r\n.hero-orb-1 {\r\n  width: 400px;\r\n  height: 400px;\r\n  background: var(--brand-gradient-primary);\r\n  top: -20%;\r\n  left: -10%;\r\n  animation-delay: 0s;\r\n}\r\n\r\n.hero-orb-2 {\r\n  width: 300px;\r\n  height: 300px;\r\n  background: var(--brand-gradient-soft);\r\n  bottom: -20%;\r\n  right: -10%;\r\n  animation-delay: 7s;\r\n}\r\n\r\n.hero-orb-3 {\r\n  width: 250px;\r\n  height: 250px;\r\n  background: var(--vitality-high);\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  animation-delay: 14s;\r\n}\r\n\r\n@keyframes float {\r\n  0%, 100% {\r\n    transform: translate(0, 0) scale(1);\r\n  }\r\n  33% {\r\n    transform: translate(30px, -30px) scale(1.1);\r\n  }\r\n  66% {\r\n    transform: translate(-20px, 20px) scale(0.9);\r\n  }\r\n}\r\n\r\n.hero-content {\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.brand-logo {\r\n  display: inline-block;\r\n  margin-bottom: var(--space-lg);\r\n  position: relative;\r\n}\r\n\r\n.logo-icon {\r\n  font-size: 4rem;\r\n  line-height: 1;\r\n  display: block;\r\n  filter: drop-shadow(0 4px 20px rgba(129, 140, 248, 0.4));\r\n  position: relative;\r\n  z-index: 2;\r\n}\r\n\r\n.logo-glow {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 100px;\r\n  height: 100px;\r\n  background: radial-gradient(circle, rgba(129, 140, 248, 0.4) 0%, transparent 70%);\r\n  filter: blur(20px);\r\n  animation: glow-pulse 3s ease-in-out infinite;\r\n}\r\n\r\n@keyframes glow-pulse {\r\n  0%, 100% {\r\n    transform: translate(-50%, -50%) scale(1);\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    transform: translate(-50%, -50%) scale(1.3);\r\n    opacity: 0.6;\r\n  }\r\n}\r\n\r\n.hero-title {\r\n  font-size: clamp(2.5rem, 6vw, 4.5rem);\r\n  font-weight: 800;\r\n  margin-bottom: var(--space-md);\r\n  \r\n  background: var(--brand-gradient-hero);\r\n  background-clip: text;\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-size: 200% 200%;\r\n  animation: gradient-shift 8s ease-in-out infinite;\r\n  \r\n  filter: drop-shadow(0 4px 20px rgba(102, 126, 234, 0.3));\r\n  line-height: 1.1;\r\n  letter-spacing: -0.02em;\r\n}\r\n\r\n@keyframes gradient-shift {\r\n  0%, 100% {\r\n    background-position: 0% 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n}\r\n\r\n.hero-subtitle {\r\n  font-size: clamp(1rem, 3vw, 1.375rem);\r\n  color: rgba(209, 213, 219, 0.9);\r\n  margin-bottom: var(--space-xl);\r\n  max-width: 600px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  line-height: 1.6;\r\n  font-weight: var(--font-weight-medium);\r\n  letter-spacing: 0.01em;\r\n}\r\n\r\n.hero-accent {\r\n  font-size: clamp(0.9rem, 2.5vw, 1.15rem);\r\n  color: rgba(129, 140, 248, 0.9);\r\n  font-weight: 600;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: var(--space-sm);\r\n  padding: var(--space-sm) var(--space-lg);\r\n  background: rgba(129, 140, 248, 0.1);\r\n  border: 1px solid rgba(129, 140, 248, 0.2);\r\n  border-radius: 9999px;\r\n  backdrop-filter: blur(10px);\r\n  margin-bottom: var(--space-xl);\r\n}\r\n\r\n.accent-icon {\r\n  font-size: 1.2em;\r\n  filter: brightness(1.2);\r\n}\r\n\r\n.accent-text {\r\n  letter-spacing: 0.02em;\r\n}\r\n\r\n/* 統計情報 */\r\n.hero-stats {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: var(--space-xl);\r\n  margin-top: var(--space-2xl);\r\n}\r\n\r\n.stat-item {\r\n  text-align: center;\r\n}\r\n\r\n.stat-value {\r\n  display: block;\r\n  font-size: clamp(1.75rem, 4vw, 2.5rem);\r\n  font-weight: var(--font-weight-bold);\r\n  background: var(--brand-gradient-soft);\r\n  background-clip: text;\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  margin-bottom: var(--space-xs);\r\n}\r\n\r\n.stat-label {\r\n  display: block;\r\n  font-size: clamp(0.75rem, 2vw, 0.875rem);\r\n  color: rgba(156, 163, 175, 0.8);\r\n  font-weight: var(--font-weight-medium);\r\n  letter-spacing: 0.05em;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.stat-divider {\r\n  width: 1px;\r\n  height: 40px;\r\n  background: linear-gradient(to bottom, transparent, rgba(129, 140, 248, 0.3), transparent);\r\n}\r\n\r\n/* アニメーション */\r\n@keyframes pulse {\r\n  0%, 100% { transform: scale(1); }\r\n  50% { transform: scale(1.05); }\r\n}\r\n\r\n@keyframes bounce-in {\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateY(30px);\r\n  }\r\n  60% {\r\n    opacity: 1;\r\n    transform: translateY(-10px);\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.pulse {\r\n  animation: pulse 2s ease-in-out infinite;\r\n}\r\n\r\n.bounce-in {\r\n  animation: bounce-in 0.8s ease-out forwards;\r\n  opacity: 0;\r\n}\r\n\r\n/* モーション削減対応 */\r\n@media (prefers-reduced-motion: reduce) {\r\n  .pulse,\r\n  .bounce-in {\r\n    animation: none;\r\n    opacity: 1;\r\n    transform: none;\r\n  }\r\n}\r\n\r\n/* レスポンシブ対応 */\r\n@media (max-width: 640px) {\r\n  .app-header {\r\n    padding: var(--space-xl) 0;\r\n  }\r\n  \r\n  .logo-icon {\r\n    font-size: 3rem;\r\n  }\r\n  \r\n  .logo-glow {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n  \r\n  .hero-stats {\r\n    gap: var(--space-lg);\r\n    margin-top: var(--space-xl);\r\n  }\r\n  \r\n  .stat-divider {\r\n    height: 30px;\r\n  }\r\n  \r\n  .hero-orb {\r\n    filter: blur(40px);\r\n  }\r\n  \r\n  .hero-orb-1 {\r\n    width: 250px;\r\n    height: 250px;\r\n  }\r\n  \r\n  .hero-orb-2 {\r\n    width: 200px;\r\n    height: 200px;\r\n  }\r\n  \r\n  .hero-orb-3 {\r\n    width: 150px;\r\n    height: 150px;\r\n  }\r\n}\r\n\r\n@media (max-width: 375px) {\r\n  .hero-title {\r\n    font-size: 2rem;\r\n    line-height: 1.2;\r\n  }\r\n  \r\n  .hero-subtitle {\r\n    font-size: var(--text-base);\r\n    line-height: 1.5;\r\n  }\r\n}\r\n</style>","<template>\r\n  <section class=\"action-section\" id=\"navigation\" role=\"navigation\" aria-label=\"メインナビゲーション\">\r\n    <div class=\"button-group\">\r\n      <button\r\n        ref=\"gameButtonRef\"\r\n        @click=\"$emit('start-game')\"\r\n        class=\"btn btn-primary ripple-container glow-on-hover bounce-in\"\r\n        aria-label=\"ゲームを開始する (Alt+G)\"\r\n        :aria-keyshortcuts=\"'Alt+G'\"\r\n        aria-describedby=\"game-description\"\r\n      >\r\n        <span class=\"btn-bg-effect\"></span>\r\n        <span class=\"btn-icon\" aria-hidden=\"true\">🎮</span>\r\n        <span class=\"btn-text\">ゲームをプレイ</span>\r\n        <span class=\"btn-arrow\" aria-hidden=\"true\">→</span>\r\n      </button>\r\n      \r\n      <button\r\n        ref=\"tutorialButtonRef\"\r\n        @click=\"$emit('start-tutorial')\"\r\n        class=\"btn btn-secondary ripple-container\"\r\n        aria-label=\"チュートリアルを開始する (Alt+T)\"\r\n        :aria-keyshortcuts=\"'Alt+T'\"\r\n        aria-describedby=\"tutorial-description\"\r\n      >\r\n        <span class=\"btn-bg-effect\"></span>\r\n        <span class=\"btn-icon\" aria-hidden=\"true\">📚</span>\r\n        <span class=\"btn-text\">チュートリアル</span>\r\n      </button>\r\n      \r\n      <button\r\n        @click=\"$emit('open-statistics')\"\r\n        class=\"btn btn-secondary ripple-container\"\r\n        aria-label=\"統計ダッシュボードを開く (Alt+S)\"\r\n        :aria-keyshortcuts=\"'Alt+S'\"\r\n        aria-describedby=\"statistics-description\"\r\n      >\r\n        <span class=\"btn-bg-effect\"></span>\r\n        <span class=\"btn-icon\" aria-hidden=\"true\">📊</span>\r\n        <span class=\"btn-text\">統計</span>\r\n      </button>\r\n    </div>\r\n    \r\n    <!-- ボタンの説明（スクリーンリーダー用） -->\r\n    <div class=\"sr-only\">\r\n      <div id=\"game-description\">保険をテーマにした人生シミュレーションゲームを開始します</div>\r\n      <div id=\"tutorial-description\">ゲームの遊び方を学習するチュートリアルを開始します</div>\r\n      <div id=\"statistics-description\">プレイ統計とパフォーマンス分析を表示します</div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref } from 'vue'\r\n\r\n// イベント定義\r\ndefineEmits<{\r\n  'start-game': []\r\n  'start-tutorial': []\r\n  'open-statistics': []\r\n}>()\r\n\r\n// テンプレート参照\r\nconst gameButtonRef = ref<HTMLButtonElement>()\r\nconst tutorialButtonRef = ref<HTMLButtonElement>()\r\n\r\n// 外部から参照可能にする（親コンポーネント用）\r\ndefineExpose({\r\n  gameButtonRef,\r\n  tutorialButtonRef\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n/* ===========================================\r\n   ナビゲーションアクション専用スタイル\r\n   ========================================= */\r\n\r\n.action-section {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: var(--space-2xl);\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  gap: var(--space-lg);\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n}\r\n\r\n/* ボタンの基本スタイル */\r\n.btn {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: var(--space-sm);\r\n  \r\n  min-width: 200px;\r\n  min-height: var(--touch-target-comfortable);\r\n  padding: var(--space-md) var(--space-xl);\r\n  \r\n  border: none;\r\n  border-radius: 16px;\r\n  \r\n  font-family: Inter, system-ui, sans-serif;\r\n  font-size: var(--text-lg);\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n  \r\n  transition: all var(--transition-normal);\r\n  cursor: pointer;\r\n  \r\n  box-shadow: var(--shadow-card);\r\n  backdrop-filter: blur(8px);\r\n  position: relative;\r\n  overflow: hidden;\r\n  isolation: isolate;\r\n}\r\n\r\n/* 背景エフェクト */\r\n.btn-bg-effect {\r\n  position: absolute;\r\n  inset: 0;\r\n  background: radial-gradient(circle at var(--mouse-x, 50%) var(--mouse-y, 50%), rgba(255, 255, 255, 0.1) 0%, transparent 70%);\r\n  opacity: 0;\r\n  transition: opacity var(--transition-normal);\r\n  z-index: -1;\r\n}\r\n\r\n.btn:hover .btn-bg-effect {\r\n  opacity: 1;\r\n}\r\n\r\n/* プライマリボタン */\r\n.btn-primary {\r\n  background: var(--brand-gradient-primary);\r\n  color: white;\r\n  position: relative;\r\n}\r\n\r\n.btn-primary::before {\r\n  content: '';\r\n  position: absolute;\r\n  inset: -2px;\r\n  background: var(--brand-gradient-hero);\r\n  border-radius: inherit;\r\n  opacity: 0;\r\n  z-index: -1;\r\n  transition: opacity var(--transition-normal);\r\n  filter: blur(10px);\r\n}\r\n\r\n.btn-primary:hover {\r\n  transform: translateY(-4px) scale(1.02);\r\n  box-shadow: \r\n    0 10px 20px rgba(0, 0, 0, 0.2),\r\n    0 15px 40px rgba(129, 140, 248, 0.4),\r\n    inset 0 1px 0 rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.btn-primary:hover::before {\r\n  opacity: 0.5;\r\n}\r\n\r\n.btn-primary .btn-arrow {\r\n  margin-left: auto;\r\n  font-size: 1.2em;\r\n  transition: transform var(--transition-normal);\r\n}\r\n\r\n.btn-primary:hover .btn-arrow {\r\n  transform: translateX(4px);\r\n}\r\n\r\n/* セカンダリボタン */\r\n.btn-secondary {\r\n  background: rgba(255, 255, 255, 0.05);\r\n  color: rgba(255, 255, 255, 0.9);\r\n  border: 1.5px solid rgba(129, 140, 248, 0.3);\r\n  position: relative;\r\n}\r\n\r\n.btn-secondary::after {\r\n  content: '';\r\n  position: absolute;\r\n  inset: 0;\r\n  background: linear-gradient(135deg, transparent 0%, rgba(129, 140, 248, 0.1) 100%);\r\n  opacity: 0;\r\n  transition: opacity var(--transition-normal);\r\n  border-radius: inherit;\r\n}\r\n\r\n.btn-secondary:hover {\r\n  background: rgba(129, 140, 248, 0.15);\r\n  border-color: rgba(129, 140, 248, 0.6);\r\n  transform: translateY(-2px) scale(1.01);\r\n  box-shadow: \r\n    0 8px 16px rgba(0, 0, 0, 0.1),\r\n    0 8px 25px rgba(129, 140, 248, 0.2),\r\n    inset 0 1px 0 rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.btn-secondary:hover::after {\r\n  opacity: 1;\r\n}\r\n\r\n/* アクティブ状態 */\r\n.btn:active {\r\n  transform: translateY(0);\r\n}\r\n\r\n/* ボタンアイコン */\r\n.btn-icon {\r\n  font-size: var(--text-xl);\r\n  line-height: 1;\r\n  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));\r\n  transition: transform var(--transition-normal);\r\n}\r\n\r\n.btn:hover .btn-icon {\r\n  transform: scale(1.1) rotate(-5deg);\r\n}\r\n\r\n.btn-text {\r\n  font-weight: 600;\r\n  letter-spacing: 0.02em;\r\n}\r\n\r\n/* リップルエフェクト */\r\n.ripple-container {\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.ripple-container::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 0;\r\n  height: 0;\r\n  border-radius: 50%;\r\n  background: rgba(255, 255, 255, 0.3);\r\n  transform: translate(-50%, -50%);\r\n  transition: width 0.6s, height 0.6s;\r\n}\r\n\r\n.ripple-container:active::after {\r\n  width: 300px;\r\n  height: 300px;\r\n}\r\n\r\n/* グローエフェクト */\r\n.glow-on-hover {\r\n  position: relative;\r\n}\r\n\r\n.glow-on-hover::after {\r\n  content: '';\r\n  position: absolute;\r\n  inset: 0;\r\n  border-radius: inherit;\r\n  padding: 2px;\r\n  background: linear-gradient(135deg, var(--primary-400), var(--secondary-400));\r\n  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);\r\n  -webkit-mask-composite: xor;\r\n  mask-composite: exclude;\r\n  opacity: 0;\r\n  transition: opacity var(--transition-normal);\r\n}\r\n\r\n.glow-on-hover:hover::after {\r\n  opacity: 1;\r\n}\r\n\r\n/* アニメーション */\r\n.bounce-in {\r\n  animation: bounce-in 0.8s ease-out forwards;\r\n  opacity: 0;\r\n}\r\n\r\n@keyframes bounce-in {\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateY(30px) scale(0.9);\r\n  }\r\n  60% {\r\n    opacity: 1;\r\n    transform: translateY(-5px) scale(1.02);\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    transform: translateY(0) scale(1);\r\n  }\r\n}\r\n\r\n/* ホバー時のパルスアニメーション */\r\n@keyframes pulse-subtle {\r\n  0%, 100% {\r\n    transform: scale(1);\r\n  }\r\n  50% {\r\n    transform: scale(1.05);\r\n  }\r\n}\r\n\r\n.btn-primary:hover .btn-icon {\r\n  animation: pulse-subtle 2s infinite;\r\n}\r\n\r\n/* フォーカス表示 */\r\n.btn:focus {\r\n  outline: 2px solid rgba(129, 140, 248, 0.8);\r\n  outline-offset: 2px;\r\n}\r\n\r\n/* モバイル対応 */\r\n@media (max-width: 640px) {\r\n  .button-group {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n    gap: var(--space-md);\r\n  }\r\n  \r\n  .btn {\r\n    width: 100%;\r\n    max-width: 280px;\r\n    justify-content: center;\r\n  }\r\n}\r\n\r\n@media (max-width: 375px) {\r\n  .btn {\r\n    min-width: 160px;\r\n    padding: var(--space-sm) var(--space-lg);\r\n    font-size: var(--text-base);\r\n  }\r\n}\r\n\r\n/* ハイコントラストモード対応 */\r\n@media (prefers-contrast: high) {\r\n  .btn-primary,\r\n  .btn-secondary {\r\n    border: 2px solid white;\r\n  }\r\n}\r\n\r\n/* モーション削減設定 */\r\n@media (prefers-reduced-motion: reduce) {\r\n  .btn,\r\n  .bounce-in {\r\n    transition: none;\r\n    animation: none;\r\n    opacity: 1;\r\n    transform: none;\r\n  }\r\n  \r\n  .btn:hover {\r\n    transform: none;\r\n  }\r\n  \r\n  .ripple-container::after {\r\n    display: none;\r\n  }\r\n}\r\n\r\n/* スクリーンリーダー専用 */\r\n.sr-only {\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  border: 0;\r\n}\r\n</style>","<template>\r\n  <section class=\"info-section\">\r\n    <div class=\"info-grid\">\r\n      <!-- 最新の変更 -->\r\n      <div class=\"interactive-card glow-on-hover card-latest\">\r\n        <div class=\"card-badge\">NEW</div>\r\n        <div class=\"card-header\">\r\n          <div class=\"card-icon-wrapper\">\r\n            <span class=\"card-icon\">🚀</span>\r\n          </div>\r\n          <h2 class=\"card-title\">\r\n            本番リリース v0.3.0\r\n          </h2>\r\n        </div>\r\n        <div class=\"text-left space-y-3\">\r\n          <div>\r\n            <h3 class=\"font-semibold text-lg mb-2\">Production Release - 本番環境対応完了</h3>\r\n            <ul class=\"space-y-1 text-sm\">\r\n              <li class=\"flex items-start gap-2\">\r\n                <span class=\"text-success mt-1\">🎯</span>\r\n                <span><strong>リリース品質100%</strong>: ビルド・テスト・型チェック全て完了</span>\r\n              </li>\r\n              <li class=\"flex items-start gap-2\">\r\n                <span class=\"text-success mt-1\">♿</span>\r\n                <span><strong>アクセシビリティ完全対応</strong>: WCAG 2.1 AA 100%準拠</span>\r\n              </li>\r\n              <li class=\"flex items-start gap-2\">\r\n                <span class=\"text-success mt-1\">📱</span>\r\n                <span><strong>モバイル最適化完了</strong>: タッチ操作・レスポンシブデザイン対応</span>\r\n              </li>\r\n              <li class=\"flex items-start gap-2\">\r\n                <span class=\"text-success mt-1\">⚡</span>\r\n                <span><strong>パフォーマンス最適化</strong>: バンドルサイズ55.8%削減達成</span>\r\n              </li>\r\n              <li class=\"flex items-start gap-2\">\r\n                <span class=\"text-success mt-1\">✅</span>\r\n                <span><strong>セキュリティ監査</strong>: 自動脆弱性検出、コード品質分析</span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 今後のロードマップ -->\r\n      <div class=\"interactive-card glow-on-hover card-roadmap\">\r\n        <div class=\"card-badge badge-secondary\">ROADMAP</div>\r\n        <div class=\"card-header\">\r\n          <div class=\"card-icon-wrapper icon-wrapper-secondary\">\r\n            <span class=\"card-icon\">🗺️</span>\r\n          </div>\r\n          <h2 class=\"card-title\">\r\n            今後のロードマップ\r\n          </h2>\r\n        </div>\r\n        <div class=\"text-left space-y-3\">\r\n          <div>\r\n            <h3 class=\"font-semibold mb-2\">短期（1-2週間）</h3>\r\n            <ul class=\"space-y-1 text-sm\">\r\n              <li class=\"flex items-center gap-2\">\r\n                <span class=\"text-success\">✅</span>\r\n                保険更新システム\r\n              </li>\r\n              <li class=\"flex items-center gap-2\">\r\n                <span class=\"text-success\">✅</span>\r\n                チュートリアルモード\r\n              </li>\r\n              <li class=\"flex items-center gap-2\">\r\n                <span class=\"text-success\">✅</span>\r\n                サウンドエフェクト\r\n              </li>\r\n              <li class=\"flex items-center gap-2\">\r\n                <span class=\"text-gray-400\">⭕</span>\r\n                ゲームバランス微調整\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <h3 class=\"font-semibold mb-2\">中期（1ヶ月）</h3>\r\n            <ul class=\"space-y-1 text-sm\">\r\n              <li class=\"flex items-center gap-2\">\r\n                <span class=\"text-gray-400\">⭕</span>\r\n                実績システム\r\n              </li>\r\n              <li class=\"flex items-center gap-2\">\r\n                <span class=\"text-gray-400\">⭕</span>\r\n                追加シナリオ（結婚、出産など）\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div class=\"mt-4 text-sm text-gray-600 dark:text-gray-400\">\r\n          <a href=\"https://github.com/shishihs/insurance_self_game/blob/master/CHANGELOG.md\" \r\n             target=\"_blank\" \r\n             class=\"hover:text-primary transition-colors\">\r\n            詳細な変更履歴とロードマップ →\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- フッター情報 -->\r\n    <div class=\"text-center mt-8 text-sm text-gray-600 dark:text-gray-400\">\r\n      <p>\r\n        <a href=\"https://github.com/shishihs/insurance_self_game\" \r\n           target=\"_blank\" \r\n           class=\"hover:text-primary transition-colors\">\r\n          GitHub\r\n        </a>\r\n        <span class=\"mx-2\">•</span>\r\n        <a href=\"https://github.com/shishihs/insurance_self_game/issues\" \r\n           target=\"_blank\" \r\n           class=\"hover:text-primary transition-colors\">\r\n          バグ報告・要望\r\n        </a>\r\n      </p>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n// 機能紹介コンポーネント - 純粋なプレゼンテーション層\r\n</script>\r\n\r\n<style scoped>\r\n/* ===========================================\r\n   機能紹介セクション専用スタイル\r\n   ========================================= */\r\n\r\n.info-section {\r\n  margin-bottom: var(--space-2xl);\r\n}\r\n\r\n.info-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\r\n  gap: var(--space-xl);\r\n}\r\n\r\n/* 情報カード */\r\n.interactive-card {\r\n  background: rgba(255, 255, 255, 0.03);\r\n  border: 1px solid rgba(129, 140, 248, 0.15);\r\n  border-radius: 20px;\r\n  padding: var(--space-xl);\r\n  \r\n  backdrop-filter: blur(20px);\r\n  box-shadow: \r\n    0 4px 6px -1px rgba(0, 0, 0, 0.1),\r\n    0 2px 4px -1px rgba(0, 0, 0, 0.06),\r\n    inset 0 1px 0 rgba(255, 255, 255, 0.05);\r\n  \r\n  transition: all var(--transition-normal);\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.interactive-card::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 200px;\r\n  background: radial-gradient(ellipse at top, rgba(129, 140, 248, 0.1) 0%, transparent 70%);\r\n  pointer-events: none;\r\n}\r\n\r\n.interactive-card:hover {\r\n  border-color: rgba(129, 140, 248, 0.3);\r\n  transform: translateY(-6px) scale(1.02);\r\n  box-shadow: \r\n    0 20px 25px -5px rgba(0, 0, 0, 0.1),\r\n    0 10px 10px -5px rgba(0, 0, 0, 0.04),\r\n    0 0 40px rgba(129, 140, 248, 0.2),\r\n    inset 0 1px 0 rgba(255, 255, 255, 0.1);\r\n  background: rgba(255, 255, 255, 0.05);\r\n}\r\n\r\n/* カードバッジ */\r\n.card-badge {\r\n  position: absolute;\r\n  top: var(--space-md);\r\n  right: var(--space-md);\r\n  padding: var(--space-xs) var(--space-sm);\r\n  background: var(--brand-gradient-primary);\r\n  color: white;\r\n  font-size: var(--text-xs);\r\n  font-weight: var(--font-weight-bold);\r\n  letter-spacing: 0.05em;\r\n  border-radius: 999px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n  z-index: 1;\r\n}\r\n\r\n.badge-secondary {\r\n  background: var(--brand-gradient-soft);\r\n}\r\n\r\n/* カードヘッダー */\r\n.card-header {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: var(--space-md);\r\n  margin-bottom: var(--space-lg);\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.card-icon-wrapper {\r\n  width: 56px;\r\n  height: 56px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: var(--brand-gradient-primary);\r\n  border-radius: 16px;\r\n  box-shadow: \r\n    0 4px 6px -1px rgba(0, 0, 0, 0.1),\r\n    0 2px 4px -1px rgba(0, 0, 0, 0.06),\r\n    inset 0 1px 0 rgba(255, 255, 255, 0.2);\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.card-icon-wrapper::after {\r\n  content: '';\r\n  position: absolute;\r\n  inset: 0;\r\n  background: radial-gradient(circle at 30% 30%, rgba(255, 255, 255, 0.2) 0%, transparent 60%);\r\n}\r\n\r\n.icon-wrapper-secondary {\r\n  background: var(--brand-gradient-soft);\r\n}\r\n\r\n.card-icon {\r\n  font-size: 1.75rem;\r\n  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.card-title {\r\n  font-size: var(--text-2xl);\r\n  font-weight: var(--font-weight-bold);\r\n  background: var(--brand-gradient-hero);\r\n  background-clip: text;\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  margin: 0;\r\n}\r\n\r\n/* グローエフェクト */\r\n.glow-on-hover {\r\n  position: relative;\r\n}\r\n\r\n.glow-on-hover::after {\r\n  content: '';\r\n  position: absolute;\r\n  inset: -1px;\r\n  background: linear-gradient(135deg, var(--primary-400), var(--secondary-400), var(--primary-400));\r\n  border-radius: inherit;\r\n  opacity: 0;\r\n  z-index: -1;\r\n  transition: opacity var(--transition-normal);\r\n  filter: blur(15px);\r\n}\r\n\r\n.glow-on-hover:hover::after {\r\n  opacity: 0.3;\r\n}\r\n\r\n/* テキスト色 */\r\n.text-primary {\r\n  color: rgba(129, 140, 248, 1);\r\n}\r\n\r\n.text-success {\r\n  color: rgb(34, 197, 94);\r\n  filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.1));\r\n}\r\n\r\n.text-gray-400 {\r\n  color: rgb(156, 163, 175);\r\n}\r\n\r\n/* リストスタイルの改善 */\r\n.interactive-card ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.interactive-card li {\r\n  transition: transform var(--transition-fast);\r\n}\r\n\r\n.interactive-card li:hover {\r\n  transform: translateX(4px);\r\n}\r\n\r\n/* リンクホバーエフェクト */\r\n.interactive-card a {\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n\r\n.interactive-card a::after {\r\n  content: '';\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 2px;\r\n  bottom: -2px;\r\n  left: 0;\r\n  background: var(--brand-gradient-primary);\r\n  transform: scaleX(0);\r\n  transform-origin: right;\r\n  transition: transform var(--transition-normal);\r\n}\r\n\r\n.interactive-card a:hover::after {\r\n  transform: scaleX(1);\r\n  transform-origin: left;\r\n}\r\n\r\n/* 外部リンク */\r\na {\r\n  color: rgba(129, 140, 248, 1);\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n  transition: color var(--transition-fast);\r\n}\r\n\r\na:hover {\r\n  color: rgba(99, 102, 241, 1);\r\n  text-decoration: underline;\r\n}\r\n\r\n/* レスポンシブ対応 */\r\n@media (max-width: 1024px) {\r\n  .info-grid {\r\n    grid-template-columns: 1fr;\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n  }\r\n}\r\n\r\n@media (max-width: 640px) {\r\n  .info-grid {\r\n    gap: var(--space-lg);\r\n  }\r\n  \r\n  .interactive-card {\r\n    padding: var(--space-lg);\r\n  }\r\n}\r\n\r\n@media (max-width: 375px) {\r\n  .interactive-card {\r\n    padding: var(--space-md);\r\n  }\r\n}\r\n\r\n/* ハイコントラストモード対応 */\r\n@media (prefers-contrast: high) {\r\n  .interactive-card {\r\n    border-color: rgba(129, 140, 248, 0.6);\r\n    background: rgba(255, 255, 255, 0.1);\r\n  }\r\n}\r\n\r\n/* モーション削減設定 */\r\n@media (prefers-reduced-motion: reduce) {\r\n  .interactive-card {\r\n    transition: none;\r\n  }\r\n  \r\n  .interactive-card:hover {\r\n    transform: none;\r\n  }\r\n}\r\n\r\n/* 大画面対応 */\r\n@media (min-width: 1536px) {\r\n  .info-grid {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    gap: var(--space-2xl);\r\n  }\r\n}\r\n</style>","/**\r\n * 日本語翻訳ファイル\r\n * 保険ゲームの日本語メッセージと設定\r\n */\r\n\r\nexport default {\r\n  // 基本UI要素\r\n  ui: {\r\n    // ナビゲーション\r\n    navigation: {\r\n      home: 'ホーム',\r\n      back: 'ホーム',\r\n      game: 'ゲーム',\r\n      tutorial: 'チュートリアル',\r\n      statistics: '統計',\r\n      settings: '設定',\r\n      accessibility: 'アクセシビリティ設定',\r\n      feedback: 'フィードバック'\r\n    },\r\n    \r\n    // ボタン\r\n    buttons: {\r\n      start: '開始',\r\n      startGame: 'ゲーム開始',\r\n      startTutorial: 'チュートリアル開始',\r\n      close: '閉じる',\r\n      cancel: 'キャンセル',\r\n      ok: 'OK',\r\n      yes: 'はい',\r\n      no: 'いいえ',\r\n      continue: '続行',\r\n      skip: 'スキップ',\r\n      next: '次へ',\r\n      previous: '前へ',\r\n      finish: '完了',\r\n      reset: 'リセット',\r\n      save: '保存',\r\n      load: '読み込み'\r\n    },\r\n    \r\n    // 一般的なメッセージ\r\n    common: {\r\n      loading: '読み込み中...',\r\n      error: 'エラーが発生しました',\r\n      success: '成功しました',\r\n      warning: '警告',\r\n      info: '情報',\r\n      confirm: '確認',\r\n      welcome: 'ようこそ',\r\n      congratulations: 'おめでとうございます！',\r\n      gameOver: 'ゲーム終了',\r\n      newGame: '新しいゲーム',\r\n      retry: 'もう一度'\r\n    }\r\n  },\r\n  \r\n  // ゲーム関連\r\n  game: {\r\n    // ゲーム状態\r\n    title: '人生充実ゲーム',\r\n    subtitle: '戦略的ライフシミュレーション',\r\n    description: '人生のさまざまな段階でリスクと保険のバランスを考えながら、充実した人生を目指すゲームです。',\r\n    \r\n    // ライフステージ\r\n    stages: {\r\n      youth: '青年期',\r\n      adult: '成人期',\r\n      middleAge: '中年期',\r\n      elderly: '高齢期'\r\n    },\r\n    \r\n    // ゲーム要素\r\n    elements: {\r\n      vitality: '生命力',\r\n      turn: 'ターン',\r\n      phase: 'フェーズ',\r\n      stage: 'ステージ',\r\n      round: 'ラウンド',\r\n      score: 'スコア',\r\n      level: 'レベル'\r\n    },\r\n    \r\n    // カード\r\n    cards: {\r\n      riskCard: 'リスクカード',\r\n      insuranceCard: '保険カード',\r\n      eventCard: 'イベントカード',\r\n      actionCard: 'アクションカード',\r\n      powerCard: 'パワーカード'\r\n    },\r\n    \r\n    // アクション\r\n    actions: {\r\n      draw: 'カードを引く',\r\n      play: 'カードを使う',\r\n      discard: 'カードを捨てる',\r\n      buyInsurance: '保険を購入',\r\n      cancelInsurance: '保険を解約',\r\n      takeRisk: 'リスクを取る',\r\n      avoidRisk: 'リスクを回避'\r\n    },\r\n    \r\n    // 保険タイプ\r\n    insurance: {\r\n      types: {\r\n        life: '生命保険',\r\n        health: '健康保険',\r\n        auto: '自動車保険',\r\n        home: '火災保険',\r\n        travel: '旅行保険',\r\n        income: '所得保障保険',\r\n        disability: '傷害保険',\r\n        longTermCare: '介護保険'\r\n      },\r\n      \r\n      terms: {\r\n        premium: '保険料',\r\n        coverage: '保障額',\r\n        deductible: '免責金額',\r\n        beneficiary: '受益者',\r\n        policy: '保険証券',\r\n        claim: '保険金請求',\r\n        renewal: '更新',\r\n        cancellation: '解約'\r\n      }\r\n    },\r\n    \r\n    // リスク\r\n    risks: {\r\n      categories: {\r\n        health: '健康リスク',\r\n        financial: '経済リスク',\r\n        accident: '事故リスク',\r\n        natural: '自然災害リスク',\r\n        career: 'キャリアリスク',\r\n        family: '家族リスク'\r\n      },\r\n      \r\n      levels: {\r\n        low: '低リスク',\r\n        medium: '中リスク',\r\n        high: '高リスク',\r\n        extreme: '極高リスク'\r\n      }\r\n    }\r\n  },\r\n  \r\n  // チュートリアル\r\n  tutorial: {\r\n    title: 'ゲームチュートリアル',\r\n    welcome: 'ようこそ！人生充実ゲームの世界へ',\r\n    steps: {\r\n      introduction: {\r\n        title: 'はじめに',\r\n        content: 'このゲームでは、人生のさまざまな段階でリスクと保険のバランスを考えながら進めていきます。'\r\n      },\r\n      basicRules: {\r\n        title: '基本ルール',\r\n        content: '各ターンでカードを引き、リスクに対処するか保険で備えるかを決めます。'\r\n      },\r\n      cardTypes: {\r\n        title: 'カードの種類',\r\n        content: 'リスクカード、保険カード、イベントカードがあります。それぞれの特徴を理解しましょう。'\r\n      },\r\n      insuranceSystem: {\r\n        title: '保険システム',\r\n        content: '保険は事前に購入することでリスクに備えることができます。保険料と保障額を考慮して選択しましょう。'\r\n      },\r\n      strategy: {\r\n        title: '戦略のポイント',\r\n        content: '生命力を維持しながら、効果的な保険戦略を立てることが成功の鍵です。'\r\n      }\r\n    }\r\n  },\r\n  \r\n  // 統計・分析\r\n  statistics: {\r\n    title: '統計ダッシュボード',\r\n    sections: {\r\n      overview: '概要',\r\n      performance: 'パフォーマンス',\r\n      trends: 'トレンド',\r\n      detailed: '詳細分析'\r\n    },\r\n    \r\n    metrics: {\r\n      gamesPlayed: 'プレイ回数',\r\n      winRate: '勝率',\r\n      averageScore: '平均スコア',\r\n      bestScore: '最高スコア',\r\n      totalPlayTime: '総プレイ時間',\r\n      averageGameTime: '平均ゲーム時間',\r\n      survivalRate: '生存率',\r\n      insuranceEfficiency: '保険効率'\r\n    },\r\n    \r\n    charts: {\r\n      vitalityTrend: '生命力推移',\r\n      stageAnalysis: 'ステージ別分析',\r\n      cardUsage: 'カード使用状況',\r\n      decisionAnalysis: '意思決定分析',\r\n      riskManagement: 'リスク管理',\r\n      insuranceCoverage: '保険カバレッジ'\r\n    }\r\n  },\r\n  \r\n  // アクセシビリティ\r\n  accessibility: {\r\n    title: 'アクセシビリティ設定',\r\n    sections: {\r\n      visual: '視覚設定',\r\n      audio: '音声設定',\r\n      interaction: '操作設定',\r\n      display: '表示設定'\r\n    },\r\n    \r\n    options: {\r\n      highContrast: 'ハイコントラスト',\r\n      largeText: '大きな文字',\r\n      reduceMotion: 'アニメーション軽減',\r\n      screenReader: 'スクリーンリーダー対応',\r\n      keyboardNavigation: 'キーボードナビゲーション',\r\n      audioCues: '音声キュー',\r\n      subtitles: '字幕',\r\n      slowAnimations: 'ゆっくりアニメーション'\r\n    },\r\n    \r\n    keyboardShortcuts: {\r\n      title: 'キーボードショートカット',\r\n      homeScreen: 'ホーム画面に戻る (Alt+H)',\r\n      startGame: 'ゲーム開始 (Alt+G)',\r\n      startTutorial: 'チュートリアル開始 (Alt+T)',\r\n      openStatistics: '統計を開く (Alt+S)',\r\n      openAccessibility: 'アクセシビリティ設定 (Alt+A)',\r\n      help: 'ヘルプを表示 (F1)'\r\n    }\r\n  },\r\n  \r\n  // フィードバック\r\n  feedback: {\r\n    title: 'フィードバック',\r\n    types: {\r\n      bug: 'バグ報告',\r\n      suggestion: '改善提案',\r\n      general: '一般的な意見',\r\n      rating: '評価'\r\n    },\r\n    \r\n    form: {\r\n      subject: '件名',\r\n      message: 'メッセージ',\r\n      email: 'メールアドレス（任意）',\r\n      category: 'カテゴリ',\r\n      priority: '優先度',\r\n      submit: '送信',\r\n      thankYou: 'フィードバックをありがとうございました！'\r\n    }\r\n  },\r\n  \r\n  // エラーメッセージ\r\n  errors: {\r\n    general: 'エラーが発生しました。',\r\n    network: 'ネットワークエラーが発生しました。',\r\n    gameState: 'ゲーム状態の読み込みに失敗しました。',\r\n    save: 'ゲームの保存に失敗しました。',\r\n    load: 'ゲームの読み込みに失敗しました。',\r\n    invalidAction: '無効な操作です。',\r\n    cardNotFound: 'カードが見つかりません。',\r\n    insufficientFunds: '資金が不足しています。',\r\n    insuranceNotActive: '保険が有効ではありません。'\r\n  },\r\n  \r\n  // 成功メッセージ\r\n  success: {\r\n    gameSaved: 'ゲームを保存しました。',\r\n    gameLoaded: 'ゲームを読み込みました。',\r\n    insurancePurchased: '保険を購入しました。',\r\n    riskAvoided: 'リスクを回避しました。',\r\n    levelCompleted: 'レベルをクリアしました！',\r\n    achievementUnlocked: '実績を獲得しました！'\r\n  },\r\n  \r\n  // 地域固有設定（日本）\r\n  region: {\r\n    currency: '円',\r\n    currencySymbol: '¥',\r\n    dateFormat: 'YYYY年MM月DD日',\r\n    numberFormat: '1,234',\r\n    \r\n    // 日本の保険制度に関連する用語\r\n    insuranceSystem: {\r\n      nationalHealth: '国民健康保険',\r\n      employeeHealth: '健康保険',\r\n      nationalPension: '国民年金',\r\n      employeePension: '厚生年金',\r\n      longTermCare: '介護保険',\r\n      workersComp: '労災保険',\r\n      unemployment: '雇用保険'\r\n    },\r\n    \r\n    // 日本特有のリスク\r\n    risks: {\r\n      earthquake: '地震',\r\n      typhoon: '台風',\r\n      flood: '洪水',\r\n      aging: '高齢化',\r\n      recession: '不況',\r\n      deflation: 'デフレ'\r\n    }\r\n  },\r\n  \r\n  // 年齢層・世代別メッセージ\r\n  ageGroups: {\r\n    young: {\r\n      title: '若い世代への保険アドバイス',\r\n      message: '将来に向けた基盤作りが重要です。'\r\n    },\r\n    middle: {\r\n      title: '働き盛り世代への保険アドバイス',\r\n      message: '家族を守るための保障を検討しましょう。'\r\n    },\r\n    senior: {\r\n      title: 'シニア世代への保険アドバイス',\r\n      message: '医療・介護リスクへの備えが大切です。'\r\n    }\r\n  }\r\n} as const","/**\r\n * English Translation File\r\n * English messages and settings for the insurance game\r\n */\r\n\r\nexport default {\r\n  // Basic UI elements\r\n  ui: {\r\n    // Navigation\r\n    navigation: {\r\n      home: 'Home',\r\n      back: 'Home',\r\n      game: 'Game',\r\n      tutorial: 'Tutorial',\r\n      statistics: 'Statistics',\r\n      settings: 'Settings',\r\n      accessibility: 'Accessibility Settings',\r\n      feedback: 'Feedback'\r\n    },\r\n    \r\n    // Buttons\r\n    buttons: {\r\n      start: 'Start',\r\n      startGame: 'Start Game',\r\n      startTutorial: 'Start Tutorial',\r\n      close: 'Close',\r\n      cancel: 'Cancel',\r\n      ok: 'OK',\r\n      yes: 'Yes',\r\n      no: 'No',\r\n      continue: 'Continue',\r\n      skip: 'Skip',\r\n      next: 'Next',\r\n      previous: 'Previous',\r\n      finish: 'Finish',\r\n      reset: 'Reset',\r\n      save: 'Save',\r\n      load: 'Load'\r\n    },\r\n    \r\n    // Common messages\r\n    common: {\r\n      loading: 'Loading...',\r\n      error: 'An error occurred',\r\n      success: 'Success',\r\n      warning: 'Warning',\r\n      info: 'Information',\r\n      confirm: 'Confirm',\r\n      welcome: 'Welcome',\r\n      congratulations: 'Congratulations!',\r\n      gameOver: 'Game Over',\r\n      newGame: 'New Game',\r\n      retry: 'Try Again'\r\n    }\r\n  },\r\n  \r\n  // Game related\r\n  game: {\r\n    // Game state\r\n    title: 'Life Enrichment Game',\r\n    subtitle: 'Strategic Life Simulation',\r\n    description: 'A game where you navigate through different life stages, balancing risks and insurance to achieve a fulfilling life.',\r\n    \r\n    // Life stages\r\n    stages: {\r\n      youth: 'Youth',\r\n      adult: 'Adulthood',\r\n      middleAge: 'Middle Age',\r\n      elderly: 'Elderly'\r\n    },\r\n    \r\n    // Game elements\r\n    elements: {\r\n      vitality: 'Vitality',\r\n      turn: 'Turn',\r\n      phase: 'Phase',\r\n      stage: 'Stage',\r\n      round: 'Round',\r\n      score: 'Score',\r\n      level: 'Level'\r\n    },\r\n    \r\n    // Cards\r\n    cards: {\r\n      riskCard: 'Risk Card',\r\n      insuranceCard: 'Insurance Card',\r\n      eventCard: 'Event Card',\r\n      actionCard: 'Action Card',\r\n      powerCard: 'Power Card'\r\n    },\r\n    \r\n    // Actions\r\n    actions: {\r\n      draw: 'Draw Card',\r\n      play: 'Play Card',\r\n      discard: 'Discard Card',\r\n      buyInsurance: 'Buy Insurance',\r\n      cancelInsurance: 'Cancel Insurance',\r\n      takeRisk: 'Take Risk',\r\n      avoidRisk: 'Avoid Risk'\r\n    },\r\n    \r\n    // Insurance types\r\n    insurance: {\r\n      types: {\r\n        life: 'Life Insurance',\r\n        health: 'Health Insurance',\r\n        auto: 'Auto Insurance',\r\n        home: 'Home Insurance',\r\n        travel: 'Travel Insurance',\r\n        income: 'Income Protection',\r\n        disability: 'Disability Insurance',\r\n        longTermCare: 'Long-term Care Insurance'\r\n      },\r\n      \r\n      terms: {\r\n        premium: 'Premium',\r\n        coverage: 'Coverage',\r\n        deductible: 'Deductible',\r\n        beneficiary: 'Beneficiary',\r\n        policy: 'Policy',\r\n        claim: 'Claim',\r\n        renewal: 'Renewal',\r\n        cancellation: 'Cancellation'\r\n      }\r\n    },\r\n    \r\n    // Risks\r\n    risks: {\r\n      categories: {\r\n        health: 'Health Risk',\r\n        financial: 'Financial Risk',\r\n        accident: 'Accident Risk',\r\n        natural: 'Natural Disaster Risk',\r\n        career: 'Career Risk',\r\n        family: 'Family Risk'\r\n      },\r\n      \r\n      levels: {\r\n        low: 'Low Risk',\r\n        medium: 'Medium Risk',\r\n        high: 'High Risk',\r\n        extreme: 'Extreme Risk'\r\n      }\r\n    }\r\n  },\r\n  \r\n  // Tutorial\r\n  tutorial: {\r\n    title: 'Game Tutorial',\r\n    welcome: 'Welcome to the Life Enrichment Game!',\r\n    steps: {\r\n      introduction: {\r\n        title: 'Introduction',\r\n        content: 'In this game, you\\'ll navigate through different life stages while balancing risks and insurance.'\r\n      },\r\n      basicRules: {\r\n        title: 'Basic Rules',\r\n        content: 'Each turn, draw cards and decide whether to face risks or protect yourself with insurance.'\r\n      },\r\n      cardTypes: {\r\n        title: 'Card Types',\r\n        content: 'There are risk cards, insurance cards, and event cards. Learn their characteristics.'\r\n      },\r\n      insuranceSystem: {\r\n        title: 'Insurance System',\r\n        content: 'Purchase insurance in advance to prepare for risks. Consider premiums and coverage amounts.'\r\n      },\r\n      strategy: {\r\n        title: 'Strategy Tips',\r\n        content: 'Maintain your vitality while developing an effective insurance strategy for success.'\r\n      }\r\n    }\r\n  },\r\n  \r\n  // Statistics & Analytics\r\n  statistics: {\r\n    title: 'Statistics Dashboard',\r\n    sections: {\r\n      overview: 'Overview',\r\n      performance: 'Performance',\r\n      trends: 'Trends',\r\n      detailed: 'Detailed Analysis'\r\n    },\r\n    \r\n    metrics: {\r\n      gamesPlayed: 'Games Played',\r\n      winRate: 'Win Rate',\r\n      averageScore: 'Average Score',\r\n      bestScore: 'Best Score',\r\n      totalPlayTime: 'Total Play Time',\r\n      averageGameTime: 'Average Game Time',\r\n      survivalRate: 'Survival Rate',\r\n      insuranceEfficiency: 'Insurance Efficiency'\r\n    },\r\n    \r\n    charts: {\r\n      vitalityTrend: 'Vitality Trend',\r\n      stageAnalysis: 'Stage Analysis',\r\n      cardUsage: 'Card Usage',\r\n      decisionAnalysis: 'Decision Analysis',\r\n      riskManagement: 'Risk Management',\r\n      insuranceCoverage: 'Insurance Coverage'\r\n    }\r\n  },\r\n  \r\n  // Accessibility\r\n  accessibility: {\r\n    title: 'Accessibility Settings',\r\n    sections: {\r\n      visual: 'Visual Settings',\r\n      audio: 'Audio Settings',\r\n      interaction: 'Interaction Settings',\r\n      display: 'Display Settings'\r\n    },\r\n    \r\n    options: {\r\n      highContrast: 'High Contrast',\r\n      largeText: 'Large Text',\r\n      reduceMotion: 'Reduce Motion',\r\n      screenReader: 'Screen Reader Support',\r\n      keyboardNavigation: 'Keyboard Navigation',\r\n      audioCues: 'Audio Cues',\r\n      subtitles: 'Subtitles',\r\n      slowAnimations: 'Slow Animations'\r\n    },\r\n    \r\n    keyboardShortcuts: {\r\n      title: 'Keyboard Shortcuts',\r\n      homeScreen: 'Return to Home Screen (Alt+H)',\r\n      startGame: 'Start Game (Alt+G)',\r\n      startTutorial: 'Start Tutorial (Alt+T)',\r\n      openStatistics: 'Open Statistics (Alt+S)',\r\n      openAccessibility: 'Accessibility Settings (Alt+A)',\r\n      help: 'Show Help (F1)'\r\n    }\r\n  },\r\n  \r\n  // Feedback\r\n  feedback: {\r\n    title: 'Feedback',\r\n    types: {\r\n      bug: 'Bug Report',\r\n      suggestion: 'Suggestion',\r\n      general: 'General Opinion',\r\n      rating: 'Rating'\r\n    },\r\n    \r\n    form: {\r\n      subject: 'Subject',\r\n      message: 'Message',\r\n      email: 'Email (Optional)',\r\n      category: 'Category',\r\n      priority: 'Priority',\r\n      submit: 'Submit',\r\n      thankYou: 'Thank you for your feedback!'\r\n    }\r\n  },\r\n  \r\n  // Error messages\r\n  errors: {\r\n    general: 'An error occurred.',\r\n    network: 'A network error occurred.',\r\n    gameState: 'Failed to load game state.',\r\n    save: 'Failed to save game.',\r\n    load: 'Failed to load game.',\r\n    invalidAction: 'Invalid action.',\r\n    cardNotFound: 'Card not found.',\r\n    insufficientFunds: 'Insufficient funds.',\r\n    insuranceNotActive: 'Insurance is not active.'\r\n  },\r\n  \r\n  // Success messages\r\n  success: {\r\n    gameSaved: 'Game saved.',\r\n    gameLoaded: 'Game loaded.',\r\n    insurancePurchased: 'Insurance purchased.',\r\n    riskAvoided: 'Risk avoided.',\r\n    levelCompleted: 'Level completed!',\r\n    achievementUnlocked: 'Achievement unlocked!'\r\n  },\r\n  \r\n  // Region-specific settings (US/International)\r\n  region: {\r\n    currency: 'USD',\r\n    currencySymbol: '$',\r\n    dateFormat: 'MM/DD/YYYY',\r\n    numberFormat: '1,234',\r\n    \r\n    // US insurance system related terms\r\n    insuranceSystem: {\r\n      nationalHealth: 'Medicare',\r\n      employeeHealth: 'Employer Health Insurance',\r\n      nationalPension: 'Social Security',\r\n      employeePension: '401(k)',\r\n      longTermCare: 'Long-term Care Insurance',\r\n      workersComp: 'Workers\\' Compensation',\r\n      unemployment: 'Unemployment Insurance'\r\n    },\r\n    \r\n    // US-specific risks\r\n    risks: {\r\n      earthquake: 'Earthquake',\r\n      hurricane: 'Hurricane',\r\n      flood: 'Flood',\r\n      recession: 'Recession',\r\n      inflation: 'Inflation',\r\n      jobLoss: 'Job Loss'\r\n    }\r\n  },\r\n  \r\n  // Age group specific messages\r\n  ageGroups: {\r\n    young: {\r\n      title: 'Insurance Advice for Young Adults',\r\n      message: 'Building a foundation for your future is important.'\r\n    },\r\n    middle: {\r\n      title: 'Insurance Advice for Working Adults',\r\n      message: 'Consider protection for your family.'\r\n    },\r\n    senior: {\r\n      title: 'Insurance Advice for Seniors',\r\n      message: 'Healthcare and long-term care preparation is essential.'\r\n    }\r\n  }\r\n} as const","/**\r\n * 中文（简体）翻译文件\r\n * 保险游戏的中文消息和设置\r\n */\r\n\r\nexport default {\r\n  // 基本UI元素\r\n  ui: {\r\n    // 导航\r\n    navigation: {\r\n      home: '首页',\r\n      back: '首页',\r\n      game: '游戏',\r\n      tutorial: '教程',\r\n      statistics: '统计',\r\n      settings: '设置',\r\n      accessibility: '无障碍设置',\r\n      feedback: '反馈'\r\n    },\r\n    \r\n    // 按钮\r\n    buttons: {\r\n      start: '开始',\r\n      startGame: '开始游戏',\r\n      startTutorial: '开始教程',\r\n      close: '关闭',\r\n      cancel: '取消',\r\n      ok: '确定',\r\n      yes: '是',\r\n      no: '否',\r\n      continue: '继续',\r\n      skip: '跳过',\r\n      next: '下一步',\r\n      previous: '上一步',\r\n      finish: '完成',\r\n      reset: '重置',\r\n      save: '保存',\r\n      load: '加载'\r\n    },\r\n    \r\n    // 通用消息\r\n    common: {\r\n      loading: '加载中...',\r\n      error: '发生错误',\r\n      success: '成功',\r\n      warning: '警告',\r\n      info: '信息',\r\n      confirm: '确认',\r\n      welcome: '欢迎',\r\n      congratulations: '恭喜！',\r\n      gameOver: '游戏结束',\r\n      newGame: '新游戏',\r\n      retry: '重试'\r\n    }\r\n  },\r\n  \r\n  // 游戏相关\r\n  game: {\r\n    // 游戏状态\r\n    title: '人生充实游戏',\r\n    subtitle: '战略人生模拟',\r\n    description: '在人生的不同阶段中，平衡风险与保险，追求充实人生的游戏。',\r\n    \r\n    // 人生阶段\r\n    stages: {\r\n      youth: '青年期',\r\n      adult: '成年期',\r\n      middleAge: '中年期',\r\n      elderly: '老年期'\r\n    },\r\n    \r\n    // 游戏元素\r\n    elements: {\r\n      vitality: '生命力',\r\n      turn: '回合',\r\n      phase: '阶段',\r\n      stage: '关卡',\r\n      round: '轮次',\r\n      score: '得分',\r\n      level: '等级'\r\n    },\r\n    \r\n    // 卡牌\r\n    cards: {\r\n      riskCard: '风险卡',\r\n      insuranceCard: '保险卡',\r\n      eventCard: '事件卡',\r\n      actionCard: '行动卡',\r\n      powerCard: '力量卡'\r\n    },\r\n    \r\n    // 行动\r\n    actions: {\r\n      draw: '抽卡',\r\n      play: '出牌',\r\n      discard: '弃牌',\r\n      buyInsurance: '购买保险',\r\n      cancelInsurance: '取消保险',\r\n      takeRisk: '承担风险',\r\n      avoidRisk: '规避风险'\r\n    },\r\n    \r\n    // 保险类型\r\n    insurance: {\r\n      types: {\r\n        life: '人寿保险',\r\n        health: '健康保险',\r\n        auto: '车险',\r\n        home: '房屋保险',\r\n        travel: '旅行保险',\r\n        income: '收入保障保险',\r\n        disability: '意外伤害保险',\r\n        longTermCare: '长期护理保险'\r\n      },\r\n      \r\n      terms: {\r\n        premium: '保费',\r\n        coverage: '保额',\r\n        deductible: '免赔额',\r\n        beneficiary: '受益人',\r\n        policy: '保单',\r\n        claim: '理赔',\r\n        renewal: '续保',\r\n        cancellation: '退保'\r\n      }\r\n    },\r\n    \r\n    // 风险\r\n    risks: {\r\n      categories: {\r\n        health: '健康风险',\r\n        financial: '经济风险',\r\n        accident: '意外风险',\r\n        natural: '自然灾害风险',\r\n        career: '职业风险',\r\n        family: '家庭风险'\r\n      },\r\n      \r\n      levels: {\r\n        low: '低风险',\r\n        medium: '中等风险',\r\n        high: '高风险',\r\n        extreme: '极高风险'\r\n      }\r\n    }\r\n  },\r\n  \r\n  // 教程\r\n  tutorial: {\r\n    title: '游戏教程',\r\n    welcome: '欢迎来到人生充实游戏的世界！',\r\n    steps: {\r\n      introduction: {\r\n        title: '介绍',\r\n        content: '在这个游戏中，您将在人生的不同阶段中平衡风险与保险。'\r\n      },\r\n      basicRules: {\r\n        title: '基本规则',\r\n        content: '每回合抽取卡牌，决定是面对风险还是用保险来防范。'\r\n      },\r\n      cardTypes: {\r\n        title: '卡牌类型',\r\n        content: '有风险卡、保险卡和事件卡。了解它们各自的特点。'\r\n      },\r\n      insuranceSystem: {\r\n        title: '保险系统',\r\n        content: '提前购买保险来防范风险。要考虑保费和保额。'\r\n      },\r\n      strategy: {\r\n        title: '策略要点',\r\n        content: '在维持生命力的同时，制定有效的保险策略是成功的关键。'\r\n      }\r\n    }\r\n  },\r\n  \r\n  // 统计分析\r\n  statistics: {\r\n    title: '统计仪表板',\r\n    sections: {\r\n      overview: '概览',\r\n      performance: '表现',\r\n      trends: '趋势',\r\n      detailed: '详细分析'\r\n    },\r\n    \r\n    metrics: {\r\n      gamesPlayed: '游戏次数',\r\n      winRate: '胜率',\r\n      averageScore: '平均得分',\r\n      bestScore: '最高得分',\r\n      totalPlayTime: '总游戏时间',\r\n      averageGameTime: '平均游戏时间',\r\n      survivalRate: '生存率',\r\n      insuranceEfficiency: '保险效率'\r\n    },\r\n    \r\n    charts: {\r\n      vitalityTrend: '生命力趋势',\r\n      stageAnalysis: '阶段分析',\r\n      cardUsage: '卡牌使用情况',\r\n      decisionAnalysis: '决策分析',\r\n      riskManagement: '风险管理',\r\n      insuranceCoverage: '保险覆盖'\r\n    }\r\n  },\r\n  \r\n  // 无障碍\r\n  accessibility: {\r\n    title: '无障碍设置',\r\n    sections: {\r\n      visual: '视觉设置',\r\n      audio: '音频设置',\r\n      interaction: '交互设置',\r\n      display: '显示设置'\r\n    },\r\n    \r\n    options: {\r\n      highContrast: '高对比度',\r\n      largeText: '大字体',\r\n      reduceMotion: '减少动画',\r\n      screenReader: '屏幕阅读器支持',\r\n      keyboardNavigation: '键盘导航',\r\n      audioCues: '音频提示',\r\n      subtitles: '字幕',\r\n      slowAnimations: '慢速动画'\r\n    },\r\n    \r\n    keyboardShortcuts: {\r\n      title: '键盘快捷键',\r\n      homeScreen: '返回首页 (Alt+H)',\r\n      startGame: '开始游戏 (Alt+G)',\r\n      startTutorial: '开始教程 (Alt+T)',\r\n      openStatistics: '打开统计 (Alt+S)',\r\n      openAccessibility: '无障碍设置 (Alt+A)',\r\n      help: '显示帮助 (F1)'\r\n    }\r\n  },\r\n  \r\n  // 反馈\r\n  feedback: {\r\n    title: '反馈',\r\n    types: {\r\n      bug: '错误报告',\r\n      suggestion: '改进建议',\r\n      general: '一般意见',\r\n      rating: '评价'\r\n    },\r\n    \r\n    form: {\r\n      subject: '主题',\r\n      message: '消息',\r\n      email: '邮箱（可选）',\r\n      category: '类别',\r\n      priority: '优先级',\r\n      submit: '提交',\r\n      thankYou: '感谢您的反馈！'\r\n    }\r\n  },\r\n  \r\n  // 错误消息\r\n  errors: {\r\n    general: '发生错误。',\r\n    network: '网络错误。',\r\n    gameState: '游戏状态加载失败。',\r\n    save: '游戏保存失败。',\r\n    load: '游戏加载失败。',\r\n    invalidAction: '无效操作。',\r\n    cardNotFound: '未找到卡牌。',\r\n    insufficientFunds: '资金不足。',\r\n    insuranceNotActive: '保险未生效。'\r\n  },\r\n  \r\n  // 成功消息\r\n  success: {\r\n    gameSaved: '游戏已保存。',\r\n    gameLoaded: '游戏已加载。',\r\n    insurancePurchased: '保险已购买。',\r\n    riskAvoided: '风险已规避。',\r\n    levelCompleted: '关卡完成！',\r\n    achievementUnlocked: '成就解锁！'\r\n  },\r\n  \r\n  // 地区特定设置（中国）\r\n  region: {\r\n    currency: '人民币',\r\n    currencySymbol: '¥',\r\n    dateFormat: 'YYYY年MM月DD日',\r\n    numberFormat: '1,234',\r\n    \r\n    // 中国保险制度相关术语\r\n    insuranceSystem: {\r\n      nationalHealth: '城镇职工基本医疗保险',\r\n      employeeHealth: '职工医疗保险',\r\n      nationalPension: '城镇职工基本养老保险',\r\n      employeePension: '企业年金',\r\n      longTermCare: '长期护理保险',\r\n      workersComp: '工伤保险',\r\n      unemployment: '失业保险'\r\n    },\r\n    \r\n    // 中国特有风险\r\n    risks: {\r\n      earthquake: '地震',\r\n      flood: '洪水',\r\n      typhoon: '台风',\r\n      smog: '雾霾',\r\n      economicSlowdown: '经济放缓',\r\n      agingPopulation: '人口老龄化'\r\n    }\r\n  },\r\n  \r\n  // 年龄段特定消息\r\n  ageGroups: {\r\n    young: {\r\n      title: '年轻人保险建议',\r\n      message: '为未来打好基础很重要。'\r\n    },\r\n    middle: {\r\n      title: '中年人保险建议',\r\n      message: '考虑为家庭提供保障。'\r\n    },\r\n    senior: {\r\n      title: '老年人保险建议',\r\n      message: '医疗和护理风险的准备至关重要。'\r\n    }\r\n  }\r\n} as const","/**\r\n * 한국어 번역 파일\r\n * 보험 게임의 한국어 메시지와 설정\r\n */\r\n\r\nexport default {\r\n  // 기본 UI 요소\r\n  ui: {\r\n    // 내비게이션\r\n    navigation: {\r\n      home: '홈',\r\n      back: '홈',\r\n      game: '게임',\r\n      tutorial: '튜토리얼',\r\n      statistics: '통계',\r\n      settings: '설정',\r\n      accessibility: '접근성 설정',\r\n      feedback: '피드백'\r\n    },\r\n    \r\n    // 버튼\r\n    buttons: {\r\n      start: '시작',\r\n      startGame: '게임 시작',\r\n      startTutorial: '튜토리얼 시작',\r\n      close: '닫기',\r\n      cancel: '취소',\r\n      ok: '확인',\r\n      yes: '예',\r\n      no: '아니오',\r\n      continue: '계속',\r\n      skip: '건너뛰기',\r\n      next: '다음',\r\n      previous: '이전',\r\n      finish: '완료',\r\n      reset: '초기화',\r\n      save: '저장',\r\n      load: '불러오기'\r\n    },\r\n    \r\n    // 일반 메시지\r\n    common: {\r\n      loading: '로딩 중...',\r\n      error: '오류가 발생했습니다',\r\n      success: '성공',\r\n      warning: '경고',\r\n      info: '정보',\r\n      confirm: '확인',\r\n      welcome: '환영합니다',\r\n      congratulations: '축하합니다!',\r\n      gameOver: '게임 종료',\r\n      newGame: '새 게임',\r\n      retry: '다시 시도'\r\n    }\r\n  },\r\n  \r\n  // 게임 관련\r\n  game: {\r\n    // 게임 상태\r\n    title: '인생 충실 게임',\r\n    subtitle: '전략적 인생 시뮬레이션',\r\n    description: '인생의 다양한 단계에서 위험과 보험의 균형을 고려하며 충실한 인생을 목표로 하는 게임입니다.',\r\n    \r\n    // 인생 단계\r\n    stages: {\r\n      youth: '청년기',\r\n      adult: '성인기',\r\n      middleAge: '중년기',\r\n      elderly: '노년기'\r\n    },\r\n    \r\n    // 게임 요소\r\n    elements: {\r\n      vitality: '생명력',\r\n      turn: '턴',\r\n      phase: '페이즈',\r\n      stage: '스테이지',\r\n      round: '라운드',\r\n      score: '점수',\r\n      level: '레벨'\r\n    },\r\n    \r\n    // 카드\r\n    cards: {\r\n      riskCard: '위험 카드',\r\n      insuranceCard: '보험 카드',\r\n      eventCard: '이벤트 카드',\r\n      actionCard: '액션 카드',\r\n      powerCard: '파워 카드'\r\n    },\r\n    \r\n    // 액션\r\n    actions: {\r\n      draw: '카드 뽑기',\r\n      play: '카드 사용',\r\n      discard: '카드 버리기',\r\n      buyInsurance: '보험 구매',\r\n      cancelInsurance: '보험 해지',\r\n      takeRisk: '위험 감수',\r\n      avoidRisk: '위험 회피'\r\n    },\r\n    \r\n    // 보험 유형\r\n    insurance: {\r\n      types: {\r\n        life: '생명보험',\r\n        health: '건강보험',\r\n        auto: '자동차보험',\r\n        home: '화재보험',\r\n        travel: '여행자보험',\r\n        income: '소득보장보험',\r\n        disability: '상해보험',\r\n        longTermCare: '장기요양보험'\r\n      },\r\n      \r\n      terms: {\r\n        premium: '보험료',\r\n        coverage: '보장금액',\r\n        deductible: '자기부담금',\r\n        beneficiary: '수익자',\r\n        policy: '보험증권',\r\n        claim: '보험금 청구',\r\n        renewal: '갱신',\r\n        cancellation: '해지'\r\n      }\r\n    },\r\n    \r\n    // 위험\r\n    risks: {\r\n      categories: {\r\n        health: '건강 위험',\r\n        financial: '경제적 위험',\r\n        accident: '사고 위험',\r\n        natural: '자연재해 위험',\r\n        career: '직업 위험',\r\n        family: '가족 위험'\r\n      },\r\n      \r\n      levels: {\r\n        low: '낮은 위험',\r\n        medium: '중간 위험',\r\n        high: '높은 위험',\r\n        extreme: '극도로 높은 위험'\r\n      }\r\n    }\r\n  },\r\n  \r\n  // 튜토리얼\r\n  tutorial: {\r\n    title: '게임 튜토리얼',\r\n    welcome: '인생 충실 게임의 세계에 오신 것을 환영합니다!',\r\n    steps: {\r\n      introduction: {\r\n        title: '소개',\r\n        content: '이 게임에서는 인생의 다양한 단계에서 위험과 보험의 균형을 고려하며 진행합니다.'\r\n      },\r\n      basicRules: {\r\n        title: '기본 규칙',\r\n        content: '각 턴에서 카드를 뽑고, 위험에 대처하거나 보험으로 대비할지 결정합니다.'\r\n      },\r\n      cardTypes: {\r\n        title: '카드 종류',\r\n        content: '위험 카드, 보험 카드, 이벤트 카드가 있습니다. 각각의 특징을 이해해봅시다.'\r\n      },\r\n      insuranceSystem: {\r\n        title: '보험 시스템',\r\n        content: '미리 보험을 구매하여 위험에 대비할 수 있습니다. 보험료와 보장금액을 고려하여 선택하세요.'\r\n      },\r\n      strategy: {\r\n        title: '전략 포인트',\r\n        content: '생명력을 유지하면서 효과적인 보험 전략을 세우는 것이 성공의 열쇠입니다.'\r\n      }\r\n    }\r\n  },\r\n  \r\n  // 통계 분석\r\n  statistics: {\r\n    title: '통계 대시보드',\r\n    sections: {\r\n      overview: '개요',\r\n      performance: '성과',\r\n      trends: '트렌드',\r\n      detailed: '상세 분석'\r\n    },\r\n    \r\n    metrics: {\r\n      gamesPlayed: '플레이 횟수',\r\n      winRate: '승률',\r\n      averageScore: '평균 점수',\r\n      bestScore: '최고 점수',\r\n      totalPlayTime: '총 플레이 시간',\r\n      averageGameTime: '평균 게임 시간',\r\n      survivalRate: '생존율',\r\n      insuranceEfficiency: '보험 효율성'\r\n    },\r\n    \r\n    charts: {\r\n      vitalityTrend: '생명력 추이',\r\n      stageAnalysis: '스테이지별 분석',\r\n      cardUsage: '카드 사용 현황',\r\n      decisionAnalysis: '의사결정 분석',\r\n      riskManagement: '위험 관리',\r\n      insuranceCoverage: '보험 커버리지'\r\n    }\r\n  },\r\n  \r\n  // 접근성\r\n  accessibility: {\r\n    title: '접근성 설정',\r\n    sections: {\r\n      visual: '시각 설정',\r\n      audio: '음성 설정',\r\n      interaction: '조작 설정',\r\n      display: '표시 설정'\r\n    },\r\n    \r\n    options: {\r\n      highContrast: '고대비',\r\n      largeText: '큰 글자',\r\n      reduceMotion: '애니메이션 감소',\r\n      screenReader: '스크린 리더 지원',\r\n      keyboardNavigation: '키보드 내비게이션',\r\n      audioCues: '음성 신호',\r\n      subtitles: '자막',\r\n      slowAnimations: '느린 애니메이션'\r\n    },\r\n    \r\n    keyboardShortcuts: {\r\n      title: '키보드 단축키',\r\n      homeScreen: '홈 화면으로 돌아가기 (Alt+H)',\r\n      startGame: '게임 시작 (Alt+G)',\r\n      startTutorial: '튜토리얼 시작 (Alt+T)',\r\n      openStatistics: '통계 열기 (Alt+S)',\r\n      openAccessibility: '접근성 설정 (Alt+A)',\r\n      help: '도움말 표시 (F1)'\r\n    }\r\n  },\r\n  \r\n  // 피드백\r\n  feedback: {\r\n    title: '피드백',\r\n    types: {\r\n      bug: '버그 리포트',\r\n      suggestion: '개선 제안',\r\n      general: '일반 의견',\r\n      rating: '평가'\r\n    },\r\n    \r\n    form: {\r\n      subject: '제목',\r\n      message: '메시지',\r\n      email: '이메일 (선택사항)',\r\n      category: '카테고리',\r\n      priority: '우선순위',\r\n      submit: '제출',\r\n      thankYou: '피드백을 주셔서 감사합니다!'\r\n    }\r\n  },\r\n  \r\n  // 오류 메시지\r\n  errors: {\r\n    general: '오류가 발생했습니다.',\r\n    network: '네트워크 오류가 발생했습니다.',\r\n    gameState: '게임 상태 로드에 실패했습니다.',\r\n    save: '게임 저장에 실패했습니다.',\r\n    load: '게임 로드에 실패했습니다.',\r\n    invalidAction: '유효하지 않은 동작입니다.',\r\n    cardNotFound: '카드를 찾을 수 없습니다.',\r\n    insufficientFunds: '자금이 부족합니다.',\r\n    insuranceNotActive: '보험이 유효하지 않습니다.'\r\n  },\r\n  \r\n  // 성공 메시지\r\n  success: {\r\n    gameSaved: '게임을 저장했습니다.',\r\n    gameLoaded: '게임을 로드했습니다.',\r\n    insurancePurchased: '보험을 구매했습니다.',\r\n    riskAvoided: '위험을 회피했습니다.',\r\n    levelCompleted: '레벨을 클리어했습니다!',\r\n    achievementUnlocked: '업적을 달성했습니다!'\r\n  },\r\n  \r\n  // 지역별 설정 (한국)\r\n  region: {\r\n    currency: '원',\r\n    currencySymbol: '₩',\r\n    dateFormat: 'YYYY년 MM월 DD일',\r\n    numberFormat: '1,234',\r\n    \r\n    // 한국 보험제도 관련 용어\r\n    insuranceSystem: {\r\n      nationalHealth: '국민건강보험',\r\n      employeeHealth: '직장건강보험',\r\n      nationalPension: '국민연금',\r\n      employeePension: '퇴직연금',\r\n      longTermCare: '장기요양보험',\r\n      workersComp: '산재보험',\r\n      unemployment: '고용보험'\r\n    },\r\n    \r\n    // 한국 특유의 위험\r\n    risks: {\r\n      earthquake: '지진',\r\n      typhoon: '태풍',\r\n      flood: '홍수',\r\n      fineDust: '미세먼지',\r\n      economicRecession: '경기침체',\r\n      agingSociety: '고령화 사회'\r\n    }\r\n  },\r\n  \r\n  // 연령대별 메시지\r\n  ageGroups: {\r\n    young: {\r\n      title: '젊은 세대를 위한 보험 조언',\r\n      message: '미래를 위한 기반 마련이 중요합니다.'\r\n    },\r\n    middle: {\r\n      title: '직장인 세대를 위한 보험 조언',\r\n      message: '가족을 지키기 위한 보장을 고려해보세요.'\r\n    },\r\n    senior: {\r\n      title: '시니어 세대를 위한 보험 조언',\r\n      message: '의료 및 요양 위험에 대한 대비가 중요합니다.'\r\n    }\r\n  }\r\n} as const","/**\r\n * Vue I18n 国際化システム\r\n * 多言語サポートとローカライゼーション機能を提供\r\n */\r\n\r\nimport { createI18n } from 'vue-i18n'\r\nimport type { I18nOptions } from 'vue-i18n'\r\n\r\n// 言語ファイルのインポート\r\nimport ja from './locales/ja'\r\nimport en from './locales/en'\r\nimport zh from './locales/zh'\r\nimport ko from './locales/ko'\r\n\r\n// サポートされる言語\r\nexport const SUPPORTED_LOCALES = ['ja', 'en', 'zh', 'ko'] as const\r\nexport type SupportedLocale = typeof SUPPORTED_LOCALES[number]\r\n\r\n// 言語表示名\r\nexport const LOCALE_NAMES: Record<SupportedLocale, string> = {\r\n  ja: '日本語',\r\n  en: 'English',\r\n  zh: '中文（简体）',\r\n  ko: '한국어'\r\n}\r\n\r\n// RTL言語（将来的な拡張に備えて）\r\nexport const RTL_LOCALES: SupportedLocale[] = []\r\n\r\n// ブラウザの言語設定から適切な言語を検出\r\nexport function detectBrowserLocale(): SupportedLocale {\r\n  const browserLang = navigator.language.split('-')[0] as SupportedLocale\r\n  return SUPPORTED_LOCALES.includes(browserLang) ? browserLang : 'ja'\r\n}\r\n\r\n// ローカルストレージから保存された言語設定を取得\r\nexport function getSavedLocale(): SupportedLocale | null {\r\n  try {\r\n    const saved = localStorage.getItem('insurance-game-locale') as SupportedLocale\r\n    return SUPPORTED_LOCALES.includes(saved) ? saved : null\r\n  } catch {\r\n    return null\r\n  }\r\n}\r\n\r\n// 言語設定をローカルストレージに保存\r\nexport function saveLocale(locale: SupportedLocale): void {\r\n  try {\r\n    localStorage.setItem('insurance-game-locale', locale)\r\n  } catch (error) {\r\n    console.warn('Failed to save locale to localStorage:', error)\r\n  }\r\n}\r\n\r\n// 初期言語の決定\r\nexport function getInitialLocale(): SupportedLocale {\r\n  return getSavedLocale() || detectBrowserLocale()\r\n}\r\n\r\n// i18nインスタンスの設定\r\nconst i18nOptions: I18nOptions = {\r\n  legacy: false, // Composition API mode\r\n  locale: getInitialLocale(),\r\n  fallbackLocale: 'ja',\r\n  messages: {\r\n    ja,\r\n    en,\r\n    zh,\r\n    ko\r\n  },\r\n  // 数値フォーマット\r\n  numberFormats: {\r\n    ja: {\r\n      currency: {\r\n        style: 'currency',\r\n        currency: 'JPY',\r\n        currencyDisplay: 'symbol'\r\n      },\r\n      decimal: {\r\n        style: 'decimal',\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 2\r\n      }\r\n    },\r\n    en: {\r\n      currency: {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n        currencyDisplay: 'symbol'\r\n      },\r\n      decimal: {\r\n        style: 'decimal',\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 2\r\n      }\r\n    },\r\n    zh: {\r\n      currency: {\r\n        style: 'currency',\r\n        currency: 'CNY',\r\n        currencyDisplay: 'symbol'\r\n      },\r\n      decimal: {\r\n        style: 'decimal',\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 2\r\n      }\r\n    },\r\n    ko: {\r\n      currency: {\r\n        style: 'currency',\r\n        currency: 'KRW',\r\n        currencyDisplay: 'symbol'\r\n      },\r\n      decimal: {\r\n        style: 'decimal',\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 0\r\n      }\r\n    }\r\n  },\r\n  // 日時フォーマット\r\n  datetimeFormats: {\r\n    ja: {\r\n      short: {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric'\r\n      },\r\n      long: {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n        weekday: 'long'\r\n      }\r\n    },\r\n    en: {\r\n      short: {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric'\r\n      },\r\n      long: {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n        weekday: 'long'\r\n      }\r\n    },\r\n    zh: {\r\n      short: {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric'\r\n      },\r\n      long: {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n        weekday: 'long'\r\n      }\r\n    },\r\n    ko: {\r\n      short: {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric'\r\n      },\r\n      long: {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n        weekday: 'long'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// i18nインスタンスを作成\r\nexport const i18n = createI18n(i18nOptions)\r\n\r\n// 言語切り替え関数\r\nexport function setLocale(locale: SupportedLocale): void {\r\n  if (!SUPPORTED_LOCALES.includes(locale)) {\r\n    console.warn(`Unsupported locale: ${locale}`)\r\n    return\r\n  }\r\n  \r\n  i18n.global.locale.value = locale\r\n  saveLocale(locale)\r\n  \r\n  // HTML lang属性を更新\r\n  document.documentElement.lang = locale\r\n  \r\n  // RTL方向の設定（将来的な拡張用）\r\n  document.documentElement.dir = RTL_LOCALES.includes(locale) ? 'rtl' : 'ltr'\r\n}\r\n\r\n// 現在の言語を取得\r\nexport function getCurrentLocale(): SupportedLocale {\r\n  return i18n.global.locale.value as SupportedLocale\r\n}\r\n\r\n// 翻訳済みメッセージのタイプセーフなアクセス用\r\nexport type MessageSchema = typeof ja\r\n\r\nexport default i18n","<!--\r\n  言語切り替えコンポーネント\r\n  ユーザーが動的に言語を変更できるインターフェース\r\n-->\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed, ref } from 'vue'\r\nimport { useI18n } from 'vue-i18n'\r\nimport { \r\n  SUPPORTED_LOCALES,\r\n  LOCALE_NAMES,\r\n  setLocale,\r\n  getCurrentLocale,\r\n  type SupportedLocale\r\n} from '@/i18n'\r\n\r\nconst { t } = useI18n()\r\n\r\n// コンポーネントプロパティ\r\ninterface Props {\r\n  // 表示モード\r\n  mode?: 'dropdown' | 'buttons' | 'flags'\r\n  // コンパクト表示\r\n  compact?: boolean\r\n  // アクセシビリティラベル\r\n  ariaLabel?: string\r\n}\r\n\r\nconst props = withDefaults(defineProps<Props>(), {\r\n  mode: 'dropdown',\r\n  compact: false,\r\n  ariaLabel: ''\r\n})\r\n\r\n// 状態管理\r\nconst isOpen = ref(false)\r\nconst currentLocale = ref<SupportedLocale>(getCurrentLocale())\r\n\r\n// 計算プロパティ\r\nconst currentLocaleName = computed(() => LOCALE_NAMES[currentLocale.value])\r\n\r\nconst localeOptions = computed(() => \r\n  SUPPORTED_LOCALES.map(locale => ({\r\n    value: locale,\r\n    label: LOCALE_NAMES[locale],\r\n    flag: getFlagEmoji(locale),\r\n    isActive: locale === currentLocale.value\r\n  }))\r\n)\r\n\r\n// 各言語の国旗絵文字\r\nfunction getFlagEmoji(locale: SupportedLocale): string {\r\n  const flags: Record<SupportedLocale, string> = {\r\n    ja: '🇯🇵',\r\n    en: '🇺🇸', \r\n    zh: '🇨🇳',\r\n    ko: '🇰🇷'\r\n  }\r\n  return flags[locale]\r\n}\r\n\r\n// 言語変更処理\r\nfunction changeLanguage(locale: SupportedLocale) {\r\n  currentLocale.value = locale\r\n  setLocale(locale)\r\n  isOpen.value = false\r\n  \r\n  // アクセシビリティ: 言語変更をアナウンス\r\n  const message = `Language changed to ${LOCALE_NAMES[locale]}`\r\n  announceToScreenReader(message)\r\n}\r\n\r\n// スクリーンリーダーへのアナウンス\r\nfunction announceToScreenReader(message: string) {\r\n  const announcement = document.createElement('div')\r\n  announcement.setAttribute('aria-live', 'polite')\r\n  announcement.setAttribute('aria-atomic', 'true')\r\n  announcement.className = 'sr-only'\r\n  announcement.textContent = message\r\n  \r\n  document.body.appendChild(announcement)\r\n  setTimeout(() => document.body.removeChild(announcement), 1000)\r\n}\r\n\r\n// ドロップダウンの開閉\r\nfunction toggleDropdown() {\r\n  isOpen.value = !isOpen.value\r\n}\r\n\r\n// 外部クリックでドロップダウンを閉じる\r\nfunction handleClickOutside(event: Event) {\r\n  const target = event.target as HTMLElement\r\n  if (!target.closest('.language-switcher')) {\r\n    isOpen.value = false\r\n  }\r\n}\r\n\r\n// キーボード操作\r\nfunction handleKeydown(event: KeyboardEvent, locale?: SupportedLocale) {\r\n  switch (event.key) {\r\n    case 'Enter':\r\n    case ' ':\r\n      event.preventDefault()\r\n      if (locale) {\r\n        changeLanguage(locale)\r\n      } else {\r\n        toggleDropdown()\r\n      }\r\n      break\r\n    case 'Escape':\r\n      if (isOpen.value) {\r\n        isOpen.value = false\r\n        // フォーカスをトリガーボタンに戻す\r\n        const trigger = document.querySelector('.language-trigger') as HTMLElement\r\n        trigger?.focus()\r\n      }\r\n      break\r\n    case 'ArrowDown':\r\n      if (props.mode === 'dropdown' && isOpen.value) {\r\n        event.preventDefault()\r\n        const nextOption = document.querySelector('.language-option:not([aria-selected=\"true\"]) + .language-option') as HTMLElement\r\n        nextOption?.focus()\r\n      }\r\n      break\r\n    case 'ArrowUp':\r\n      if (props.mode === 'dropdown' && isOpen.value) {\r\n        event.preventDefault()\r\n        const prevOption = document.querySelector('.language-option[aria-selected=\"true\"]')?.previousElementSibling as HTMLElement\r\n        prevOption?.focus()\r\n      }\r\n      break\r\n  }\r\n}\r\n\r\n// ライフサイクル\r\nimport { onMounted, onUnmounted } from 'vue'\r\n\r\nonMounted(() => {\r\n  document.addEventListener('click', handleClickOutside)\r\n})\r\n\r\nonUnmounted(() => {\r\n  document.removeEventListener('click', handleClickOutside)\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div \r\n    class=\"language-switcher\"\r\n    :class=\"[`language-switcher--${mode}`, { 'language-switcher--compact': compact }]\"\r\n  >\r\n    <!-- ドロップダウンモード -->\r\n    <div v-if=\"mode === 'dropdown'\" class=\"language-dropdown\">\r\n      <button\r\n        class=\"language-trigger\"\r\n        :aria-label=\"ariaLabel || t('accessibility.options.changeLanguage', 'Change Language')\"\r\n        :aria-expanded=\"isOpen\"\r\n        aria-haspopup=\"listbox\"\r\n        @click=\"toggleDropdown\"\r\n        @keydown=\"handleKeydown\"\r\n      >\r\n        <span class=\"current-flag\" aria-hidden=\"true\">{{ getFlagEmoji(currentLocale) }}</span>\r\n        <span v-if=\"!compact\" class=\"current-label\">{{ currentLocaleName }}</span>\r\n        <span class=\"dropdown-icon\" aria-hidden=\"true\" :class=\"{ 'dropdown-icon--open': isOpen }\">\r\n          ▼\r\n        </span>\r\n      </button>\r\n      \r\n      <Transition name=\"dropdown\">\r\n        <ul\r\n          v-if=\"isOpen\"\r\n          class=\"language-options\"\r\n          role=\"listbox\"\r\n          :aria-label=\"t('ui.navigation.selectLanguage', 'Select Language')\"\r\n        >\r\n          <li\r\n            v-for=\"option in localeOptions\"\r\n            :key=\"option.value\"\r\n            class=\"language-option\"\r\n            role=\"option\" \r\n            :aria-selected=\"option.isActive\"\r\n            :tabindex=\"option.isActive ? 0 : -1\"\r\n            @click=\"changeLanguage(option.value)\"\r\n            @keydown=\"handleKeydown($event, option.value)\"\r\n          >\r\n            <span class=\"option-flag\" aria-hidden=\"true\">{{ option.flag }}</span>\r\n            <span class=\"option-label\">{{ option.label }}</span>\r\n            <span v-if=\"option.isActive\" class=\"option-check\" aria-hidden=\"true\">✓</span>\r\n          </li>\r\n        </ul>\r\n      </Transition>\r\n    </div>\r\n    \r\n    <!-- ボタンモード -->\r\n    <div v-else-if=\"mode === 'buttons'\" class=\"language-buttons\">\r\n      <button\r\n        v-for=\"option in localeOptions\"\r\n        :key=\"option.value\"\r\n        class=\"language-button\"\r\n        :class=\"{ 'language-button--active': option.isActive }\"\r\n        :aria-label=\"`${t('ui.navigation.switchTo', 'Switch to')} ${option.label}`\"\r\n        :aria-pressed=\"option.isActive\"\r\n        @click=\"changeLanguage(option.value)\"\r\n      >\r\n        <span class=\"button-flag\" aria-hidden=\"true\">{{ option.flag }}</span>\r\n        <span v-if=\"!compact\" class=\"button-label\">{{ option.label }}</span>\r\n      </button>\r\n    </div>\r\n    \r\n    <!-- フラグモード -->\r\n    <div v-else-if=\"mode === 'flags'\" class=\"language-flags\">\r\n      <button\r\n        v-for=\"option in localeOptions\"\r\n        :key=\"option.value\"\r\n        class=\"language-flag\"\r\n        :class=\"{ 'language-flag--active': option.isActive }\"\r\n        :aria-label=\"`${t('ui.navigation.switchTo', 'Switch to')} ${option.label}`\"\r\n        :title=\"option.label\"\r\n        @click=\"changeLanguage(option.value)\"\r\n      >\r\n        {{ option.flag }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n/* =================================\r\n   言語切り替えコンポーネント基本スタイル\r\n   ================================= */\r\n\r\n.language-switcher {\r\n  position: relative;\r\n  font-family: Inter, system-ui, sans-serif;\r\n}\r\n\r\n/* =================================\r\n   ドロップダウンモード\r\n   ================================= */\r\n\r\n.language-dropdown {\r\n  position: relative;\r\n}\r\n\r\n.language-trigger {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: var(--space-xs);\r\n  \r\n  background: rgba(255, 255, 255, 0.1);\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  border-radius: 8px;\r\n  padding: var(--space-sm) var(--space-md);\r\n  \r\n  color: rgba(255, 255, 255, 0.9);\r\n  font-size: var(--text-sm);\r\n  font-weight: 500;\r\n  \r\n  cursor: pointer;\r\n  transition: all var(--transition-fast);\r\n  \r\n  min-width: 120px;\r\n  justify-content: space-between;\r\n}\r\n\r\n.language-trigger:hover {\r\n  background: rgba(255, 255, 255, 0.15);\r\n  border-color: rgba(255, 255, 255, 0.3);\r\n}\r\n\r\n.language-trigger:focus {\r\n  outline: 2px solid var(--primary-light);\r\n  outline-offset: 2px;\r\n}\r\n\r\n.current-flag {\r\n  font-size: 1.2em;\r\n}\r\n\r\n.current-label {\r\n  flex: 1;\r\n  text-align: left;\r\n}\r\n\r\n.dropdown-icon {\r\n  font-size: 0.8em;\r\n  transition: transform var(--transition-fast);\r\n}\r\n\r\n.dropdown-icon--open {\r\n  transform: rotate(180deg);\r\n}\r\n\r\n.language-options {\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  right: 0;\r\n  z-index: var(--z-dropdown);\r\n  \r\n  background: rgba(30, 30, 30, 0.95);\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  border-radius: 8px;\r\n  margin-top: var(--space-xs);\r\n  \r\n  backdrop-filter: blur(12px);\r\n  box-shadow: var(--shadow-card);\r\n  \r\n  list-style: none;\r\n  padding: var(--space-xs) 0;\r\n  margin: 0;\r\n  \r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.language-option {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: var(--space-sm);\r\n  \r\n  padding: var(--space-sm) var(--space-md);\r\n  cursor: pointer;\r\n  transition: background-color var(--transition-fast);\r\n  \r\n  color: rgba(255, 255, 255, 0.9);\r\n  font-size: var(--text-sm);\r\n}\r\n\r\n.language-option:hover,\r\n.language-option:focus {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  outline: none;\r\n}\r\n\r\n.language-option[aria-selected=\"true\"] {\r\n  background: rgba(129, 140, 248, 0.2);\r\n  color: rgba(129, 140, 248, 1);\r\n}\r\n\r\n.option-flag {\r\n  font-size: 1.1em;\r\n}\r\n\r\n.option-label {\r\n  flex: 1;\r\n}\r\n\r\n.option-check {\r\n  color: var(--primary-light);\r\n  font-weight: bold;\r\n}\r\n\r\n/* =================================\r\n   ボタンモード\r\n   ================================= */\r\n\r\n.language-buttons {\r\n  display: flex;\r\n  gap: var(--space-xs);\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.language-button {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: var(--space-xs);\r\n  \r\n  background: rgba(255, 255, 255, 0.05);\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  border-radius: 6px;\r\n  padding: var(--space-xs) var(--space-sm);\r\n  \r\n  color: rgba(255, 255, 255, 0.7);\r\n  font-size: var(--text-sm);\r\n  font-weight: 500;\r\n  \r\n  cursor: pointer;\r\n  transition: all var(--transition-fast);\r\n}\r\n\r\n.language-button:hover {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  color: rgba(255, 255, 255, 0.9);\r\n}\r\n\r\n.language-button:focus {\r\n  outline: 2px solid var(--primary-light);\r\n  outline-offset: 1px;\r\n}\r\n\r\n.language-button--active {\r\n  background: rgba(129, 140, 248, 0.2);\r\n  border-color: rgba(129, 140, 248, 0.4);\r\n  color: rgba(129, 140, 248, 1);\r\n}\r\n\r\n.button-flag {\r\n  font-size: 1.1em;\r\n}\r\n\r\n/* =================================\r\n   フラグモード\r\n   ================================= */\r\n\r\n.language-flags {\r\n  display: flex;\r\n  gap: var(--space-xs);\r\n}\r\n\r\n.language-flag {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  \r\n  width: var(--touch-target-min);\r\n  height: var(--touch-target-min);\r\n  \r\n  background: transparent;\r\n  border: 2px solid transparent;\r\n  border-radius: 8px;\r\n  \r\n  font-size: 1.5em;\r\n  cursor: pointer;\r\n  transition: all var(--transition-fast);\r\n}\r\n\r\n.language-flag:hover {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  transform: scale(1.1);\r\n}\r\n\r\n.language-flag:focus {\r\n  outline: 2px solid var(--primary-light);\r\n  outline-offset: 2px;\r\n}\r\n\r\n.language-flag--active {\r\n  border-color: var(--primary-light);\r\n  background: rgba(129, 140, 248, 0.1);\r\n}\r\n\r\n/* =================================\r\n   コンパクトモード\r\n   ================================= */\r\n\r\n.language-switcher--compact .language-trigger {\r\n  min-width: auto;\r\n  padding: var(--space-xs) var(--space-sm);\r\n}\r\n\r\n.language-switcher--compact .language-button {\r\n  padding: var(--space-xs);\r\n}\r\n\r\n/* =================================\r\n   アニメーション\r\n   ================================= */\r\n\r\n.dropdown-enter-active,\r\n.dropdown-leave-active {\r\n  transition: all var(--transition-normal);\r\n  transform-origin: top;\r\n}\r\n\r\n.dropdown-enter-from,\r\n.dropdown-leave-to {\r\n  opacity: 0;\r\n  transform: scaleY(0.8) translateY(-8px);\r\n}\r\n\r\n.dropdown-enter-to,\r\n.dropdown-leave-from {\r\n  opacity: 1;\r\n  transform: scaleY(1) translateY(0);\r\n}\r\n\r\n/* =================================\r\n   レスポンシブ対応\r\n   ================================= */\r\n\r\n@media (max-width: 640px) {\r\n  .language-trigger {\r\n    min-width: auto;\r\n    padding: var(--space-xs) var(--space-sm);\r\n  }\r\n  \r\n  .language-options {\r\n    left: -50%;\r\n    right: -50%;\r\n    min-width: 200px;\r\n  }\r\n  \r\n  .language-buttons {\r\n    justify-content: center;\r\n  }\r\n}\r\n\r\n/* =================================\r\n   アクセシビリティ対応\r\n   ================================= */\r\n\r\n@media (prefers-reduced-motion: reduce) {\r\n  .dropdown-icon,\r\n  .language-button,\r\n  .language-flag,\r\n  .dropdown-enter-active,\r\n  .dropdown-leave-active {\r\n    transition: none;\r\n  }\r\n  \r\n  .language-flag:hover {\r\n    transform: none;\r\n  }\r\n}\r\n\r\n/* 高コントラストモード */\r\n@media (prefers-contrast: high) {\r\n  .language-trigger,\r\n  .language-button,\r\n  .language-options {\r\n    border-width: 2px;\r\n    border-color: white;\r\n  }\r\n  \r\n  .language-button--active,\r\n  .language-flag--active {\r\n    border-color: yellow;\r\n    background: rgba(255, 255, 0, 0.2);\r\n  }\r\n}\r\n\r\n/* RTL対応 */\r\n[dir=\"rtl\"] .current-label {\r\n  text-align: right;\r\n}\r\n\r\n[dir=\"rtl\"] .language-options {\r\n  left: auto;\r\n  right: 0;\r\n}\r\n\r\n/* スクリーンリーダー専用 */\r\n.sr-only {\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  border: 0;\r\n}\r\n</style>","<script setup lang=\"ts\">\r\nimport { ref, onMounted, onUnmounted, defineAsyncComponent } from 'vue'\r\nimport { useI18n } from 'vue-i18n'\r\n// import GameCanvas from './components/game/GameCanvas.vue' // 動的インポートに変更\r\nimport transitionAnimations from './components/animations/TransitionAnimations.vue'\r\nimport accessibilitySettings from './components/accessibility/AccessibilitySettings.vue'\r\nimport visualIndicators from './components/accessibility/VisualIndicators.vue'\r\nimport errorBoundary from './components/error/ErrorBoundary.vue'\r\nimport errorNotification from './components/error/ErrorNotification.vue'\r\n// import StatisticsDashboard from './components/statistics/StatisticsDashboard.vue' // 動的インポートに変更\r\nimport { KeyboardManager } from './components/accessibility/KeyboardManager'\r\nimport { ScreenReaderManager } from './components/accessibility/ScreenReaderManager'\r\n// import FeedbackButton from './components/feedback/FeedbackButton.vue' // 動的インポートに変更\r\n\r\n// レイアウトコンポーネント\r\nimport appHeader from './components/layout/AppHeader.vue'\r\nimport navigationActions from './components/layout/NavigationActions.vue'\r\nimport featureShowcase from './components/layout/FeatureShowcase.vue'\r\n\r\n// 国際化コンポーネント\r\nimport languageSwitcher from './components/i18n/LanguageSwitcher.vue'\r\n\r\n// 国際化機能\r\nconst { t } = useI18n()\r\nconst showGame = ref(false)\r\nconst showAccessibilitySettings = ref(false)\r\nconst showStatistics = ref(false)\r\nconst StatisticsDashboard = defineAsyncComponent(() => import('./components/statistics/StatisticsDashboard.vue'))\r\nconst FeedbackButton = defineAsyncComponent(() => import('./components/feedback/FeedbackButton.vue'))\r\nconst GameCanvas = defineAsyncComponent(() => import('./components/game/GameCanvas.vue'))\r\n\r\n// コンポーネント参照\r\nconst navigationRef = ref<InstanceType<typeof navigationActions>>()\r\n\r\nlet keyboardManager: KeyboardManager | null = null\r\nlet screenReaderManager: ScreenReaderManager | null = null\r\n\r\n// フィードバック用のゲーム状態\r\nconst gameState = ref({\r\n  stage: 'youth',\r\n  turn: 1,\r\n  vitality: 100,\r\n  phase: 'setup'\r\n})\r\n\r\nconst startGame = (): void => {\r\n  showGame.value = true\r\n  screenReaderManager?.announceScreenChange('ゲーム画面', 'ゲームが開始されました')\r\n}\r\n\r\nconst startTutorial = (): void => {\r\n  showGame.value = true\r\n  screenReaderManager?.announceScreenChange('チュートリアル', 'チュートリアルを開始します')\r\n  // GameCanvasコンポーネントにチュートリアル開始を通知\r\n  // 次のtickeで実行することで、GameCanvasがマウントされてから実行される\r\n  setTimeout(() => {\r\n    const event = new CustomEvent('startTutorial')\r\n    window.dispatchEvent(event)\r\n  }, 100)\r\n}\r\n\r\nconst backToHome = (): void => {\r\n  showGame.value = false\r\n  screenReaderManager?.announceScreenChange('ホーム画面', 'ホーム画面に戻りました')\r\n}\r\n\r\nconst openStatistics = (): void => {\r\n  showStatistics.value = true\r\n  screenReaderManager?.announceScreenChange('統計ダッシュボード', '統計ダッシュボードを開きました')\r\n}\r\n\r\nconst closeStatistics = (): void => {\r\n  showStatistics.value = false\r\n  screenReaderManager?.announceScreenChange('ホーム画面', 'ホーム画面に戻りました')\r\n}\r\n\r\nconst handleAccessibilitySettingsChanged = (settings: Record<string, boolean | string | number>): void => {\r\n  // アクセシビリティ設定が変更されたときの処理\r\n  console.log('アクセシビリティ設定が更新されました:', settings)\r\n  \r\n  // スクリーンリーダーに通知\r\n  if (Boolean(settings.screenReaderEnabled)) {\r\n    screenReaderManager?.announce('スクリーンリーダー対応が有効になりました', { priority: 'assertive' })\r\n  }\r\n}\r\n\r\nconst handleFeedbackSubmitted = (feedbackId: string, type: string): void => {\r\n  console.log(`フィードバック送信完了: ${type} (${feedbackId})`)\r\n  \r\n  // アナリティクスやログ送信（将来的に実装）\r\n  // trackFeedbackEvent(type, feedbackId)\r\n}\r\n\r\nonMounted(() => {\r\n  // アクセシビリティマネージャーを初期化\r\n  keyboardManager = new KeyboardManager()\r\n  screenReaderManager = new ScreenReaderManager()\r\n  \r\n  // キーボードショートカットを登録\r\n  keyboardManager.registerShortcut({\r\n    key: 'h',\r\n    modifiers: ['alt'],\r\n    description: 'ホーム画面に戻る',\r\n    action: () => {\r\n      if (showGame.value) {\r\n        backToHome()\r\n      }\r\n    }\r\n  })\r\n  \r\n  keyboardManager.registerShortcut({\r\n    key: 'g',\r\n    modifiers: ['alt'],\r\n    description: 'ゲームを開始',\r\n    action: () => {\r\n      if (!showGame.value) {\r\n        startGame()\r\n      }\r\n    }\r\n  })\r\n  \r\n  keyboardManager.registerShortcut({\r\n    key: 't',\r\n    modifiers: ['alt'],\r\n    description: 'チュートリアルを開始',\r\n    action: () => {\r\n      if (!showGame.value) {\r\n        startTutorial()\r\n      }\r\n    }\r\n  })\r\n  \r\n  keyboardManager.registerShortcut({\r\n    key: 'a',\r\n    modifiers: ['alt'],\r\n    description: 'アクセシビリティ設定を開く',\r\n    action: () => {\r\n      showAccessibilitySettings.value = true\r\n      screenReaderManager?.announce('アクセシビリティ設定を開きました', { priority: 'assertive' })\r\n    }\r\n  })\r\n  \r\n  keyboardManager.registerShortcut({\r\n    key: 's',\r\n    modifiers: ['alt'],\r\n    description: '統計ダッシュボードを開く',\r\n    action: () => {\r\n      if (!showGame.value && !showStatistics.value) {\r\n        openStatistics()\r\n      }\r\n    }\r\n  })\r\n  \r\n  // フォーカス可能要素を登録（ホーム画面のボタン）\r\n  setTimeout(() => {\r\n    const gameButton = navigationRef.value?.gameButtonRef\r\n    const tutorialButton = navigationRef.value?.tutorialButtonRef\r\n    const backButton = document.querySelector('.back-to-home-btn') as HTMLElement\r\n    \r\n    if (gameButton !== null && gameButton !== undefined) {\r\n      keyboardManager?.registerFocusableElement(gameButton, {\r\n        priority: 100,\r\n        group: 'main-actions',\r\n        onFocus: () => screenReaderManager?.announce('ゲーム開始ボタンにフォーカス')\r\n      })\r\n    }\r\n    \r\n    if (tutorialButton !== null && tutorialButton !== undefined) {\r\n      keyboardManager?.registerFocusableElement(tutorialButton, {\r\n        priority: 90,\r\n        group: 'main-actions',\r\n        onFocus: () => screenReaderManager?.announce('チュートリアル開始ボタンにフォーカス')\r\n      })\r\n    }\r\n    \r\n    if (backButton !== null && backButton !== undefined) {\r\n      keyboardManager?.registerFocusableElement(backButton, {\r\n        priority: 100,\r\n        group: 'game-actions',\r\n        onFocus: () => screenReaderManager?.announce('ホーム画面に戻るボタンにフォーカス')\r\n      })\r\n    }\r\n  }, 100)\r\n  \r\n  // 初期アナウンス\r\n  screenReaderManager.announceScreenChange('ホーム画面', '人生充実ゲーム へようこそ。Alt+Gでゲーム開始、Alt+Tでチュートリアル、Alt+Sで統計、Alt+Aでアクセシビリティ設定、F1でヘルプを表示できます')\r\n})\r\n\r\nonUnmounted(() => {\r\n  keyboardManager?.destroy()\r\n  screenReaderManager?.destroy()\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div class=\"app-container\" role=\"application\" aria-label=\"人生充実ゲーム\">\r\n    <!-- スキップリンク -->\r\n    <div class=\"skip-links\">\r\n      <a href=\"#main-content\" class=\"skip-link\">メインコンテンツに移動</a>\r\n      <a href=\"#navigation\" class=\"skip-link\">ナビゲーションに移動</a>\r\n    </div>\r\n\r\n    <!-- エラー通知 -->\r\n    <errorNotification />\r\n\r\n    <!-- ゲーム画面 -->\r\n    <transitionAnimations type=\"slide\" direction=\"left\" :duration=\"400\" intensity=\"normal\">\r\n      <div v-if=\"showGame\" class=\"game-view\" id=\"main-content\" role=\"main\" aria-label=\"ゲーム画面\">\r\n        <errorBoundary fallback=\"detailed\" :can-recover=\"true\">\r\n          <GameCanvas />\r\n        </errorBoundary>\r\n        <button\r\n          ref=\"backToHomeButtonRef\"\r\n          @click=\"backToHome\"\r\n          class=\"back-to-home-btn\"\r\n          aria-label=\"ホーム画面に戻る (Alt+H)\"\r\n          :aria-keyshortcuts=\"'Alt+H'\"\r\n        >\r\n          <span class=\"btn-icon\" aria-hidden=\"true\">←</span>\r\n          <span class=\"btn-text\">ホーム</span>\r\n        </button>\r\n      </div>\r\n\r\n      <!-- ホーム画面 -->\r\n      <div v-else class=\"home-view\" id=\"main-content\" role=\"main\" aria-label=\"ホーム画面\">\r\n        <errorBoundary fallback=\"minimal\">\r\n          <div class=\"home-container\">\r\n            <appHeader />\r\n\r\n            <navigationActions \r\n              @start-game=\"startGame\"\r\n              @start-tutorial=\"startTutorial\"\r\n              @open-statistics=\"openStatistics\"\r\n              ref=\"navigationRef\"\r\n            />\r\n\r\n            <section class=\"info-section\">\r\n              <featureShowcase />\r\n            </section>\r\n          </div>\r\n        </errorBoundary>\r\n      </div>\r\n    </transitionAnimations>\r\n\r\n    <!-- フッター -->\r\n    <footer class=\"sr-only\" id=\"footer\" role=\"contentinfo\">\r\n      <p>人生充実ゲーム - アクセシブルなWebゲーム体験</p>\r\n    </footer>\r\n    \r\n    <!-- アクセシビリティ設定モーダル -->\r\n    <accessibilitySettings \r\n      :is-open=\"showAccessibilitySettings\"\r\n      @close=\"showAccessibilitySettings = false\"\r\n      @settings-changed=\"handleAccessibilitySettingsChanged\"\r\n    />\r\n    \r\n    <!-- ビジュアルインジケーター -->\r\n    <visualIndicators :enabled=\"true\" />\r\n    \r\n    <!-- 言語切り替えボタン -->\r\n    <div class=\"language-switcher-container\">\r\n      <languageSwitcher \r\n        mode=\"dropdown\" \r\n        :compact=\"true\"\r\n        :aria-label=\"t('accessibility.options.changeLanguage', 'Change Language')\"\r\n      />\r\n    </div>\r\n\r\n    <!-- アクセシビリティ設定ボタン -->\r\n    <button\r\n      @click=\"showAccessibilitySettings = true\"\r\n      class=\"accessibility-button\"\r\n      :aria-label=\"t('accessibility.keyboardShortcuts.openAccessibility', 'アクセシビリティ設定を開く (Alt+A)')\"\r\n      :aria-keyshortcuts=\"'Alt+A'\"\r\n      :title=\"t('accessibility.title', 'アクセシビリティ設定')\"\r\n    >\r\n      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\">\r\n        <path d=\"M12 2C13.1 2 14 2.9 14 4C14 5.1 13.1 6 12 6C10.9 6 10 5.1 10 4C10 2.9 10.9 2 12 2ZM21 9H15L13.5 7.5C13 7 12.5 6.5 11.9 6.5H12.1C11.5 6.5 11 7 10.5 7.5L7.91 10.09C7.66 10.34 7.66 10.76 7.91 11.01L10.5 13.6C11 14.1 11.5 14.6 12.1 14.6H11.9C12.5 14.6 13 14.1 13.5 13.6L15 12.1H21C21.6 12.1 22 11.7 22 11.1V10C22 9.4 21.6 9 21 9ZM8.5 12.5L12 16L15.5 12.5L12 22L8.5 12.5Z\" fill=\"currentColor\"/>\r\n      </svg>\r\n    </button>\r\n\r\n    <!-- 統計ダッシュボード -->\r\n    <Teleport to=\"body\">\r\n      <div v-if=\"showStatistics\" class=\"modal-overlay\" @click=\"closeStatistics\">\r\n        <div class=\"modal-content\" @click.stop>\r\n          <StatisticsDashboard \r\n            :auto-refresh=\"true\"\r\n            @close=\"closeStatistics\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </Teleport>\r\n\r\n    <!-- フィードバックボタン -->\r\n    <FeedbackButton\r\n      :game-state=\"gameState\"\r\n      :show-stats=\"true\"\r\n      :auto-survey=\"true\"\r\n      @feedback-submitted=\"handleFeedbackSubmitted\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n/* =================================\r\n   アプリケーション基本レイアウト\r\n   ================================= */\r\n\r\n.app-container {\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, var(--bg-primary) 0%, var(--bg-secondary) 100%);\r\n  color: rgba(255, 255, 255, 0.87);\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n/* =================================\r\n   ゲーム画面レイアウト\r\n   ================================= */\r\n\r\n.game-view {\r\n  width: 100vw;\r\n  height: 100vh;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.back-to-home-btn {\r\n  position: absolute;\r\n  top: var(--space-md);\r\n  left: var(--space-md);\r\n  z-index: var(--z-fixed);\r\n  \r\n  display: flex;\r\n  align-items: center;\r\n  gap: var(--space-xs);\r\n  \r\n  background: rgba(239, 68, 68, 0.9);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  padding: var(--space-sm) var(--space-md);\r\n  \r\n  font-family: Inter, system-ui, sans-serif;\r\n  font-size: var(--text-sm);\r\n  font-weight: 600;\r\n  \r\n  backdrop-filter: blur(8px);\r\n  box-shadow: var(--shadow-card);\r\n  \r\n  transition: all var(--transition-fast);\r\n  cursor: pointer;\r\n}\r\n\r\n.back-to-home-btn:hover {\r\n  background: rgba(220, 38, 38, 0.95);\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 8px 25px rgba(239, 68, 68, 0.3);\r\n}\r\n\r\n.back-to-home-btn:active {\r\n  transform: translateY(0);\r\n}\r\n\r\n.btn-icon {\r\n  font-size: var(--text-lg);\r\n  line-height: 1;\r\n}\r\n\r\n.btn-text {\r\n  font-weight: 600;\r\n}\r\n\r\n/* モバイル対応 */\r\n@media (max-width: 640px) {\r\n  .btn-text {\r\n    display: none;\r\n  }\r\n  \r\n  .back-to-home-btn {\r\n    width: var(--touch-target-comfortable);\r\n    height: var(--touch-target-comfortable);\r\n    padding: var(--space-xs);\r\n    justify-content: center;\r\n    border-radius: 50%;\r\n  }\r\n  \r\n  .game-view {\r\n    /* モバイルでのゲームビューを最適化 */\r\n    height: 100vh;\r\n    height: 100dvh; /* Dynamic viewport height for mobile */\r\n    overflow: hidden;\r\n  }\r\n}\r\n\r\n/* タブレット縦持ち対応 */\r\n@media (max-width: 768px) and (orientation: portrait) {\r\n  .game-view {\r\n    height: 100vh;\r\n    height: 100dvh;\r\n  }\r\n  \r\n  .back-to-home-btn {\r\n    top: max(var(--space-md), env(safe-area-inset-top, 0px));\r\n    left: max(var(--space-md), env(safe-area-inset-left, 0px));\r\n  }\r\n}\r\n\r\n/* ランドスケープモード（横持ち）対応 */\r\n@media (max-height: 600px) and (orientation: landscape) {\r\n  .back-to-home-btn {\r\n    top: var(--space-sm);\r\n    left: var(--space-sm);\r\n    width: var(--touch-target-min);\r\n    height: var(--touch-target-min);\r\n  }\r\n  \r\n  .game-view {\r\n    height: 100vh;\r\n    height: 100dvh;\r\n  }\r\n}\r\n\r\n/* =================================\r\n   ホーム画面レイアウト\r\n   ================================= */\r\n\r\n.home-view {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: var(--space-md);\r\n  min-height: 100vh;\r\n}\r\n\r\n.home-container {\r\n  width: 100%;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: var(--space-3xl);\r\n}\r\n\r\n/* ヒーローセクションのスタイルは AppHeader.vue に移動 */\r\n\r\n/* アクションボタンのスタイルは NavigationActions.vue に移動 */\r\n\r\n/* 情報セクション・カード・機能リストのスタイルは FeatureShowcase.vue に移動 */\r\n\r\n/* =================================\r\n   外部リンク\r\n   ================================= */\r\n\r\n.external-link {\r\n  margin-top: var(--space-lg);\r\n  padding-top: var(--space-md);\r\n  border-top: 1px solid rgba(129, 140, 248, 0.2);\r\n}\r\n\r\n.link-primary {\r\n  color: rgba(129, 140, 248, 1);\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n  transition: color var(--transition-fast);\r\n}\r\n\r\n.link-primary:hover {\r\n  color: rgba(99, 102, 241, 1);\r\n  text-decoration: underline;\r\n}\r\n\r\n/* =================================\r\n   フッターセクション\r\n   ================================= */\r\n\r\n.footer-section {\r\n  text-align: center;\r\n  padding-top: var(--space-xl);\r\n  border-top: 1px solid rgba(129, 140, 248, 0.1);\r\n}\r\n\r\n.footer-nav {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: var(--space-sm);\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.footer-link {\r\n  color: rgba(156, 163, 175, 1);\r\n  text-decoration: none;\r\n  font-size: var(--text-sm);\r\n  transition: color var(--transition-fast);\r\n}\r\n\r\n.footer-link:hover {\r\n  color: rgba(129, 140, 248, 1);\r\n}\r\n\r\n.footer-separator {\r\n  color: rgba(156, 163, 175, 0.6);\r\n  font-size: var(--text-sm);\r\n}\r\n\r\n/* =================================\r\n   アクセシビリティ対応\r\n   ================================= */\r\n\r\n/* フォーカス表示 */\r\n.back-to-home-btn:focus,\r\n.primary-action-btn:focus,\r\n.secondary-action-btn:focus,\r\n.footer-link:focus,\r\n.link-primary:focus {\r\n  outline: 2px solid rgba(129, 140, 248, 0.8);\r\n  outline-offset: 2px;\r\n}\r\n\r\n/* モーション削減設定 */\r\n@media (prefers-reduced-motion: reduce) {\r\n  .hero-title,\r\n  .info-card,\r\n  .back-to-home-btn,\r\n  .primary-action-btn,\r\n  .secondary-action-btn {\r\n    transition: none;\r\n  }\r\n  \r\n  .info-card:hover,\r\n  .primary-action-btn:hover,\r\n  .secondary-action-btn:hover {\r\n    transform: none;\r\n  }\r\n}\r\n\r\n/* ハイコントラスト対応 */\r\n@media (prefers-contrast: high) {\r\n  .info-card {\r\n    border-color: rgba(129, 140, 248, 0.6);\r\n    background: rgba(255, 255, 255, 0.1);\r\n  }\r\n  \r\n  .primary-action-btn,\r\n  .secondary-action-btn {\r\n    border: 2px solid white;\r\n  }\r\n}\r\n\r\n/* =================================\r\n   レスポンシブ詳細調整\r\n   ================================= */\r\n\r\n/* タブレット */\r\n@media (max-width: 1024px) {\r\n  .home-container {\r\n    max-width: 768px;\r\n    gap: var(--space-2xl);\r\n  }\r\n  \r\n  .hero-section {\r\n    padding: var(--space-lg) 0;\r\n  }\r\n  \r\n  .info-grid {\r\n    grid-template-columns: 1fr;\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n  }\r\n}\r\n\r\n/* スマートフォン */\r\n@media (max-width: 640px) {\r\n  .home-view {\r\n    padding: var(--space-sm);\r\n  }\r\n  \r\n  .home-container {\r\n    gap: var(--space-xl);\r\n  }\r\n  \r\n  .info-card {\r\n    padding: var(--space-lg);\r\n  }\r\n  \r\n  .card-title {\r\n    font-size: var(--text-xl);\r\n  }\r\n  \r\n  .feature-title,\r\n  .roadmap-title {\r\n    font-size: var(--text-base);\r\n  }\r\n}\r\n\r\n/* 極小画面 */\r\n@media (max-width: 375px) {\r\n  .home-view {\r\n    padding: var(--space-xs);\r\n  }\r\n  \r\n  .info-card {\r\n    padding: var(--space-md);\r\n  }\r\n  \r\n  .hero-title {\r\n    font-size: 2rem;\r\n    line-height: 1.2;\r\n  }\r\n  \r\n  .hero-subtitle {\r\n    font-size: var(--text-base);\r\n    line-height: 1.5;\r\n  }\r\n  \r\n  .primary-action-btn,\r\n  .secondary-action-btn {\r\n    min-width: 160px;\r\n    padding: var(--space-sm) var(--space-lg);\r\n    font-size: var(--text-base);\r\n  }\r\n}\r\n\r\n/* 大画面対応 */\r\n@media (min-width: 1536px) {\r\n  .home-container {\r\n    max-width: 1400px;\r\n  }\r\n  \r\n  .info-grid {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    gap: var(--space-2xl);\r\n  }\r\n}\r\n\r\n/* =================================\r\n   アクセシビリティ専用スタイル\r\n   ================================= */\r\n\r\n/* スクリーンリーダー専用 */\r\n.sr-only {\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  border: 0;\r\n}\r\n\r\n/* スキップリンク */\r\n.skip-links {\r\n  position: absolute;\r\n  top: -40px;\r\n  left: 6px;\r\n  z-index: var(--z-tooltip);\r\n}\r\n\r\n.skip-link {\r\n  position: absolute;\r\n  left: -10000px;\r\n  top: auto;\r\n  width: 1px;\r\n  height: 1px;\r\n  overflow: hidden;\r\n  background: var(--primary-dark);\r\n  color: white;\r\n  padding: var(--space-sm) var(--space-md);\r\n  text-decoration: none;\r\n  border-radius: 4px;\r\n  font-weight: 600;\r\n  border: 2px solid var(--primary-light);\r\n}\r\n\r\n.skip-link:focus {\r\n  position: static;\r\n  width: auto;\r\n  height: auto;\r\n  left: auto;\r\n  top: auto;\r\n  overflow: visible;\r\n}\r\n\r\n/* キーボードナビゲーション表示 */\r\n.keyboard-navigation *:focus {\r\n  outline: 3px solid var(--primary-light) !important;\r\n  outline-offset: 2px !important;\r\n  border-radius: 4px;\r\n}\r\n\r\n/* 高コントラストモード対応 */\r\n@media (prefers-contrast: high) {\r\n  .skip-link {\r\n    background: #000;\r\n    border: 3px solid #fff;\r\n  }\r\n  \r\n  .skip-link:focus {\r\n    background: #fff;\r\n    color: #000;\r\n    border-color: #000;\r\n  }\r\n  \r\n  .keyboard-navigation *:focus {\r\n    outline-color: #000 !important;\r\n    outline-width: 4px !important;\r\n  }\r\n}\r\n\r\n/* フォーカス表示の改善 */\r\n@media (prefers-reduced-motion: no-preference) {\r\n  .keyboard-navigation *:focus {\r\n    transition: outline-color var(--transition-fast);\r\n  }\r\n}\r\n\r\n/* =================================\r\n   言語切り替えコンテナ\r\n   ================================= */\r\n\r\n.language-switcher-container {\r\n  position: fixed;\r\n  top: var(--space-lg);\r\n  right: var(--space-lg);\r\n  z-index: var(--z-fixed);\r\n}\r\n\r\n@media (max-width: 640px) {\r\n  .language-switcher-container {\r\n    top: var(--space-md);\r\n    right: var(--space-md);\r\n  }\r\n}\r\n\r\n/* =================================\r\n   アクセシビリティボタン\r\n   ================================= */\r\n\r\n.accessibility-button {\r\n  position: fixed;\r\n  bottom: var(--space-lg);\r\n  right: var(--space-lg);\r\n  z-index: var(--z-fixed);\r\n  \r\n  width: var(--touch-target-comfortable);\r\n  height: var(--touch-target-comfortable);\r\n  \r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  \r\n  background: rgba(129, 140, 248, 0.9);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 50%;\r\n  \r\n  box-shadow: var(--shadow-card);\r\n  backdrop-filter: blur(8px);\r\n  \r\n  cursor: pointer;\r\n  transition: all var(--transition-normal);\r\n}\r\n\r\n.accessibility-button:hover {\r\n  background: rgba(99, 102, 241, 0.95);\r\n  transform: translateY(-4px) scale(1.1);\r\n  box-shadow: 0 12px 40px rgba(129, 140, 248, 0.4);\r\n}\r\n\r\n.accessibility-button:active {\r\n  transform: translateY(-2px) scale(1.05);\r\n}\r\n\r\n.accessibility-button:focus {\r\n  outline: 3px solid white;\r\n  outline-offset: 3px;\r\n}\r\n\r\n.accessibility-button svg {\r\n  width: 24px;\r\n  height: 24px;\r\n}\r\n\r\n/* モバイル対応 */\r\n@media (max-width: 640px) {\r\n  .accessibility-button {\r\n    bottom: var(--space-md);\r\n    right: var(--space-md);\r\n    width: var(--touch-target-min);\r\n    height: var(--touch-target-min);\r\n  }\r\n}\r\n\r\n/* ハイコントラストモード専用スタイル */\r\n.high-contrast {\r\n  /* 背景とテキストのコントラスト強化 */\r\n  --bg-primary: #000000;\r\n  --bg-secondary: #0a0a0a;\r\n  --bg-card: rgba(255, 255, 255, 0.15);\r\n}\r\n\r\n.high-contrast .primary-action-btn,\r\n.high-contrast .secondary-action-btn {\r\n  border: 3px solid white;\r\n}\r\n\r\n.high-contrast .info-card {\r\n  border-width: 2px;\r\n  border-color: white;\r\n  background: rgba(0, 0, 0, 0.9);\r\n}\r\n\r\n.high-contrast .card-title {\r\n  color: #FFD43B;\r\n}\r\n\r\n.high-contrast .hero-title {\r\n  background: none;\r\n  -webkit-text-fill-color: white;\r\n  text-shadow: 2px 2px 4px black;\r\n}\r\n\r\n/* モーション削減モード */\r\n.reduce-motion * {\r\n  animation-duration: 0.01ms !important;\r\n  animation-iteration-count: 1 !important;\r\n  transition-duration: 0.01ms !important;\r\n}\r\n\r\n/* フォントサイズ調整用CSS変数の適用 */\r\n.app-container {\r\n  font-size: var(--base-font-size, 16px);\r\n}\r\n\r\n/* タッチターゲットサイズの適用 */\r\nbutton,\r\na,\r\ninput,\r\nselect,\r\ntextarea,\r\n[role=\"button\"],\r\n[tabindex]:not([tabindex=\"-1\"]) {\r\n  min-width: var(--touch-target-size, 44px);\r\n  min-height: var(--touch-target-size, 44px);\r\n}\r\n\r\n/* アニメーション速度の調整 */\r\n@property --animation-speed-multiplier {\r\n  syntax: '<number>';\r\n  initial-value: 1;\r\n  inherits: true;\r\n}\r\n\r\n.game-card,\r\n.drop-zone,\r\n.info-card,\r\n.primary-action-btn,\r\n.secondary-action-btn {\r\n  transition-duration: calc(var(--transition-normal) / var(--animation-speed-multiplier, 1));\r\n}\r\n\r\n/* =================================\r\n   統計ダッシュボードモーダル\r\n   ================================= */\r\n\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n  padding: var(--space-md);\r\n  backdrop-filter: blur(4px);\r\n}\r\n\r\n.modal-content {\r\n  width: 100%;\r\n  height: 100%;\r\n  max-width: 1400px;\r\n  max-height: 900px;\r\n  background: var(--bg-primary);\r\n  border-radius: 16px;\r\n  overflow: hidden;\r\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\r\n  border: 1px solid rgba(129, 140, 248, 0.2);\r\n}\r\n\r\n@media (max-width: 640px) {\r\n  .modal-overlay {\r\n    padding: var(--space-xs);\r\n  }\r\n  \r\n  .modal-content {\r\n    border-radius: 12px;\r\n  }\r\n}\r\n</style>","/**\r\n * セキュリティ拡張機能\r\n * 監視、検知、防護システムの追加実装\r\n */\r\n\r\nimport { generateSecureRandomString, RateLimiter, sanitizeInput } from './security'\r\n\r\n/**\r\n * セキュリティ監視システム\r\n * 不審な活動を検出・記録\r\n */\r\nexport class SecurityMonitor {\r\n  private static instance: SecurityMonitor\r\n  private suspiciousActivities: SuspiciousActivity[] = []\r\n  private rateLimiters = new Map<string, RateLimiter>()\r\n  private securityMetrics = {\r\n    totalThreatsBlocked: 0,\r\n    totalInputValidations: 0,\r\n    totalRateLimitViolations: 0,\r\n    sessionStartTime: Date.now()\r\n  }\r\n  \r\n  static getInstance(): SecurityMonitor {\r\n    if (!SecurityMonitor.instance) {\r\n      SecurityMonitor.instance = new SecurityMonitor()\r\n    }\r\n    return SecurityMonitor.instance\r\n  }\r\n  \r\n  /**\r\n   * セキュリティメトリクスを取得\r\n   */\r\n  getSecurityMetrics() {\r\n    return {\r\n      ...this.securityMetrics,\r\n      uptime: Date.now() - this.securityMetrics.sessionStartTime,\r\n      currentThreats: this.suspiciousActivities.filter(a => \r\n        Date.now() - a.timestamp.getTime() < 60000 // 直近1分間の脅威\r\n      ).length\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * レートリミッターのクリーンアップ\r\n   */\r\n  cleanupRateLimiters(): void {\r\n    for (const limiter of this.rateLimiters.values()) {\r\n      limiter.cleanup()\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 不審な活動を記録 - 強化版\r\n   */\r\n  logSuspiciousActivity(activity: Omit<SuspiciousActivity, 'timestamp' | 'id'>): void {\r\n    const suspiciousActivity: SuspiciousActivity = {\r\n      ...activity,\r\n      id: generateSecureRandomString(16),\r\n      timestamp: new Date()\r\n    }\r\n    \r\n    this.suspiciousActivities.push(suspiciousActivity)\r\n    this.securityMetrics.totalThreatsBlocked++\r\n    \r\n    // 最大1000件まで保持\r\n    if (this.suspiciousActivities.length > 1000) {\r\n      this.suspiciousActivities = this.suspiciousActivities.slice(-1000)\r\n    }\r\n    \r\n    // アクティビティのパターン分析\r\n    const recentActivities = this.getRecentActivitiesByType(activity.type, 60000) // 1分間\r\n    if (recentActivities.length >= 5) {\r\n      // 短時間で同じタイプの活動が頻発している\r\n      suspiciousActivity.severity = 'high'\r\n      suspiciousActivity.description += ' (攻撃パターン検出)'\r\n    }\r\n    \r\n    // 重要度が高い場合は即座に警告\r\n    if (suspiciousActivity.severity === 'high' || suspiciousActivity.severity === 'critical') {\r\n      console.warn(`🚨 セキュリティ警告 [${suspiciousActivity.severity.toUpperCase()}]: ${suspiciousActivity.description}`)\r\n      \r\n      if (suspiciousActivity.severity === 'critical') {\r\n        // 緊急時の処理\r\n        this.handleCriticalThreat(suspiciousActivity)\r\n      }\r\n    }\r\n    \r\n    // ローカルストレージにも保存（非同期）\r\n    this.persistActivityToStorage(suspiciousActivity)\r\n  }\r\n  \r\n  /**\r\n   * 最近の特定タイプのアクティビティを取得\r\n   */\r\n  private getRecentActivitiesByType(type: string, timeWindowMs: number): SuspiciousActivity[] {\r\n    const cutoff = Date.now() - timeWindowMs\r\n    return this.suspiciousActivities.filter(activity => \r\n      activity.type === type && activity.timestamp.getTime() > cutoff\r\n    )\r\n  }\r\n  \r\n  /**\r\n   * アティビティをストレージに永続化\r\n   */\r\n  private persistActivityToStorage(activity: SuspiciousActivity): void {\r\n    try {\r\n      setTimeout(() => {\r\n        const existingLogs = JSON.parse(localStorage.getItem('security_incidents') || '[]')\r\n        existingLogs.push({\r\n          ...activity,\r\n          timestamp: activity.timestamp.toISOString()\r\n        })\r\n        // 最新500件のみ保持\r\n        const trimmedLogs = existingLogs.slice(-500)\r\n        localStorage.setItem('security_incidents', JSON.stringify(trimmedLogs))\r\n      }, 0)\r\n    } catch (error) {\r\n      console.error('セキュリティログの永続化に失敗:', error)\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * レート制限を確認 - 強化版\r\n   */\r\n  checkRateLimit(key: string, maxAttempts: number, windowMs: number, blockDurationMs = 60000): boolean {\r\n    if (!this.rateLimiters.has(key)) {\r\n      this.rateLimiters.set(key, new RateLimiter())\r\n    }\r\n    \r\n    const limiter = this.rateLimiters.get(key)!\r\n    const allowed = limiter.isAllowed(key, maxAttempts, windowMs, blockDurationMs)\r\n    \r\n    if (!allowed) {\r\n      this.securityMetrics.totalRateLimitViolations++\r\n      \r\n      const remainingAttempts = limiter.getRemainingAttempts(key, maxAttempts, windowMs)\r\n      const nextAttemptTime = limiter.getNextAttemptTime(key, windowMs)\r\n      \r\n      this.logSuspiciousActivity({\r\n        type: 'rate_limit_exceeded',\r\n        description: `レート制限を超過: ${key}`,\r\n        severity: remainingAttempts === 0 ? 'high' : 'medium',\r\n        source: key,\r\n        metadata: {\r\n          maxAttempts,\r\n          windowMs,\r\n          blockDurationMs,\r\n          remainingAttempts,\r\n          nextAttemptTime\r\n        }\r\n      })\r\n    }\r\n    \r\n    return allowed\r\n  }\r\n  \r\n  /**\r\n   * 不審な活動の履歴を取得\r\n   */\r\n  getSuspiciousActivities(limit = 100): SuspiciousActivity[] {\r\n    return this.suspiciousActivities\r\n      .slice(-limit)\r\n      .sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime())\r\n  }\r\n  \r\n  /**\r\n   * セキュリティレポートを生成 - 強化版\r\n   */\r\n  generateSecurityReport(): SecurityReport {\r\n    const activities = this.getSuspiciousActivities()\r\n    const typeCount: Record<string, number> = {}\r\n    const severityCount: Record<string, number> = {}\r\n    const hourlyCount: Record<string, number> = {}\r\n    \r\n    activities.forEach(activity => {\r\n      typeCount[activity.type] = (typeCount[activity.type] || 0) + 1\r\n      severityCount[activity.severity] = (severityCount[activity.severity] || 0) + 1\r\n      \r\n      // 1時間単位の統計\r\n      const hour = new Date(activity.timestamp).getHours()\r\n      hourlyCount[hour] = (hourlyCount[hour] || 0) + 1\r\n    })\r\n    \r\n    const metrics = this.getSecurityMetrics()\r\n    \r\n    return {\r\n      totalActivities: activities.length,\r\n      typeBreakdown: typeCount,\r\n      severityBreakdown: severityCount,\r\n      hourlyBreakdown: hourlyCount,\r\n      recentActivities: activities.slice(0, 10),\r\n      generateTime: new Date(),\r\n      metrics,\r\n      recommendations: this.generateSecurityRecommendations(typeCount, severityCount)\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * セキュリティ推奨事項を生成\r\n   */\r\n  private generateSecurityRecommendations(\r\n    typeCount: Record<string, number>,\r\n    severityCount: Record<string, number>\r\n  ): string[] {\r\n    const recommendations: string[] = []\r\n    \r\n    // 高頻度の脅威タイプに基づく推奨\r\n    if (typeCount['rate_limit_exceeded'] > 10) {\r\n      recommendations.push('レート制限の強化を検討してください')\r\n    }\r\n    \r\n    if (typeCount['invalid_input'] > 5) {\r\n      recommendations.push('入力検証の強化を検討してください')\r\n    }\r\n    \r\n    if (typeCount['csp_violation'] > 0) {\r\n      recommendations.push('Content Security Policyの見直しを検討してください')\r\n    }\r\n    \r\n    if (severityCount['critical'] > 0) {\r\n      recommendations.push('クリティカルな脅威が検出されました。系統管理者に連絡してください')\r\n    }\r\n    \r\n    if (recommendations.length === 0) {\r\n      recommendations.push('セキュリティ状態は良好です')\r\n    }\r\n    \r\n    return recommendations\r\n  }\r\n  \r\n  /**\r\n   * クリティカルな脅威への対応\r\n   */\r\n  private handleCriticalThreat(activity: SuspiciousActivity): void {\r\n    // セッションクリア\r\n    try {\r\n      localStorage.clear()\r\n      sessionStorage.clear()\r\n    } catch (error) {\r\n      console.error('緊急時のストレージクリアに失敗:', error)\r\n    }\r\n    \r\n    // 追加の防護措置をここに実装\r\n    console.error('🚨 CRITICAL SECURITY THREAT DETECTED 🚨')\r\n    console.error('Activity:', activity)\r\n    console.error('All storage has been cleared as a security measure.')\r\n    \r\n    // 可能であればページをリロード（極端な対策）\r\n    if (typeof window !== 'undefined') {\r\n      setTimeout(() => {\r\n        window.location.reload()\r\n      }, 1000)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 入力値の深度検証 - 強化版\r\n */\r\nexport function validateInputDepth(input: any, maxDepth = 10): boolean {\r\n  function getDepth(obj: any, currentDepth = 0): number {\r\n    if (currentDepth > maxDepth) return currentDepth\r\n    if (obj === null || typeof obj !== 'object') return currentDepth\r\n    \r\n    // 循環参照の検知\r\n    if (visitedObjects.has(obj)) {\r\n      SecurityMonitor.getInstance().logSuspiciousActivity({\r\n        type: 'circular_reference',\r\n        description: '循環参照を持つオブジェクトが検出されました',\r\n        severity: 'medium',\r\n        source: 'input_validation',\r\n        metadata: { currentDepth }\r\n      })\r\n      return maxDepth + 1 // 制限を超えたことを示す\r\n    }\r\n    \r\n    visitedObjects.add(obj)\r\n    \r\n    try {\r\n      if (Array.isArray(obj)) {\r\n        // 配列のサイズチェック\r\n        if (obj.length > 10000) {\r\n          SecurityMonitor.getInstance().logSuspiciousActivity({\r\n            type: 'oversized_array',\r\n            description: `異常に大きな配列: ${obj.length}個の要素`,\r\n            severity: 'high',\r\n            source: 'input_validation',\r\n            metadata: { arrayLength: obj.length, currentDepth }\r\n          })\r\n          return maxDepth + 1\r\n        }\r\n        \r\n        return Math.max(currentDepth, ...obj.map(item => getDepth(item, currentDepth + 1)))\r\n      }\r\n      \r\n      // オブジェクトのプロパティ数チェック\r\n      const keys = Object.keys(obj)\r\n      if (keys.length > 1000) {\r\n        SecurityMonitor.getInstance().logSuspiciousActivity({\r\n          type: 'oversized_object',\r\n          description: `異常に多くのプロパティ: ${keys.length}個`,\r\n          severity: 'high',\r\n          source: 'input_validation',\r\n          metadata: { propertyCount: keys.length, currentDepth }\r\n        })\r\n        return maxDepth + 1\r\n      }\r\n      \r\n      return Math.max(currentDepth, ...Object.values(obj).map(value => getDepth(value, currentDepth + 1)))\r\n    } finally {\r\n      visitedObjects.delete(obj)\r\n    }\r\n  }\r\n  \r\n  const visitedObjects = new Set()\r\n  return getDepth(input) <= maxDepth\r\n}\r\n\r\n/**\r\n * ユーザー入力の総合的な検証\r\n */\r\nexport function validateUserInput(\r\n  input: unknown,\r\n  options: {\r\n    maxLength?: number\r\n    allowedTypes?: string[]\r\n    sanitize?: boolean\r\n    maxDepth?: number\r\n    checkPatterns?: RegExp[]\r\n  } = {}\r\n): { isValid: boolean; sanitizedInput?: string; errors: string[] } {\r\n  const {\r\n    maxLength = 1000,\r\n    allowedTypes = ['string', 'number', 'boolean'],\r\n    sanitize = true,\r\n    maxDepth = 10,\r\n    checkPatterns = []\r\n  } = options\r\n  \r\n  const errors: string[] = []\r\n  let sanitizedInput: string | undefined\r\n  \r\n  // 型チェック\r\n  const inputType = typeof input\r\n  if (!allowedTypes.includes(inputType)) {\r\n    errors.push(`無効な型: ${inputType}`)\r\n    return { isValid: false, errors }\r\n  }\r\n  \r\n  // null/undefinedチェック\r\n  if (input === null || input === undefined) {\r\n    if (!allowedTypes.includes('null')) {\r\n      errors.push('nullまたはundefinedは許可されていません')\r\n      return { isValid: false, errors }\r\n    }\r\n  }\r\n  \r\n  // 文字列の場合の特別な処理\r\n  if (inputType === 'string') {\r\n    const stringInput = input as string\r\n    \r\n    // 長さチェック\r\n    if (stringInput.length > maxLength) {\r\n      errors.push(`文字列が長すぎます: ${stringInput.length}/${maxLength}`)\r\n    }\r\n    \r\n    // パターンチェック\r\n    for (const pattern of checkPatterns) {\r\n      if (!pattern.test(stringInput)) {\r\n        errors.push(`パターンマッチング失敗: ${pattern.source}`)\r\n      }\r\n    }\r\n    \r\n    // サニタイゼーション\r\n    if (sanitize) {\r\n      try {\r\n        sanitizedInput = sanitizeAdvancedInput(stringInput)\r\n      } catch (error) {\r\n        errors.push(`サニタイゼーションエラー: ${error instanceof Error ? error.message : String(error)}`)\r\n      }\r\n    }\r\n  }\r\n  \r\n  // オブジェクトの深度チェック\r\n  if (input && typeof input === 'object') {\r\n    if (!validateInputDepth(input, maxDepth)) {\r\n      errors.push(`オブジェクトの深度が制限を超えています: ${maxDepth}`)\r\n    }\r\n  }\r\n  \r\n  const isValid = errors.length === 0\r\n  return { isValid, sanitizedInput, errors }\r\n}\r\n\r\n/**\r\n * 高度な入力サニタイゼーション\r\n */\r\nfunction sanitizeAdvancedInput(input: string): string {\r\n  return input\r\n    // コメントアウトの除去\r\n    .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '')\r\n    .replace(/\\/\\/.*$/gm, '')\r\n    // SQLインジェクション対策\r\n    .replace(/['\"`;]/g, '')\r\n    .replace(/\\b(SELECT|INSERT|UPDATE|DELETE|DROP|CREATE|ALTER|EXEC|UNION|SCRIPT)\\b/gi, '')\r\n    // LDAPインジェクション対策\r\n    .replace(/[()&|!=<>]/g, '')\r\n    // NoSQLインジェクション対策\r\n    .replace(/[{}$]/g, '')\r\n    // XPathインジェクション対策\r\n    .replace(/[\\/\\[\\]@]/g, '')\r\n    // コマンドインジェクション対策\r\n    .replace(/[;&|`$\\\\]/g, '')\r\n    // 制御文字と特殊文字の除去\r\n    .replace(/[\\x00-\\x1f\\x7f-\\x9f\\ufeff]/g, '')\r\n    .trim()\r\n}\r\n\r\n/**\r\n * CSP (Content Security Policy) 違反を検出\r\n */\r\nexport function setupCSPMonitoring(): void {\r\n  if (typeof window !== 'undefined') {\r\n    document.addEventListener('securitypolicyviolation', (event: any) => {\r\n      SecurityMonitor.getInstance().logSuspiciousActivity({\r\n        type: 'csp_violation',\r\n        description: `CSP違反: ${event.violatedDirective}`,\r\n        severity: 'high',\r\n        source: event.sourceFile || 'unknown',\r\n        metadata: {\r\n          violatedDirective: event.violatedDirective,\r\n          blockedURI: event.blockedURI,\r\n          lineNumber: event.lineNumber,\r\n          columnNumber: event.columnNumber\r\n        }\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * DOM操作の監視\r\n */\r\nexport function setupDOMMonitoring(): void {\r\n  if (typeof window !== 'undefined' && window.MutationObserver) {\r\n    const observer = new MutationObserver((mutations) => {\r\n      mutations.forEach((mutation) => {\r\n        // 外部スクリプトの動的追加を検出\r\n        if (mutation.type === 'childList') {\r\n          mutation.addedNodes.forEach((node) => {\r\n            if (node.nodeType === Node.ELEMENT_NODE) {\r\n              const element = node as Element\r\n              \r\n              if (element.tagName === 'SCRIPT') {\r\n                const src = element.getAttribute('src')\r\n                if (src && !src.startsWith(window.location.origin)) {\r\n                  SecurityMonitor.getInstance().logSuspiciousActivity({\r\n                    type: 'external_script_injection',\r\n                    description: `外部スクリプトの動的追加を検出: ${src}`,\r\n                    severity: 'critical',\r\n                    source: 'dom_monitor',\r\n                    metadata: { scriptSrc: src }\r\n                  })\r\n                }\r\n              }\r\n            }\r\n          })\r\n        }\r\n      })\r\n    })\r\n    \r\n    observer.observe(document.body, {\r\n      childList: true,\r\n      subtree: true\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * 異常なネットワーク活動の監視\r\n */\r\nexport function setupNetworkMonitoring(): void {\r\n  if (typeof window !== 'undefined') {\r\n    // fetch の監視\r\n    const originalFetch = window.fetch\r\n    window.fetch = function(...args) {\r\n      const url = args[0]\r\n      const options = args[1] || {}\r\n      \r\n      // 外部ドメインへのリクエストを監視\r\n      if (typeof url === 'string' && url.startsWith('http') && !url.startsWith(window.location.origin)) {\r\n        SecurityMonitor.getInstance().logSuspiciousActivity({\r\n          type: 'external_network_request',\r\n          description: `外部ドメインへのリクエスト: ${url}`,\r\n          severity: 'medium',\r\n          source: 'network_monitor',\r\n          metadata: { url, method: options.method || 'GET' }\r\n        })\r\n      }\r\n      \r\n      return originalFetch.apply(this, args)\r\n    }\r\n    \r\n    // XMLHttpRequest の監視\r\n    const originalXHR = window.XMLHttpRequest\r\n    window.XMLHttpRequest = function() {\r\n      const xhr = new originalXHR()\r\n      const originalOpen = xhr.open\r\n      \r\n      xhr.open = function(method: string, url: string | URL, ...args: any[]) {\r\n        if (typeof url === 'string' && url.startsWith('http') && !url.startsWith(window.location.origin)) {\r\n          SecurityMonitor.getInstance().logSuspiciousActivity({\r\n            type: 'external_xhr_request',\r\n            description: `外部ドメインへのXHRリクエスト: ${url}`,\r\n            severity: 'medium',\r\n            source: 'network_monitor',\r\n            metadata: { url, method }\r\n          })\r\n        }\r\n        \r\n        return originalOpen.apply(this, [method, url, ...args])\r\n      }\r\n      \r\n      return xhr\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * ブラウザの開発者ツール検出 - 強化版\r\n */\r\nexport function setupDevToolsDetection(): void {\r\n  if (typeof window !== 'undefined') {\r\n    let devtools = false\r\n    let lastCheck = Date.now()\r\n    \r\n    // 複数の検出手法を併用\r\n    const detectionMethods = {\r\n      // サイズベースの検出\r\n      sizeDetection(): boolean {\r\n        const threshold = 160\r\n        return (window.outerHeight - window.innerHeight > threshold || \r\n                window.outerWidth - window.innerWidth > threshold)\r\n      },\r\n      \r\n      // console.logの監視\r\n      consoleDetection(): boolean {\r\n        const start = performance.now()\r\n        console.log('%c', 'color: transparent')\r\n        const end = performance.now()\r\n        return (end - start) > 100 // DevToolsが開いているとconsole.logが遅くなる\r\n      },\r\n      \r\n      // debuggerステートメントの検出\r\n      debuggerDetection(): boolean {\r\n        const start = performance.now()\r\n        try {\r\n          // debuggerステートメントを動的に実行\r\n          Function('debugger')() // DevToolsが開いていると停止する\r\n        } catch {}\r\n        const end = performance.now()\r\n        return (end - start) > 100\r\n      },\r\n      \r\n      // コンテキストメニュの検出\r\n      contextMenuDetection(): boolean {\r\n        return document.addEventListener ? false : true // 簡易版\r\n      }\r\n    }\r\n    \r\n    setInterval(() => {\r\n      const now = Date.now()\r\n      \r\n      // 選択的に検出手法を実行（パフォーマンスへの影響を減らす）\r\n      const detectionResults = {\r\n        size: detectionMethods.sizeDetection(),\r\n        console: (now - lastCheck) > 5000 ? detectionMethods.consoleDetection() : false,\r\n        debugger: (now - lastCheck) > 10000 ? detectionMethods.debuggerDetection() : false,\r\n        contextMenu: false // コンテキストメニュ検出は省略\r\n      }\r\n      \r\n      const isDetected = Object.values(detectionResults).some(Boolean)\r\n      \r\n      if (isDetected && !devtools) {\r\n        devtools = true\r\n        SecurityMonitor.getInstance().logSuspiciousActivity({\r\n          type: 'devtools_opened',\r\n          description: '開発者ツールが検出されました',\r\n          severity: 'low',\r\n          source: 'devtools_detector',\r\n          metadata: {\r\n            detectionMethods: detectionResults,\r\n            outerHeight: window.outerHeight,\r\n            innerHeight: window.innerHeight,\r\n            outerWidth: window.outerWidth,\r\n            innerWidth: window.innerWidth,\r\n            userAgent: navigator.userAgent,\r\n            timestamp: now\r\n          }\r\n        })\r\n        \r\n        // 開発者ツール検出時の追加処理\r\n        handleDevToolsDetection()\r\n      } else if (!isDetected && devtools) {\r\n        devtools = false\r\n      }\r\n      \r\n      if ((now - lastCheck) > 5000) {\r\n        lastCheck = now\r\n      }\r\n    }, 1000) // チェック間隔を緩やかに\r\n  }\r\n}\r\n\r\n/**\r\n * 開発者ツール検出時の処理\r\n */\r\nfunction handleDevToolsDetection(): void {\r\n  // コンソールに警告メッセージを表示\r\n  console.warn(\r\n    '%c🚨 セキュリティ警告',\r\n    'color: red; font-size: 24px; font-weight: bold;'\r\n  )\r\n  console.warn(\r\n    '%cこのサイトはセキュリティ監視下にあります。\\n開発者ツールの使用は記録されます。',\r\n    'color: orange; font-size: 14px;'\r\n  )\r\n  \r\n  // レート制限を強化\r\n  const monitor = SecurityMonitor.getInstance()\r\n  const userAgent = navigator.userAgent\r\n  \r\n  // 開発者ツール使用者への特別なレート制限\r\n  if (!monitor.checkRateLimit(`devtools_user_${userAgent}`, 10, 60000)) {\r\n    console.warn('⚠️ 開発者ツール使用によるレート制限が発動しました')\r\n  }\r\n}\r\n\r\n/**\r\n * セキュリティ初期化 - 強化版\r\n */\r\nexport function initializeSecurity(): void {\r\n  try {\r\n    // コアセキュリティ機能の初期化\r\n    setupCSPMonitoring()\r\n    setupDOMMonitoring()\r\n    setupNetworkMonitoring()\r\n    setupDevToolsDetection()\r\n    \r\n    // 追加のセキュリティ機能\r\n    setupInputValidationMonitoring()\r\n    setupPerformanceMonitoring()\r\n    setupMemoryLeakDetection()\r\n    \r\n    // セキュリティ状態の初期チェック\r\n    performInitialSecurityCheck()\r\n    \r\n    // 定期的なセキュリティチェックのスケジュール\r\n    scheduleSecurityMaintenance()\r\n    \r\n    console.log('🛡️ セキュリティシステムが初期化されました (強化版)')\r\n  } catch (error) {\r\n    console.error('❌ セキュリティ初期化に失敗しました:', error)\r\n    SecurityMonitor.getInstance().logSuspiciousActivity({\r\n      type: 'security_init_failure',\r\n      description: `セキュリティ初期化エラー: ${error instanceof Error ? error.message : String(error)}`,\r\n      severity: 'critical',\r\n      source: 'security_initialization',\r\n      metadata: { error }\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * 入力検証の監視設定\r\n */\r\nfunction setupInputValidationMonitoring(): void {\r\n  // フォーム入力の監視\r\n  document.addEventListener('input', (event) => {\r\n    const target = event.target as HTMLInputElement\r\n    if (target && target.value) {\r\n      const validation = validateUserInput(target.value, {\r\n        maxLength: 1000,\r\n        sanitize: true,\r\n        checkPatterns: [/^[^<>\"'&{}$]*$/] // 基本的なパターン\r\n      })\r\n      \r\n      if (!validation.isValid) {\r\n        SecurityMonitor.getInstance().logSuspiciousActivity({\r\n          type: 'invalid_input',\r\n          description: `無効な入力が検出されました: ${validation.errors.join(', ')}`,\r\n          severity: 'medium',\r\n          source: 'input_validation_monitor',\r\n          metadata: {\r\n            inputValue: target.value.slice(0, 100), // 最初の100文字のみログ\r\n            errors: validation.errors,\r\n            elementType: target.type,\r\n            elementName: target.name\r\n          }\r\n        })\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * パフォーマンス監視の設定\r\n */\r\nfunction setupPerformanceMonitoring(): void {\r\n  if (typeof window !== 'undefined' && window.performance) {\r\n    // メモリ使用量の監視\r\n    const checkMemoryUsage = () => {\r\n      if ('memory' in performance) {\r\n        const memory = (performance as any).memory\r\n        const usedMB = Math.round(memory.usedJSHeapSize / 1024 / 1024)\r\n        const limitMB = Math.round(memory.jsHeapSizeLimit / 1024 / 1024)\r\n        const usagePercent = (usedMB / limitMB) * 100\r\n        \r\n        if (usagePercent > 80) {\r\n          SecurityMonitor.getInstance().logSuspiciousActivity({\r\n            type: 'high_memory_usage',\r\n            description: `メモリ使用率が高いです: ${usagePercent.toFixed(1)}%`,\r\n            severity: 'medium',\r\n            source: 'performance_monitor',\r\n            metadata: {\r\n              usedMB,\r\n              limitMB,\r\n              usagePercent\r\n            }\r\n          })\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 30秒ごとにメモリ使用量をチェック\r\n    setInterval(checkMemoryUsage, 30000)\r\n  }\r\n}\r\n\r\n/**\r\n * メモリリーク検出の設定\r\n */\r\nfunction setupMemoryLeakDetection(): void {\r\n  const objectCounts = new Map<string, number>()\r\n  \r\n  const checkObjectCounts = () => {\r\n    // グローバルオブジェクトの監視\r\n    const globalKeys = Object.keys(window).length\r\n    const previousCount = objectCounts.get('global') || 0\r\n    \r\n    if (globalKeys > previousCount + 100) {\r\n      SecurityMonitor.getInstance().logSuspiciousActivity({\r\n        type: 'potential_memory_leak',\r\n        description: `グローバルオブジェクトの数が急激に増加: ${globalKeys}`,\r\n        severity: 'medium',\r\n        source: 'memory_leak_detector',\r\n        metadata: {\r\n          currentCount: globalKeys,\r\n          previousCount,\r\n          increase: globalKeys - previousCount\r\n        }\r\n      })\r\n    }\r\n    \r\n    objectCounts.set('global', globalKeys)\r\n  }\r\n  \r\n  // 60秒ごとにオブジェクト数をチェック\r\n  setInterval(checkObjectCounts, 60000)\r\n}\r\n\r\n/**\r\n * 初期セキュリティチェック\r\n */\r\nfunction performInitialSecurityCheck(): void {\r\n  // ブラウザのセキュリティ機能チェック\r\n  const securityFeatures = {\r\n    crypto: !!window.crypto,\r\n    subtle: !!(window.crypto && window.crypto.subtle),\r\n    csp: !!document.querySelector('meta[http-equiv=\"Content-Security-Policy\"]'),\r\n    https: window.location.protocol === 'https:',\r\n    referrerPolicy: !!document.querySelector('meta[name=\"referrer\"]')\r\n  }\r\n  \r\n  const missingFeatures = Object.entries(securityFeatures)\r\n    .filter(([, supported]) => !supported)\r\n    .map(([feature]) => feature)\r\n  \r\n  if (missingFeatures.length > 0) {\r\n    SecurityMonitor.getInstance().logSuspiciousActivity({\r\n      type: 'missing_security_features',\r\n      description: `セキュリティ機能が不十分: ${missingFeatures.join(', ')}`,\r\n      severity: 'medium',\r\n      source: 'initial_security_check',\r\n      metadata: {\r\n        missingFeatures,\r\n        allFeatures: securityFeatures\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * 定期メンテナンスのスケジュール\r\n */\r\nfunction scheduleSecurityMaintenance(): void {\r\n  // 5分ごとにレートリミッターのクリーンアップ\r\n  setInterval(() => {\r\n    SecurityMonitor.getInstance().cleanupRateLimiters()\r\n  }, 5 * 60 * 1000)\r\n  \r\n  // 1時間ごとにセキュリティレポートをコンソールに出力\r\n  setInterval(() => {\r\n    const report = SecurityMonitor.getInstance().generateSecurityReport()\r\n    if (report.totalActivities > 0) {\r\n      console.log('📊 セキュリティレポート:', report)\r\n    }\r\n  }, 60 * 60 * 1000)\r\n  \r\n  // 24時間ごとに古いセキュリティログをクリーンアップ\r\n  setInterval(() => {\r\n    const incidents = JSON.parse(localStorage.getItem('security_incidents') || '[]')\r\n    const oneDayAgo = Date.now() - (24 * 60 * 60 * 1000)\r\n    const recentIncidents = incidents.filter((incident: any) => \r\n      new Date(incident.timestamp).getTime() > oneDayAgo\r\n    )\r\n    localStorage.setItem('security_incidents', JSON.stringify(recentIncidents))\r\n  }, 24 * 60 * 60 * 1000)\r\n}\r\n\r\n/**\r\n * セキュリティヘッダーの確認\r\n */\r\nexport async function validateSecurityHeaders(): Promise<SecurityHeaderReport> {\r\n  const report: SecurityHeaderReport = {\r\n    timestamp: new Date(),\r\n    headers: {},\r\n    recommendations: []\r\n  }\r\n  \r\n  try {\r\n    // 現在のページのレスポンスヘッダーを確認することは直接はできないため\r\n    // 代替手段として、MetaタグやCSPの存在を確認\r\n    \r\n    // CSPメタタグの確認\r\n    const cspMeta = document.querySelector('meta[http-equiv=\"Content-Security-Policy\"]')\r\n    if (cspMeta) {\r\n      report.headers['content-security-policy'] = cspMeta.getAttribute('content') || ''\r\n    } else {\r\n      report.recommendations.push('Content-Security-Policy (CSP) の実装を推奨します')\r\n    }\r\n    \r\n    // その他のセキュリティメタタグの確認\r\n    const referrerPolicy = document.querySelector('meta[name=\"referrer\"]')\r\n    if (!referrerPolicy) {\r\n      report.recommendations.push('Referrer-Policy の設定を推奨します')\r\n    }\r\n    \r\n    // HTTPS の確認\r\n    if (window.location.protocol !== 'https:' && window.location.hostname !== 'localhost') {\r\n      report.recommendations.push('HTTPS の使用を強く推奨します')\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error('セキュリティヘッダーの確認中にエラーが発生:', error)\r\n  }\r\n  \r\n  return report\r\n}\r\n\r\n// 型定義\r\nexport interface SuspiciousActivity {\r\n  id: string\r\n  type: string\r\n  description: string\r\n  severity: 'low' | 'medium' | 'high' | 'critical'\r\n  timestamp: Date\r\n  source: string\r\n  metadata?: Record<string, any>\r\n}\r\n\r\nexport interface SecurityReport {\r\n  totalActivities: number\r\n  typeBreakdown: Record<string, number>\r\n  severityBreakdown: Record<string, number>\r\n  hourlyBreakdown: Record<string, number>\r\n  recentActivities: SuspiciousActivity[]\r\n  generateTime: Date\r\n  metrics: any\r\n  recommendations: string[]\r\n}\r\n\r\nexport interface SecurityHeaderReport {\r\n  timestamp: Date\r\n  headers: Record<string, string>\r\n  recommendations: string[]\r\n}","/**\r\n * XSS・CSRF攻撃防止対策の包括的実装\r\n * Content Security Policy対応とnonce生成機能付き\r\n */\r\n\r\nimport { sanitizeInput } from './security'\r\nimport { SecurityMonitor } from './security-extensions'\r\n\r\n/**\r\n * XSS攻撃防止のための包括的対策\r\n */\r\nexport class XSSProtection {\r\n  private static instance: XSSProtection\r\n  private trustedDomains: string[] = []\r\n  private allowedTags: string[] = ['b', 'i', 'em', 'strong', 'br', 'p']\r\n  private allowedAttributes: string[] = ['class', 'data-*']\r\n\r\n  static getInstance(): XSSProtection {\r\n    if (!XSSProtection.instance) {\r\n      XSSProtection.instance = new XSSProtection()\r\n    }\r\n    return XSSProtection.instance\r\n  }\r\n\r\n  /**\r\n   * 信頼できるドメインを設定\r\n   */\r\n  setTrustedDomains(domains: string[]): void {\r\n    this.trustedDomains = domains.map(domain => domain.toLowerCase())\r\n  }\r\n\r\n  /**\r\n   * 許可するHTMLタグを設定\r\n   */\r\n  setAllowedTags(tags: string[]): void {\r\n    this.allowedTags = tags.map(tag => tag.toLowerCase())\r\n  }\r\n\r\n  /**\r\n   * HTML文字列の厳格なサニタイゼーション\r\n   */\r\n  sanitizeHTML(html: string): string {\r\n    if (typeof html !== 'string') {\r\n      return ''\r\n    }\r\n\r\n    // 基本的なHTMLエンティティエンコード\r\n    let sanitized = html\r\n      .replace(/&/g, '&amp;')\r\n      .replace(/</g, '&lt;')\r\n      .replace(/>/g, '&gt;')\r\n      .replace(/\"/g, '&quot;')\r\n      .replace(/'/g, '&#x27;')\r\n      .replace(/\\//g, '&#x2F;')\r\n\r\n    // 許可されたタグのみ復元（非常に限定的）\r\n    for (const tag of this.allowedTags) {\r\n      const openTagRegex = new RegExp(`&lt;(${tag})&gt;`, 'gi')\r\n      const closeTagRegex = new RegExp(`&lt;\\\\/(${tag})&gt;`, 'gi')\r\n      \r\n      sanitized = sanitized\r\n        .replace(openTagRegex, `<$1>`)\r\n        .replace(closeTagRegex, `</$1>`)\r\n    }\r\n\r\n    return sanitized.slice(0, 10000) // 長さ制限\r\n  }\r\n\r\n  /**\r\n   * JavaScript文字列のエスケープ\r\n   */\r\n  escapeJavaScript(str: string): string {\r\n    if (typeof str !== 'string') {\r\n      return ''\r\n    }\r\n\r\n    return str\r\n      .replace(/\\\\/g, '\\\\\\\\')\r\n      .replace(/'/g, \"\\\\'\")\r\n      .replace(/\"/g, '\\\\\"')\r\n      .replace(/\\n/g, '\\\\n')\r\n      .replace(/\\r/g, '\\\\r')\r\n      .replace(/\\t/g, '\\\\t')\r\n      .replace(/\\x08/g, '\\\\b')\r\n      .replace(/\\f/g, '\\\\f')\r\n      .replace(/\\v/g, '\\\\v')\r\n      .replace(/\\0/g, '\\\\0')\r\n      .replace(/[\\x00-\\x1f\\x7f-\\x9f]/g, (match) => {\r\n        return `\\\\u${  (`0000${  match.charCodeAt(0).toString(16)}`).slice(-4)}`\r\n      })\r\n  }\r\n\r\n  /**\r\n   * URLの安全性検証とサニタイゼーション\r\n   */\r\n  sanitizeURL(url: string): string {\r\n    if (typeof url !== 'string') {\r\n      return ''\r\n    }\r\n\r\n    try {\r\n      const parsedURL = new URL(url)\r\n      \r\n      // 許可されたプロトコルのみ\r\n      const allowedProtocols = ['http:', 'https:', 'mailto:', 'tel:']\r\n      if (!allowedProtocols.includes(parsedURL.protocol)) {\r\n        SecurityMonitor.getInstance().logSuspiciousActivity({\r\n          type: 'blocked_dangerous_protocol',\r\n          description: `危険なプロトコルをブロック: ${parsedURL.protocol}`,\r\n          severity: 'high',\r\n          source: 'xss_protection',\r\n          metadata: { originalUrl: url, protocol: parsedURL.protocol }\r\n        })\r\n        return ''\r\n      }\r\n\r\n      // 信頼できるドメインかチェック\r\n      if (this.trustedDomains.length > 0) {\r\n        const isHostTrusted = this.trustedDomains.some(domain => \r\n          parsedURL.hostname.endsWith(domain)\r\n        )\r\n        \r\n        if (!isHostTrusted && parsedURL.protocol !== 'mailto:' && parsedURL.protocol !== 'tel:') {\r\n          SecurityMonitor.getInstance().logSuspiciousActivity({\r\n            type: 'untrusted_domain',\r\n            description: `信頼されていないドメイン: ${parsedURL.hostname}`,\r\n            severity: 'medium',\r\n            source: 'xss_protection',\r\n            metadata: { originalUrl: url, hostname: parsedURL.hostname }\r\n          })\r\n          return ''\r\n        }\r\n      }\r\n\r\n      return parsedURL.toString()\r\n    } catch (error) {\r\n      SecurityMonitor.getInstance().logSuspiciousActivity({\r\n        type: 'invalid_url',\r\n        description: `無効なURL: ${url}`,\r\n        severity: 'medium',\r\n        source: 'xss_protection',\r\n        metadata: { originalUrl: url, error: error instanceof Error ? error.message : String(error) }\r\n      })\r\n      return ''\r\n    }\r\n  }\r\n\r\n  /**\r\n   * DOM操作時の安全性チェック\r\n   */\r\n  validateDOMOperation(element: Element, operation: string, value?: string): boolean {\r\n    if (!element || !operation) {\r\n      return false\r\n    }\r\n\r\n    // innerHTML操作を制限\r\n    if (operation === 'innerHTML' && value) {\r\n      const sanitizedValue = this.sanitizeHTML(value)\r\n      if (sanitizedValue !== value) {\r\n        SecurityMonitor.getInstance().logSuspiciousActivity({\r\n          type: 'blocked_unsafe_dom',\r\n          description: 'unsafe innerHTML操作をブロック',\r\n          severity: 'high',\r\n          source: 'xss_protection',\r\n          metadata: { \r\n            operation,\r\n            originalValue: value.slice(0, 200),\r\n            sanitizedValue: sanitizedValue.slice(0, 200)\r\n          }\r\n        })\r\n        return false\r\n      }\r\n    }\r\n\r\n    // 危険な属性の設定を制限\r\n    if (operation === 'setAttribute' && value) {\r\n      const [attrName] = (value as string).split('=', 1)\r\n      const dangerousAttributes = ['onload', 'onerror', 'onclick', 'onmouseover', 'style']\r\n      \r\n      if (dangerousAttributes.includes(attrName.toLowerCase())) {\r\n        SecurityMonitor.getInstance().logSuspiciousActivity({\r\n          type: 'blocked_dangerous_attribute',\r\n          description: `危険な属性設定をブロック: ${attrName}`,\r\n          severity: 'high',\r\n          source: 'xss_protection',\r\n          metadata: { operation, attributeName: attrName }\r\n        })\r\n        return false\r\n      }\r\n    }\r\n\r\n    return true\r\n  }\r\n}\r\n\r\n/**\r\n * CSRF攻撃防止のための包括的対策\r\n */\r\nexport class CSRFProtection {\r\n  private static instance: CSRFProtection\r\n  private tokenStore = new Map<string, { token: string; expires: number }>()\r\n  private validOrigins: string[] = []\r\n\r\n  static getInstance(): CSRFProtection {\r\n    if (!CSRFProtection.instance) {\r\n      CSRFProtection.instance = new CSRFProtection()\r\n    }\r\n    return CSRFProtection.instance\r\n  }\r\n\r\n  /**\r\n   * 有効なオリジンを設定\r\n   */\r\n  setValidOrigins(origins: string[]): void {\r\n    this.validOrigins = origins.map(origin => origin.toLowerCase())\r\n  }\r\n\r\n  /**\r\n   * CSRFトークンの生成と管理\r\n   */\r\n  generateTokenForAction(action: string, expiryMinutes = 30): string {\r\n    const token = generateCSRFToken()\r\n    const expires = Date.now() + (expiryMinutes * 60 * 1000)\r\n    \r\n    this.tokenStore.set(action, { token, expires })\r\n    \r\n    // 期限切れトークンをクリーンアップ\r\n    this.cleanupExpiredTokens()\r\n    \r\n    return token\r\n  }\r\n\r\n  /**\r\n   * CSRFトークンの検証\r\n   */\r\n  validateTokenForAction(action: string, providedToken: string): boolean {\r\n    const tokenData = this.tokenStore.get(action)\r\n    \r\n    if (!tokenData) {\r\n      SecurityMonitor.getInstance().logSuspiciousActivity({\r\n        type: 'csrf_token_missing',\r\n        description: `CSRF token not found for action: ${action}`,\r\n        severity: 'high',\r\n        source: 'csrf_protection',\r\n        metadata: { action }\r\n      })\r\n      return false\r\n    }\r\n\r\n    if (Date.now() > tokenData.expires) {\r\n      this.tokenStore.delete(action)\r\n      SecurityMonitor.getInstance().logSuspiciousActivity({\r\n        type: 'csrf_token_expired',\r\n        description: `CSRF token expired for action: ${action}`,\r\n        severity: 'medium',\r\n        source: 'csrf_protection',\r\n        metadata: { action }\r\n      })\r\n      return false\r\n    }\r\n\r\n    const isValid = validateCSRFToken(providedToken, tokenData.token)\r\n    \r\n    if (!isValid) {\r\n      SecurityMonitor.getInstance().logSuspiciousActivity({\r\n        type: 'csrf_token_invalid',\r\n        description: `Invalid CSRF token for action: ${action}`,\r\n        severity: 'high',\r\n        source: 'csrf_protection',\r\n        metadata: { action }\r\n      })\r\n    }\r\n\r\n    // 使用後はトークンを削除（ワンタイムトークン）\r\n    if (isValid) {\r\n      this.tokenStore.delete(action)\r\n    }\r\n\r\n    return isValid\r\n  }\r\n\r\n  /**\r\n   * リクエストのオリジン検証\r\n   */\r\n  validateOrigin(origin: string): boolean {\r\n    if (!origin) {\r\n      return false\r\n    }\r\n\r\n    const normalizedOrigin = origin.toLowerCase()\r\n    \r\n    if (this.validOrigins.length === 0) {\r\n      // 設定されていない場合は現在のオリジンを使用\r\n      return normalizedOrigin === window.location.origin.toLowerCase()\r\n    }\r\n\r\n    const isValid = this.validOrigins.includes(normalizedOrigin)\r\n    \r\n    if (!isValid) {\r\n      SecurityMonitor.getInstance().logSuspiciousActivity({\r\n        type: 'csrf_invalid_origin',\r\n        description: `Invalid origin: ${origin}`,\r\n        severity: 'high',\r\n        source: 'csrf_protection',\r\n        metadata: { \r\n          providedOrigin: origin,\r\n          validOrigins: this.validOrigins \r\n        }\r\n      })\r\n    }\r\n\r\n    return isValid\r\n  }\r\n\r\n  /**\r\n   * Refererヘッダーの検証\r\n   */\r\n  validateReferer(referer: string): boolean {\r\n    if (!referer) {\r\n      return false // Refererが存在しない場合は拒否\r\n    }\r\n\r\n    try {\r\n      const refererURL = new URL(referer)\r\n      const currentOrigin = window.location.origin.toLowerCase()\r\n      \r\n      return refererURL.origin.toLowerCase() === currentOrigin\r\n    } catch {\r\n      SecurityMonitor.getInstance().logSuspiciousActivity({\r\n        type: 'csrf_invalid_referer',\r\n        description: `Invalid referer: ${referer}`,\r\n        severity: 'medium',\r\n        source: 'csrf_protection',\r\n        metadata: { referer }\r\n      })\r\n      return false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 期限切れトークンのクリーンアップ\r\n   */\r\n  private cleanupExpiredTokens(): void {\r\n    const now = Date.now()\r\n    \r\n    for (const [action, tokenData] of this.tokenStore.entries()) {\r\n      if (now > tokenData.expires) {\r\n        this.tokenStore.delete(action)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * すべてのトークンをクリア\r\n   */\r\n  clearAllTokens(): void {\r\n    this.tokenStore.clear()\r\n  }\r\n}\r\n\r\n/**\r\n * Content Security Policy（CSP）の動的管理\r\n */\r\nexport class CSPManager {\r\n  private static instance: CSPManager\r\n  private nonces = new Set<string>()\r\n  private cspDirectives = new Map<string, string[]>()\r\n\r\n  static getInstance(): CSPManager {\r\n    if (!CSPManager.instance) {\r\n      CSPManager.instance = new CSPManager()\r\n    }\r\n    return CSPManager.instance\r\n  }\r\n\r\n  /**\r\n   * スクリプト用のnonceを生成\r\n   */\r\n  generateScriptNonce(): string {\r\n    const nonce = generateCSRFToken() // 32文字のランダム文字列\r\n    this.nonces.add(nonce)\r\n    \r\n    // 1時間後に自動削除\r\n    setTimeout(() => {\r\n      this.nonces.delete(nonce)\r\n    }, 60 * 60 * 1000)\r\n    \r\n    return nonce\r\n  }\r\n\r\n  /**\r\n   * nonceの有効性を検証\r\n   */\r\n  validateNonce(nonce: string): boolean {\r\n    return this.nonces.has(nonce)\r\n  }\r\n\r\n  /**\r\n   * CSPディレクティブを設定\r\n   */\r\n  setDirective(directive: string, values: string[]): void {\r\n    this.cspDirectives.set(directive, [...values])\r\n  }\r\n\r\n  /**\r\n   * CSPディレクティブに値を追加\r\n   */\r\n  addToDirective(directive: string, value: string): void {\r\n    const existing = this.cspDirectives.get(directive) || []\r\n    if (!existing.includes(value)) {\r\n      existing.push(value)\r\n      this.cspDirectives.set(directive, existing)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 現在のCSPポリシーを文字列として生成\r\n   */\r\n  generateCSPHeader(): string {\r\n    const directives: string[] = []\r\n    \r\n    for (const [directive, values] of this.cspDirectives.entries()) {\r\n      directives.push(`${directive} ${values.join(' ')}`)\r\n    }\r\n    \r\n    return directives.join('; ')\r\n  }\r\n\r\n  /**\r\n   * メタタグとしてCSPを動的に設定\r\n   */\r\n  applyCSPToDocument(): void {\r\n    // 既存のCSPメタタグを削除\r\n    const existingMeta = document.querySelector('meta[http-equiv=\"Content-Security-Policy\"]')\r\n    if (existingMeta) {\r\n      existingMeta.remove()\r\n    }\r\n\r\n    // 新しいCSPメタタグを追加\r\n    const meta = document.createElement('meta')\r\n    meta.httpEquiv = 'Content-Security-Policy'\r\n    meta.content = this.generateCSPHeader()\r\n    document.head.appendChild(meta)\r\n    \r\n    console.log('🛡️ CSP updated:', meta.content)\r\n  }\r\n\r\n  /**\r\n   * 安全なスクリプト実行のヘルパー\r\n   */\r\n  executeScriptSafely(code: string, nonce?: string): boolean {\r\n    const scriptNonce = nonce || this.generateScriptNonce()\r\n    \r\n    if (!this.validateNonce(scriptNonce)) {\r\n      SecurityMonitor.getInstance().logSuspiciousActivity({\r\n        type: 'invalid_script_nonce',\r\n        description: 'Invalid nonce for script execution',\r\n        severity: 'high',\r\n        source: 'csp_manager',\r\n        metadata: { nonce: scriptNonce }\r\n      })\r\n      return false\r\n    }\r\n\r\n    try {\r\n      const script = document.createElement('script')\r\n      script.nonce = scriptNonce\r\n      script.textContent = code\r\n      document.head.appendChild(script)\r\n      document.head.removeChild(script)\r\n      return true\r\n    } catch (error) {\r\n      SecurityMonitor.getInstance().logSuspiciousActivity({\r\n        type: 'script_execution_failed',\r\n        description: 'Safe script execution failed',\r\n        severity: 'medium',\r\n        source: 'csp_manager',\r\n        metadata: { \r\n          error: error instanceof Error ? error.message : String(error),\r\n          nonce: scriptNonce\r\n        }\r\n      })\r\n      return false\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 統合セキュリティインターセプター\r\n */\r\nexport class SecurityInterceptor {\r\n  private static instance: SecurityInterceptor\r\n  private xssProtection = XSSProtection.getInstance()\r\n  private csrfProtection = CSRFProtection.getInstance()\r\n  private cspManager = CSPManager.getInstance()\r\n\r\n  static getInstance(): SecurityInterceptor {\r\n    if (!SecurityInterceptor.instance) {\r\n      SecurityInterceptor.instance = new SecurityInterceptor()\r\n    }\r\n    return SecurityInterceptor.instance\r\n  }\r\n\r\n  /**\r\n   * フォーム送信の包括的検証\r\n   */\r\n  validateFormSubmission(form: HTMLFormElement, csrfToken?: string): boolean {\r\n    const formData = new FormData(form)\r\n    let isValid = true\r\n\r\n    // CSRF トークン検証\r\n    if (csrfToken) {\r\n      const action = form.getAttribute('data-action') || 'form_submit'\r\n      if (!this.csrfProtection.validateTokenForAction(action, csrfToken)) {\r\n        isValid = false\r\n      }\r\n    }\r\n\r\n    // オリジン検証\r\n    const origin = document.referrer || window.location.origin\r\n    if (!this.csrfProtection.validateOrigin(origin)) {\r\n      isValid = false\r\n    }\r\n\r\n    // 入力値のサニタイゼーション\r\n    for (const [key, value] of formData.entries()) {\r\n      if (typeof value === 'string') {\r\n        try {\r\n          const sanitized = sanitizeInput(value)\r\n          if (sanitized !== value) {\r\n            SecurityMonitor.getInstance().logSuspiciousActivity({\r\n              type: 'form_input_sanitized',\r\n              description: `Form input was sanitized: ${key}`,\r\n              severity: 'low',\r\n              source: 'security_interceptor',\r\n              metadata: { \r\n                fieldName: key,\r\n                original: value.slice(0, 100),\r\n                sanitized: sanitized.slice(0, 100)\r\n              }\r\n            })\r\n          }\r\n        } catch (error) {\r\n          isValid = false\r\n          SecurityMonitor.getInstance().logSuspiciousActivity({\r\n            type: 'form_input_validation_failed',\r\n            description: `Form input validation failed: ${key}`,\r\n            severity: 'high',\r\n            source: 'security_interceptor',\r\n            metadata: { \r\n              fieldName: key,\r\n              error: error instanceof Error ? error.message : String(error)\r\n            }\r\n          })\r\n        }\r\n      }\r\n    }\r\n\r\n    return isValid\r\n  }\r\n\r\n  /**\r\n   * AJAX リクエストの包括的検証\r\n   */\r\n  validateAjaxRequest(url: string, method: string, headers: Record<string, string>, data?: any): boolean {\r\n    let isValid = true\r\n\r\n    // URL の安全性検証\r\n    const sanitizedURL = this.xssProtection.sanitizeURL(url)\r\n    if (!sanitizedURL) {\r\n      isValid = false\r\n    }\r\n\r\n    // CSRF トークン確認（POST, PUT, DELETE の場合）\r\n    const methodsRequiringCSRF = ['POST', 'PUT', 'DELETE', 'PATCH']\r\n    if (methodsRequiringCSRF.includes(method.toUpperCase())) {\r\n      const csrfToken = headers['X-CSRF-Token']\r\n      if (!csrfToken) {\r\n        SecurityMonitor.getInstance().logSuspiciousActivity({\r\n          type: 'missing_csrf_token',\r\n          description: `CSRF token missing for ${method} request`,\r\n          severity: 'high',\r\n          source: 'security_interceptor',\r\n          metadata: { url, method }\r\n        })\r\n        isValid = false\r\n      }\r\n    }\r\n\r\n    // データペイロードの検証\r\n    if (data && typeof data === 'object') {\r\n      try {\r\n        const jsonString = JSON.stringify(data)\r\n        if (jsonString.length > 100000) { // 100KB制限\r\n          SecurityMonitor.getInstance().logSuspiciousActivity({\r\n            type: 'oversized_request_payload',\r\n            description: `Request payload too large: ${jsonString.length} bytes`,\r\n            severity: 'medium',\r\n            source: 'security_interceptor',\r\n            metadata: { url, method, payloadSize: jsonString.length }\r\n          })\r\n          isValid = false\r\n        }\r\n      } catch (error) {\r\n        isValid = false\r\n      }\r\n    }\r\n\r\n    return isValid\r\n  }\r\n\r\n  /**\r\n   * 包括的セキュリティ初期化\r\n   */\r\n  initialize(): void {\r\n    // 信頼できるドメインの設定\r\n    this.xssProtection.setTrustedDomains([\r\n      window.location.hostname,\r\n      'cdn.jsdelivr.net',\r\n      'unpkg.com'\r\n    ])\r\n\r\n    // 有効なオリジンの設定\r\n    this.csrfProtection.setValidOrigins([window.location.origin])\r\n\r\n    // CSPの初期設定\r\n    this.cspManager.setDirective('default-src', [\"'self'\"])\r\n    this.cspManager.setDirective('script-src', [\"'self'\", \"'unsafe-inline'\"])\r\n    this.cspManager.setDirective('style-src', [\"'self'\", \"'unsafe-inline'\"])\r\n    this.cspManager.setDirective('img-src', [\"'self'\", 'data:', 'blob:'])\r\n    this.cspManager.setDirective('connect-src', [\"'self'\"])\r\n    this.cspManager.setDirective('font-src', [\"'self'\", 'data:'])\r\n    this.cspManager.setDirective('object-src', [\"'none'\"])\r\n    this.cspManager.setDirective('frame-src', [\"'none'\"])\r\n\r\n    console.log('🛡️ Security Interceptor initialized')\r\n  }\r\n}\r\n\r\n// 自動初期化\r\nif (typeof window !== 'undefined') {\r\n  document.addEventListener('DOMContentLoaded', () => {\r\n    SecurityInterceptor.getInstance().initialize()\r\n  })\r\n}\r\n\r\n// Classes are already exported above using 'export class' syntax","/**\r\n * Content Security Policy 動的管理システム\r\n * nonce生成・検証・CSPヘッダー更新機能\r\n */\r\n\r\nimport { generateSecureRandomString } from './security'\r\nimport { SecurityMonitor } from './security-extensions'\r\n\r\nexport interface CSPDirectives {\r\n  'default-src'?: string[]\r\n  'script-src'?: string[]\r\n  'style-src'?: string[]\r\n  'img-src'?: string[]\r\n  'connect-src'?: string[]\r\n  'font-src'?: string[]\r\n  'object-src'?: string[]\r\n  'media-src'?: string[]\r\n  'frame-src'?: string[]\r\n  'worker-src'?: string[]\r\n  'manifest-src'?: string[]\r\n  'base-uri'?: string[]\r\n  'form-action'?: string[]\r\n  'frame-ancestors'?: string[]\r\n  'report-uri'?: string[]\r\n  'report-to'?: string[]\r\n}\r\n\r\n/**\r\n * CSP動的管理システム\r\n */\r\nexport class CSPManager {\r\n  private static instance: CSPManager\r\n  private currentNonce: string = ''\r\n  private nonceExpiry: number = 0\r\n  private directives: CSPDirectives = {}\r\n  private violations: any[] = []\r\n  private reportEndpoint: string = ''\r\n\r\n  static getInstance(): CSPManager {\r\n    if (!CSPManager.instance) {\r\n      CSPManager.instance = new CSPManager()\r\n    }\r\n    return CSPManager.instance\r\n  }\r\n\r\n  /**\r\n   * CSPを初期化\r\n   */\r\n  initialize(): void {\r\n    this.setupDefaultDirectives()\r\n    this.setupViolationReporting()\r\n    this.updateCSPMetaTag()\r\n    this.scheduleNonceRotation()\r\n    \r\n    console.log('🛡️ CSP Manager initialized with dynamic nonce support')\r\n  }\r\n\r\n  /**\r\n   * デフォルトのCSPディレクティブを設定\r\n   */\r\n  private setupDefaultDirectives(): void {\r\n    this.directives = {\r\n      'default-src': [\"'self'\"],\r\n      'script-src': [\"'self'\", `'nonce-${this.generateNewNonce()}'`, \"'strict-dynamic'\"],\r\n      'style-src': [\"'self'\", \"'unsafe-inline'\", \"'nonce-${nonce}'\"],\r\n      'img-src': [\"'self'\", 'data:', 'blob:', 'https:'],\r\n      'font-src': [\"'self'\", 'data:', 'https:'],\r\n      'connect-src': [\"'self'\", 'https:'],\r\n      'media-src': [\"'self'\"],\r\n      'object-src': [\"'none'\"],\r\n      'frame-src': [\"'none'\"],\r\n      'worker-src': [\"'self'\", 'blob:'],\r\n      'manifest-src': [\"'self'\"],\r\n      'base-uri': [\"'self'\"],\r\n      'form-action': [\"'self'\"],\r\n      'frame-ancestors': [\"'none'\"],\r\n      'report-uri': ['/api/csp-violation-report']\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 新しいnonceを生成\r\n   */\r\n  generateNewNonce(): string {\r\n    this.currentNonce = generateSecureRandomString(32)\r\n    this.nonceExpiry = Date.now() + (15 * 60 * 1000) // 15分間有効\r\n    \r\n    SecurityMonitor.getInstance().logSuspiciousActivity({\r\n      type: 'nonce_generated',\r\n      description: 'New CSP nonce generated',\r\n      severity: 'low',\r\n      source: 'csp_manager',\r\n      metadata: { \r\n        nonceLength: this.currentNonce.length,\r\n        expiryTime: new Date(this.nonceExpiry).toISOString()\r\n      }\r\n    })\r\n    \r\n    return this.currentNonce\r\n  }\r\n\r\n  /**\r\n   * 現在のnonceを取得\r\n   */\r\n  getCurrentNonce(): string {\r\n    if (Date.now() > this.nonceExpiry) {\r\n      // 期限切れの場合は新しいnonceを生成\r\n      this.generateNewNonce()\r\n      this.updateCSPMetaTag()\r\n    }\r\n    \r\n    return this.currentNonce\r\n  }\r\n\r\n  /**\r\n   * nonceの有効性を検証\r\n   */\r\n  validateNonce(providedNonce: string): boolean {\r\n    const now = Date.now()\r\n    \r\n    if (now > this.nonceExpiry) {\r\n      SecurityMonitor.getInstance().logSuspiciousActivity({\r\n        type: 'expired_nonce_used',\r\n        description: 'Attempt to use expired nonce',\r\n        severity: 'medium',\r\n        source: 'csp_manager',\r\n        metadata: { \r\n          providedNonce: `${providedNonce.slice(0, 8)  }...`,\r\n          expired: true,\r\n          expiryTime: new Date(this.nonceExpiry).toISOString()\r\n        }\r\n      })\r\n      return false\r\n    }\r\n\r\n    const isValid = providedNonce === this.currentNonce\r\n    \r\n    if (!isValid) {\r\n      SecurityMonitor.getInstance().logSuspiciousActivity({\r\n        type: 'invalid_nonce_used',\r\n        description: 'Invalid nonce provided',\r\n        severity: 'high',\r\n        source: 'csp_manager',\r\n        metadata: { \r\n          providedNonce: `${providedNonce.slice(0, 8)  }...`,\r\n          expectedNonce: `${this.currentNonce.slice(0, 8)  }...`\r\n        }\r\n      })\r\n    }\r\n\r\n    return isValid\r\n  }\r\n\r\n  /**\r\n   * CSPディレクティブを追加・更新\r\n   */\r\n  setDirective(directive: keyof CSPDirectives, values: string[]): void {\r\n    this.directives[directive] = [...values]\r\n    this.updateCSPMetaTag()\r\n  }\r\n\r\n  /**\r\n   * CSPディレクティブに値を追加\r\n   */\r\n  addToDirective(directive: keyof CSPDirectives, value: string): void {\r\n    if (!this.directives[directive]) {\r\n      this.directives[directive] = []\r\n    }\r\n    \r\n    if (!this.directives[directive]!.includes(value)) {\r\n      this.directives[directive]!.push(value)\r\n      this.updateCSPMetaTag()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * CSPディレクティブから値を削除\r\n   */\r\n  removeFromDirective(directive: keyof CSPDirectives, value: string): void {\r\n    if (this.directives[directive]) {\r\n      this.directives[directive] = this.directives[directive]!.filter(v => v !== value)\r\n      this.updateCSPMetaTag()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * CSPヘッダー文字列を生成\r\n   */\r\n  generateCSPHeader(): string {\r\n    const policies: string[] = []\r\n    \r\n    for (const [directive, values] of Object.entries(this.directives)) {\r\n      if (values && values.length > 0) {\r\n        let policyValues = values.join(' ')\r\n        \r\n        // nonce変数を現在のnonceで置換\r\n        policyValues = policyValues.replace(/\\$\\{nonce\\}/g, this.getCurrentNonce())\r\n        \r\n        policies.push(`${directive} ${policyValues}`)\r\n      }\r\n    }\r\n    \r\n    return policies.join('; ')\r\n  }\r\n\r\n  /**\r\n   * CSPメタタグを動的に更新\r\n   */\r\n  updateCSPMetaTag(): void {\r\n    if (typeof document === 'undefined') return\r\n\r\n    // 既存のCSPメタタグを削除\r\n    const existingCSP = document.querySelector('meta[http-equiv=\"Content-Security-Policy\"]')\r\n    if (existingCSP) {\r\n      existingCSP.remove()\r\n    }\r\n\r\n    // 新しいCSPメタタグを作成\r\n    const cspMeta = document.createElement('meta')\r\n    cspMeta.httpEquiv = 'Content-Security-Policy'\r\n    cspMeta.content = this.generateCSPHeader()\r\n    document.head.appendChild(cspMeta)\r\n\r\n    // HTMLのプレースホルダーを置換\r\n    const htmlContent = document.documentElement.outerHTML\r\n    if (htmlContent.includes('PLACEHOLDER_NONCE')) {\r\n      document.documentElement.outerHTML = htmlContent.replace(\r\n        /PLACEHOLDER_NONCE/g,\r\n        this.getCurrentNonce()\r\n      )\r\n    }\r\n\r\n    SecurityMonitor.getInstance().logSuspiciousActivity({\r\n      type: 'csp_updated',\r\n      description: 'CSP policy updated',\r\n      severity: 'low',\r\n      source: 'csp_manager',\r\n      metadata: { \r\n        policy: `${cspMeta.content.slice(0, 200)  }...`,\r\n        nonce: `${this.currentNonce.slice(0, 8)  }...`\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * CSP違反レポート設定\r\n   */\r\n  private setupViolationReporting(): void {\r\n    if (typeof document === 'undefined') return\r\n\r\n    document.addEventListener('securitypolicyviolation', (event: any) => {\r\n      const violation = {\r\n        blockedURI: event.blockedURI,\r\n        columnNumber: event.columnNumber,\r\n        documentURI: event.documentURI,\r\n        effectiveDirective: event.effectiveDirective,\r\n        lineNumber: event.lineNumber,\r\n        originalPolicy: event.originalPolicy,\r\n        referrer: event.referrer,\r\n        sample: event.sample,\r\n        sourceFile: event.sourceFile,\r\n        statusCode: event.statusCode,\r\n        violatedDirective: event.violatedDirective,\r\n        timestamp: new Date().toISOString()\r\n      }\r\n\r\n      this.violations.push(violation)\r\n      \r\n      // 最大100件まで保持\r\n      if (this.violations.length > 100) {\r\n        this.violations = this.violations.slice(-100)\r\n      }\r\n\r\n      SecurityMonitor.getInstance().logSuspiciousActivity({\r\n        type: 'csp_violation',\r\n        description: `CSP violation: ${event.violatedDirective}`,\r\n        severity: this.assessViolationSeverity(event),\r\n        source: 'csp_violation_handler',\r\n        metadata: violation\r\n      })\r\n\r\n      // 外部レポートエンドポイントに送信\r\n      if (this.reportEndpoint) {\r\n        this.sendViolationReport(violation)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * CSP違反の重要度を評価\r\n   */\r\n  private assessViolationSeverity(event: any): 'low' | 'medium' | 'high' | 'critical' {\r\n    // スクリプト関連の違反は高リスク\r\n    if (event.violatedDirective.startsWith('script-src')) {\r\n      return event.blockedURI.includes('javascript:') || \r\n             event.blockedURI.includes('data:') ? 'critical' : 'high'\r\n    }\r\n    \r\n    // インライン実行の試行\r\n    if (event.sample && (\r\n      event.sample.includes('eval(') ||\r\n      event.sample.includes('Function(') ||\r\n      event.sample.includes('setTimeout(') ||\r\n      event.sample.includes('setInterval(')\r\n    )) {\r\n      return 'high'\r\n    }\r\n    \r\n    // 外部リソースの読み込み試行\r\n    if (event.effectiveDirective.includes('-src') && \r\n        !event.blockedURI.startsWith(window.location.origin)) {\r\n      return 'medium'\r\n    }\r\n    \r\n    return 'low'\r\n  }\r\n\r\n  /**\r\n   * 違反レポートを外部エンドポイントに送信\r\n   */\r\n  private async sendViolationReport(violation: any): Promise<void> {\r\n    try {\r\n      await fetch(this.reportEndpoint, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          'csp-report': violation\r\n        })\r\n      })\r\n    } catch (error) {\r\n      console.warn('CSP violation report failed:', error)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 定期的なnonce更新をスケジュール\r\n   */\r\n  private scheduleNonceRotation(): void {\r\n    // 10分ごとにnonceを更新\r\n    setInterval(() => {\r\n      this.generateNewNonce()\r\n      this.updateCSPMetaTag()\r\n    }, 10 * 60 * 1000)\r\n  }\r\n\r\n  /**\r\n   * 安全なスクリプト実行\r\n   */\r\n  executeScriptWithNonce(code: string): boolean {\r\n    if (typeof document === 'undefined') return false\r\n\r\n    try {\r\n      const script = document.createElement('script')\r\n      script.nonce = this.getCurrentNonce()\r\n      script.textContent = code\r\n      \r\n      document.head.appendChild(script)\r\n      document.head.removeChild(script)\r\n      \r\n      return true\r\n    } catch (error) {\r\n      SecurityMonitor.getInstance().logSuspiciousActivity({\r\n        type: 'safe_script_execution_failed',\r\n        description: 'Failed to execute script with nonce',\r\n        severity: 'medium',\r\n        source: 'csp_manager',\r\n        metadata: {\r\n          error: error instanceof Error ? error.message : String(error),\r\n          codeLength: code.length\r\n        }\r\n      })\r\n      return false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 安全なスタイル追加\r\n   */\r\n  addStyleWithNonce(css: string): boolean {\r\n    if (typeof document === 'undefined') return false\r\n\r\n    try {\r\n      const style = document.createElement('style')\r\n      style.nonce = this.getCurrentNonce()\r\n      style.textContent = css\r\n      \r\n      document.head.appendChild(style)\r\n      \r\n      return true\r\n    } catch (error) {\r\n      SecurityMonitor.getInstance().logSuspiciousActivity({\r\n        type: 'safe_style_addition_failed',\r\n        description: 'Failed to add style with nonce',\r\n        severity: 'medium',\r\n        source: 'csp_manager',\r\n        metadata: {\r\n          error: error instanceof Error ? error.message : String(error),\r\n          cssLength: css.length\r\n        }\r\n      })\r\n      return false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * CSP違反履歴を取得\r\n   */\r\n  getViolationHistory(limit = 50): any[] {\r\n    return this.violations.slice(-limit)\r\n  }\r\n\r\n  /**\r\n   * CSP違反統計を取得\r\n   */\r\n  getViolationStats(): { total: number; byDirective: Record<string, number>; bySource: Record<string, number> } {\r\n    const stats = {\r\n      total: this.violations.length,\r\n      byDirective: {} as Record<string, number>,\r\n      bySource: {} as Record<string, number>\r\n    }\r\n\r\n    this.violations.forEach(violation => {\r\n      const directive = violation.effectiveDirective || 'unknown'\r\n      const source = violation.sourceFile || 'inline'\r\n      \r\n      stats.byDirective[directive] = (stats.byDirective[directive] || 0) + 1\r\n      stats.bySource[source] = (stats.bySource[source] || 0) + 1\r\n    })\r\n\r\n    return stats\r\n  }\r\n\r\n  /**\r\n   * レポートエンドポイントを設定\r\n   */\r\n  setReportEndpoint(endpoint: string): void {\r\n    this.reportEndpoint = endpoint\r\n    this.addToDirective('report-uri', endpoint)\r\n  }\r\n\r\n  /**\r\n   * CSPのデバッグ情報を出力\r\n   */\r\n  debugCSP(): void {\r\n    console.group('🛡️ CSP Debug Information')\r\n    console.log('Current Nonce:', this.currentNonce)\r\n    console.log('Nonce Expiry:', new Date(this.nonceExpiry))\r\n    console.log('Current Policy:', this.generateCSPHeader())\r\n    console.log('Violation Count:', this.violations.length)\r\n    console.log('Recent Violations:', this.violations.slice(-5))\r\n    console.groupEnd()\r\n  }\r\n}\r\n\r\n/**\r\n * セキュリティヘッダー管理\r\n */\r\nexport class SecurityHeaderManager {\r\n  private static instance: SecurityHeaderManager\r\n\r\n  static getInstance(): SecurityHeaderManager {\r\n    if (!SecurityHeaderManager.instance) {\r\n      SecurityHeaderManager.instance = new SecurityHeaderManager()\r\n    }\r\n    return SecurityHeaderManager.instance\r\n  }\r\n\r\n  /**\r\n   * すべてのセキュリティヘッダーを設定\r\n   */\r\n  initializeSecurityHeaders(): void {\r\n    this.setContentTypeOptions()\r\n    this.setFrameOptions()\r\n    this.setXSSProtection()\r\n    this.setReferrerPolicy()\r\n    this.setPermissionsPolicy()\r\n    this.setStrictTransportSecurity()\r\n    this.setCrossOriginPolicies()\r\n    \r\n    console.log('🛡️ Security headers initialized')\r\n  }\r\n\r\n  /**\r\n   * X-Content-Type-Options ヘッダー\r\n   */\r\n  private setContentTypeOptions(): void {\r\n    this.updateMetaTag('X-Content-Type-Options', 'nosniff')\r\n  }\r\n\r\n  /**\r\n   * X-Frame-Options ヘッダー\r\n   */\r\n  private setFrameOptions(): void {\r\n    this.updateMetaTag('X-Frame-Options', 'DENY')\r\n  }\r\n\r\n  /**\r\n   * X-XSS-Protection ヘッダー\r\n   */\r\n  private setXSSProtection(): void {\r\n    this.updateMetaTag('X-XSS-Protection', '1; mode=block')\r\n  }\r\n\r\n  /**\r\n   * Referrer Policy ヘッダー\r\n   */\r\n  private setReferrerPolicy(): void {\r\n    const meta = document.querySelector('meta[name=\"referrer\"]') as HTMLMetaElement\r\n    if (!meta) {\r\n      const newMeta = document.createElement('meta')\r\n      newMeta.name = 'referrer'\r\n      newMeta.content = 'strict-origin-when-cross-origin'\r\n      document.head.appendChild(newMeta)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Permissions Policy ヘッダー\r\n   */\r\n  private setPermissionsPolicy(): void {\r\n    const policy = [\r\n      'geolocation=()',\r\n      'microphone=()', \r\n      'camera=()',\r\n      'fullscreen=(self)',\r\n      'payment=()',\r\n      'usb=()',\r\n      'serial=()',\r\n      'hid=()',\r\n      'midi=()',\r\n      'clipboard-read=()',\r\n      'clipboard-write=(self)',\r\n      'accelerometer=()',\r\n      'gyroscope=()',\r\n      'magnetometer=()',\r\n      'ambient-light-sensor=()',\r\n      'encrypted-media=()',\r\n      'picture-in-picture=()',\r\n      'display-capture=()'\r\n    ].join(', ')\r\n    \r\n    this.updateMetaTag('Permissions-Policy', policy)\r\n  }\r\n\r\n  /**\r\n   * Strict-Transport-Security ヘッダー\r\n   */\r\n  private setStrictTransportSecurity(): void {\r\n    // HTTPSでのみ有効\r\n    if (window.location.protocol === 'https:') {\r\n      this.updateMetaTag('Strict-Transport-Security', 'max-age=31536000; includeSubDomains; preload')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cross-Origin policies\r\n   */\r\n  private setCrossOriginPolicies(): void {\r\n    this.updateMetaTag('Cross-Origin-Embedder-Policy', 'require-corp')\r\n    this.updateMetaTag('Cross-Origin-Opener-Policy', 'same-origin')\r\n    this.updateMetaTag('Cross-Origin-Resource-Policy', 'same-origin')\r\n  }\r\n\r\n  /**\r\n   * メタタグを更新またはを作成\r\n   */\r\n  private updateMetaTag(httpEquiv: string, content: string): void {\r\n    if (typeof document === 'undefined') return\r\n\r\n    let meta = document.querySelector(`meta[http-equiv=\"${httpEquiv}\"]`) as HTMLMetaElement\r\n    \r\n    if (!meta) {\r\n      meta = document.createElement('meta')\r\n      meta.httpEquiv = httpEquiv\r\n      document.head.appendChild(meta)\r\n    }\r\n    \r\n    meta.content = content\r\n  }\r\n\r\n  /**\r\n   * セキュリティヘッダーの検証\r\n   */\r\n  validateSecurityHeaders(): { valid: string[]; missing: string[]; recommendations: string[] } {\r\n    const requiredHeaders = [\r\n      'Content-Security-Policy',\r\n      'X-Content-Type-Options',\r\n      'X-Frame-Options',\r\n      'X-XSS-Protection',\r\n      'Strict-Transport-Security',\r\n      'Cross-Origin-Embedder-Policy',\r\n      'Cross-Origin-Opener-Policy'\r\n    ]\r\n\r\n    const valid: string[] = []\r\n    const missing: string[] = []\r\n    const recommendations: string[] = []\r\n\r\n    requiredHeaders.forEach(header => {\r\n      const meta = document.querySelector(`meta[http-equiv=\"${header}\"]`)\r\n      if (meta) {\r\n        valid.push(header)\r\n      } else {\r\n        missing.push(header)\r\n      }\r\n    })\r\n\r\n    // HTTPSチェック\r\n    if (window.location.protocol !== 'https:') {\r\n      recommendations.push('HTTPSの使用を強く推奨します')\r\n    }\r\n\r\n    // Referrer Policyチェック\r\n    const referrerMeta = document.querySelector('meta[name=\"referrer\"]')\r\n    if (!referrerMeta) {\r\n      recommendations.push('Referrer Policyの設定を推奨します')\r\n    }\r\n\r\n    return { valid, missing, recommendations }\r\n  }\r\n}\r\n\r\n// 自動初期化\r\nif (typeof window !== 'undefined') {\r\n  document.addEventListener('DOMContentLoaded', () => {\r\n    const cspManager = CSPManager.getInstance()\r\n    const headerManager = SecurityHeaderManager.getInstance()\r\n    \r\n    cspManager.initialize()\r\n    headerManager.initializeSecurityHeaders()\r\n  })\r\n}","/**\r\n * セキュリティ監査ログシステム\r\n * 包括的なセキュリティイベント追跡・分析・レポート機能\r\n */\r\n\r\nimport { secureLocalStorage, generateSecureHash } from './security'\r\nimport { SecurityMonitor } from './security-extensions'\r\n\r\nexport interface SecurityAuditEvent {\r\n  id: string\r\n  timestamp: Date\r\n  eventType: string\r\n  severity: 'low' | 'medium' | 'high' | 'critical'\r\n  source: string\r\n  message: string\r\n  metadata: Record<string, any>\r\n  userAgent: string\r\n  ipAddress?: string\r\n  sessionId?: string\r\n  userId?: string\r\n  stackTrace?: string\r\n  hash: string // イベントの整合性検証用\r\n}\r\n\r\nexport interface SecurityAuditFilter {\r\n  startDate?: Date\r\n  endDate?: Date\r\n  eventTypes?: string[]\r\n  severities?: string[]\r\n  sources?: string[]\r\n  searchTerm?: string\r\n}\r\n\r\nexport interface SecurityAuditReport {\r\n  generatedAt: Date\r\n  period: { start: Date; end: Date }\r\n  summary: {\r\n    totalEvents: number\r\n    criticalEvents: number\r\n    highSeverityEvents: number\r\n    mediumSeverityEvents: number\r\n    lowSeverityEvents: number\r\n    uniqueEventTypes: number\r\n    uniqueSources: number\r\n  }\r\n  topEventTypes: Array<{ type: string; count: number }>\r\n  topSources: Array<{ source: string; count: number }>\r\n  severityTrend: Array<{ date: string; critical: number; high: number; medium: number; low: number }>\r\n  recommendations: string[]\r\n  events: SecurityAuditEvent[]\r\n}\r\n\r\n/**\r\n * セキュリティ監査ログシステム\r\n */\r\nexport class SecurityAuditLogger {\r\n  private static instance: SecurityAuditLogger\r\n  private storage = secureLocalStorage()\r\n  private eventQueue: SecurityAuditEvent[] = []\r\n  private isProcessingQueue = false\r\n  private maxEventsInMemory = 1000\r\n  private maxEventsInStorage = 5000\r\n  private sessionId: string\r\n  private config = {\r\n    enableStackTrace: true,\r\n    enableGeoLocation: false,\r\n    enablePerformanceMetrics: true,\r\n    autoFlushInterval: 10000, // 10秒\r\n    compressionThreshold: 100 // 100イベント以上で圧縮\r\n  }\r\n\r\n  private constructor() {\r\n    this.sessionId = this.generateSessionId()\r\n    this.startAutoFlush()\r\n    this.setupUnloadHandler()\r\n  }\r\n\r\n  static getInstance(): SecurityAuditLogger {\r\n    if (!SecurityAuditLogger.instance) {\r\n      SecurityAuditLogger.instance = new SecurityAuditLogger()\r\n    }\r\n    return SecurityAuditLogger.instance\r\n  }\r\n\r\n  /**\r\n   * セッションIDを生成\r\n   */\r\n  private generateSessionId(): string {\r\n    const timestamp = Date.now().toString(36)\r\n    const random = Math.random().toString(36).substr(2, 9)\r\n    return `session_${timestamp}_${random}`\r\n  }\r\n\r\n  /**\r\n   * セキュリティイベントをログに記録\r\n   */\r\n  async logSecurityEvent(\r\n    eventType: string,\r\n    severity: 'low' | 'medium' | 'high' | 'critical',\r\n    source: string,\r\n    message: string,\r\n    metadata: Record<string, any> = {}\r\n  ): Promise<void> {\r\n    try {\r\n      const event: SecurityAuditEvent = {\r\n        id: await this.generateEventId(),\r\n        timestamp: new Date(),\r\n        eventType,\r\n        severity,\r\n        source,\r\n        message,\r\n        metadata: {\r\n          ...metadata,\r\n          url: window.location.href,\r\n          referrer: document.referrer,\r\n          viewport: {\r\n            width: window.innerWidth,\r\n            height: window.innerHeight\r\n          },\r\n          ...(this.config.enablePerformanceMetrics && this.getPerformanceMetrics())\r\n        },\r\n        userAgent: navigator.userAgent,\r\n        sessionId: this.sessionId,\r\n        stackTrace: this.config.enableStackTrace ? this.captureStackTrace() : undefined,\r\n        hash: '' // 後で計算\r\n      }\r\n\r\n      // イベントのハッシュを計算（整合性検証用）\r\n      event.hash = await this.calculateEventHash(event)\r\n\r\n      // メモリキューに追加\r\n      this.eventQueue.push(event)\r\n\r\n      // キューのサイズ制限\r\n      if (this.eventQueue.length > this.maxEventsInMemory) {\r\n        this.eventQueue = this.eventQueue.slice(-this.maxEventsInMemory)\r\n      }\r\n\r\n      // 緊急度が高い場合は即座にフラッシュ\r\n      if (severity === 'critical' || severity === 'high') {\r\n        await this.flushQueue()\r\n      }\r\n\r\n      // SecurityMonitorにも通知\r\n      SecurityMonitor.getInstance().logSuspiciousActivity({\r\n        type: eventType,\r\n        description: message,\r\n        severity,\r\n        source,\r\n        metadata\r\n      })\r\n\r\n    } catch (error) {\r\n      console.error('セキュリティイベントのログ記録に失敗:', error)\r\n      // フォールバック: 最低限の情報をコンソールに出力\r\n      console.warn(`🚨 Security Event: ${eventType} [${severity.toUpperCase()}] ${message}`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * イベントIDを生成\r\n   */\r\n  private async generateEventId(): Promise<string> {\r\n    const timestamp = Date.now().toString()\r\n    const random = Math.random().toString()\r\n    const hash = await generateSecureHash(timestamp + random)\r\n    return hash.slice(0, 16)\r\n  }\r\n\r\n  /**\r\n   * イベントのハッシュを計算\r\n   */\r\n  private async calculateEventHash(event: Omit<SecurityAuditEvent, 'hash'>): Promise<string> {\r\n    const eventString = JSON.stringify({\r\n      id: event.id,\r\n      timestamp: event.timestamp.toISOString(),\r\n      eventType: event.eventType,\r\n      severity: event.severity,\r\n      source: event.source,\r\n      message: event.message,\r\n      sessionId: event.sessionId\r\n    })\r\n    return await generateSecureHash(eventString)\r\n  }\r\n\r\n  /**\r\n   * スタックトレースをキャプチャ\r\n   */\r\n  private captureStackTrace(): string {\r\n    try {\r\n      throw new Error()\r\n    } catch (error) {\r\n      if (error instanceof Error && error.stack) {\r\n        return error.stack.split('\\n').slice(3, 8).join('\\n') // 関連する部分のみ\r\n      }\r\n      return ''\r\n    }\r\n  }\r\n\r\n  /**\r\n   * パフォーマンスメトリクスを取得\r\n   */\r\n  private getPerformanceMetrics(): Record<string, any> {\r\n    if (!performance) return {}\r\n\r\n    const navigation = performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming\r\n    const memory = (performance as any).memory\r\n\r\n    return {\r\n      loadTime: navigation ? navigation.loadEventEnd - navigation.loadEventStart : 0,\r\n      domContentLoaded: navigation ? navigation.domContentLoadedEventEnd - navigation.domContentLoadedEventStart : 0,\r\n      memoryUsage: memory ? {\r\n        used: Math.round(memory.usedJSHeapSize / 1024 / 1024), // MB\r\n        total: Math.round(memory.totalJSHeapSize / 1024 / 1024), // MB\r\n        limit: Math.round(memory.jsHeapSizeLimit / 1024 / 1024) // MB\r\n      } : null,\r\n      timing: performance.now()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * キューを永続化ストレージにフラッシュ\r\n   */\r\n  private async flushQueue(): Promise<void> {\r\n    if (this.isProcessingQueue || this.eventQueue.length === 0) {\r\n      return\r\n    }\r\n\r\n    this.isProcessingQueue = true\r\n\r\n    try {\r\n      // 既存のイベントを読み込み\r\n      const existingEvents = await this.storage.getItem<SecurityAuditEvent[]>('security_audit_log', true) || []\r\n      \r\n      // 新しいイベントを追加\r\n      const allEvents = [...existingEvents, ...this.eventQueue]\r\n      \r\n      // サイズ制限の適用\r\n      const trimmedEvents = allEvents.slice(-this.maxEventsInStorage)\r\n      \r\n      // 圧縮の判定\r\n      const shouldCompress = trimmedEvents.length >= this.config.compressionThreshold\r\n      \r\n      // ストレージに保存\r\n      await this.storage.setItem('security_audit_log', trimmedEvents, shouldCompress)\r\n      \r\n      // メタデータの更新\r\n      await this.updateAuditMetadata(trimmedEvents)\r\n      \r\n      // キューをクリア\r\n      this.eventQueue = []\r\n      \r\n      console.log(`📝 ${trimmedEvents.length}件のセキュリティイベントがログに記録されました`)\r\n      \r\n    } catch (error) {\r\n      console.error('セキュリティログのフラッシュに失敗:', error)\r\n      \r\n      // 重要: フラッシュが失敗してもキューを保持\r\n      // ただし、サイズ制限は適用\r\n      if (this.eventQueue.length > this.maxEventsInMemory) {\r\n        this.eventQueue = this.eventQueue.slice(-Math.floor(this.maxEventsInMemory / 2))\r\n      }\r\n    } finally {\r\n      this.isProcessingQueue = false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 監査メタデータを更新\r\n   */\r\n  private async updateAuditMetadata(events: SecurityAuditEvent[]): Promise<void> {\r\n    const metadata = {\r\n      lastUpdated: new Date().toISOString(),\r\n      totalEvents: events.length,\r\n      oldestEvent: events.length > 0 ? events[0].timestamp.toISOString() : null,\r\n      newestEvent: events.length > 0 ? events[events.length - 1].timestamp.toISOString() : null,\r\n      sessionId: this.sessionId,\r\n      eventTypes: [...new Set(events.map(e => e.eventType))],\r\n      sources: [...new Set(events.map(e => e.source))],\r\n      severityCounts: {\r\n        critical: events.filter(e => e.severity === 'critical').length,\r\n        high: events.filter(e => e.severity === 'high').length,\r\n        medium: events.filter(e => e.severity === 'medium').length,\r\n        low: events.filter(e => e.severity === 'low').length\r\n      }\r\n    }\r\n\r\n    await this.storage.setItem('security_audit_metadata', metadata, true)\r\n  }\r\n\r\n  /**\r\n   * セキュリティイベントを検索・フィルタリング\r\n   */\r\n  async searchEvents(filter: SecurityAuditFilter = {}): Promise<SecurityAuditEvent[]> {\r\n    try {\r\n      const allEvents = await this.storage.getItem<SecurityAuditEvent[]>('security_audit_log', true) || []\r\n      \r\n      let filteredEvents = allEvents\r\n\r\n      // 日付範囲フィルタ\r\n      if (filter.startDate) {\r\n        filteredEvents = filteredEvents.filter(event => \r\n          new Date(event.timestamp) >= filter.startDate!\r\n        )\r\n      }\r\n      \r\n      if (filter.endDate) {\r\n        filteredEvents = filteredEvents.filter(event => \r\n          new Date(event.timestamp) <= filter.endDate!\r\n        )\r\n      }\r\n\r\n      // イベントタイプフィルタ\r\n      if (filter.eventTypes && filter.eventTypes.length > 0) {\r\n        filteredEvents = filteredEvents.filter(event => \r\n          filter.eventTypes!.includes(event.eventType)\r\n        )\r\n      }\r\n\r\n      // 重要度フィルタ\r\n      if (filter.severities && filter.severities.length > 0) {\r\n        filteredEvents = filteredEvents.filter(event => \r\n          filter.severities!.includes(event.severity)\r\n        )\r\n      }\r\n\r\n      // ソースフィルタ\r\n      if (filter.sources && filter.sources.length > 0) {\r\n        filteredEvents = filteredEvents.filter(event => \r\n          filter.sources!.includes(event.source)\r\n        )\r\n      }\r\n\r\n      // テキスト検索\r\n      if (filter.searchTerm) {\r\n        const searchTerm = filter.searchTerm.toLowerCase()\r\n        filteredEvents = filteredEvents.filter(event => \r\n          event.message.toLowerCase().includes(searchTerm) ||\r\n          event.eventType.toLowerCase().includes(searchTerm) ||\r\n          event.source.toLowerCase().includes(searchTerm)\r\n        )\r\n      }\r\n\r\n      return filteredEvents.sort((a, b) => \r\n        new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()\r\n      )\r\n\r\n    } catch (error) {\r\n      console.error('セキュリティイベント検索に失敗:', error)\r\n      return []\r\n    }\r\n  }\r\n\r\n  /**\r\n   * セキュリティ監査レポートを生成\r\n   */\r\n  async generateAuditReport(startDate?: Date, endDate?: Date): Promise<SecurityAuditReport> {\r\n    const now = new Date()\r\n    const start = startDate || new Date(now.getTime() - (7 * 24 * 60 * 60 * 1000)) // デフォルト: 7日前\r\n    const end = endDate || now\r\n\r\n    const events = await this.searchEvents({ startDate: start, endDate: end })\r\n\r\n    // 統計計算\r\n    const severityCounts = {\r\n      critical: events.filter(e => e.severity === 'critical').length,\r\n      high: events.filter(e => e.severity === 'high').length,\r\n      medium: events.filter(e => e.severity === 'medium').length,\r\n      low: events.filter(e => e.severity === 'low').length\r\n    }\r\n\r\n    const eventTypeCount = new Map<string, number>()\r\n    const sourceCount = new Map<string, number>()\r\n\r\n    events.forEach(event => {\r\n      eventTypeCount.set(event.eventType, (eventTypeCount.get(event.eventType) || 0) + 1)\r\n      sourceCount.set(event.source, (sourceCount.get(event.source) || 0) + 1)\r\n    })\r\n\r\n    const topEventTypes = Array.from(eventTypeCount.entries())\r\n      .map(([type, count]) => ({ type, count }))\r\n      .sort((a, b) => b.count - a.count)\r\n      .slice(0, 10)\r\n\r\n    const topSources = Array.from(sourceCount.entries())\r\n      .map(([source, count]) => ({ source, count }))\r\n      .sort((a, b) => b.count - a.count)\r\n      .slice(0, 10)\r\n\r\n    // 日別トレンド計算\r\n    const severityTrend = this.calculateSeverityTrend(events, start, end)\r\n\r\n    // 推奨事項生成\r\n    const recommendations = this.generateRecommendations(events, severityCounts)\r\n\r\n    return {\r\n      generatedAt: now,\r\n      period: { start, end },\r\n      summary: {\r\n        totalEvents: events.length,\r\n        criticalEvents: severityCounts.critical,\r\n        highSeverityEvents: severityCounts.high,\r\n        mediumSeverityEvents: severityCounts.medium,\r\n        lowSeverityEvents: severityCounts.low,\r\n        uniqueEventTypes: eventTypeCount.size,\r\n        uniqueSources: sourceCount.size\r\n      },\r\n      topEventTypes,\r\n      topSources,\r\n      severityTrend,\r\n      recommendations,\r\n      events: events.slice(0, 100) // 最新100件のみ\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 重要度別トレンドを計算\r\n   */\r\n  private calculateSeverityTrend(\r\n    events: SecurityAuditEvent[], \r\n    startDate: Date, \r\n    endDate: Date\r\n  ): Array<{ date: string; critical: number; high: number; medium: number; low: number }> {\r\n    const trend: Array<{ date: string; critical: number; high: number; medium: number; low: number }> = []\r\n    const msPerDay = 24 * 60 * 60 * 1000\r\n    \r\n    for (let date = new Date(startDate); date <= endDate; date.setTime(date.getTime() + msPerDay)) {\r\n      const dateStr = date.toISOString().split('T')[0]\r\n      const dayEvents = events.filter(event => \r\n        event.timestamp.toISOString().split('T')[0] === dateStr\r\n      )\r\n      \r\n      trend.push({\r\n        date: dateStr,\r\n        critical: dayEvents.filter(e => e.severity === 'critical').length,\r\n        high: dayEvents.filter(e => e.severity === 'high').length,\r\n        medium: dayEvents.filter(e => e.severity === 'medium').length,\r\n        low: dayEvents.filter(e => e.severity === 'low').length\r\n      })\r\n    }\r\n    \r\n    return trend\r\n  }\r\n\r\n  /**\r\n   * セキュリティ推奨事項を生成\r\n   */\r\n  private generateRecommendations(\r\n    events: SecurityAuditEvent[], \r\n    severityCounts: Record<string, number>\r\n  ): string[] {\r\n    const recommendations: string[] = []\r\n\r\n    // クリティカルイベントの分析\r\n    if (severityCounts.critical > 0) {\r\n      recommendations.push('🚨 クリティカルなセキュリティイベントが検出されました。即座に対応が必要です。')\r\n    }\r\n\r\n    // 頻発イベントの分析\r\n    const eventTypeCount = new Map<string, number>()\r\n    events.forEach(event => {\r\n      eventTypeCount.set(event.eventType, (eventTypeCount.get(event.eventType) || 0) + 1)\r\n    })\r\n\r\n    const frequentEvents = Array.from(eventTypeCount.entries())\r\n      .filter(([, count]) => count > 10)\r\n      .sort((a, b) => b[1] - a[1])\r\n\r\n    if (frequentEvents.length > 0) {\r\n      recommendations.push(`⚠️ 頻発するイベント: ${frequentEvents[0][0]} (${frequentEvents[0][1]}回)。パターンを分析し、根本原因を調査してください。`)\r\n    }\r\n\r\n    // ブルートフォース攻撃の検出\r\n    const rateLimitEvents = events.filter(e => e.eventType.includes('rate_limit'))\r\n    if (rateLimitEvents.length > 20) {\r\n      recommendations.push('🛡️ 大量のレート制限違反が検出されました。ブルートフォース攻撃の可能性があります。')\r\n    }\r\n\r\n    // XSS攻撃の検出\r\n    const xssEvents = events.filter(e => e.eventType.includes('xss') || e.eventType.includes('script_injection'))\r\n    if (xssEvents.length > 0) {\r\n      recommendations.push('🚫 XSS攻撃の試行が検出されました。入力検証とCSPの強化を検討してください。')\r\n    }\r\n\r\n    // 開発者ツールの過度な使用\r\n    const devToolsEvents = events.filter(e => e.eventType === 'devtools_opened')\r\n    if (devToolsEvents.length > 50) {\r\n      recommendations.push('🔧 開発者ツールの頻繁な使用が検出されました。本番環境での監視を強化することを推奨します。')\r\n    }\r\n\r\n    // デフォルト推奨事項\r\n    if (recommendations.length === 0) {\r\n      recommendations.push('✅ 現在のセキュリティ状態は良好です。継続的な監視を続けてください。')\r\n    }\r\n\r\n    return recommendations\r\n  }\r\n\r\n  /**\r\n   * 自動フラッシュを開始\r\n   */\r\n  private startAutoFlush(): void {\r\n    setInterval(() => {\r\n      if (this.eventQueue.length > 0) {\r\n        this.flushQueue()\r\n      }\r\n    }, this.config.autoFlushInterval)\r\n  }\r\n\r\n  /**\r\n   * ページアンロード時のハンドラ設定\r\n   */\r\n  private setupUnloadHandler(): void {\r\n    window.addEventListener('beforeunload', () => {\r\n      // 同期的にフラッシュ（制限あり）\r\n      if (this.eventQueue.length > 0) {\r\n        try {\r\n          // 緊急時のためのsendBeacon API使用（利用可能な場合）\r\n          if (navigator.sendBeacon) {\r\n            const data = JSON.stringify(this.eventQueue)\r\n            navigator.sendBeacon('/api/security-events', data)\r\n          } else {\r\n            // フォールバック: 同期XHR（非推奨だが緊急時）\r\n            this.flushQueue()\r\n          }\r\n        } catch (error) {\r\n          console.warn('ページアンロード時のログフラッシュに失敗:', error)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 監査ログをエクスポート\r\n   */\r\n  async exportAuditLog(format: 'json' | 'csv' = 'json'): Promise<string> {\r\n    const events = await this.storage.getItem<SecurityAuditEvent[]>('security_audit_log', true) || []\r\n    \r\n    if (format === 'json') {\r\n      return JSON.stringify(events, null, 2)\r\n    } else {\r\n      // CSV形式\r\n      const headers = ['ID', 'Timestamp', 'Event Type', 'Severity', 'Source', 'Message', 'User Agent', 'Session ID']\r\n      const csvRows = [headers.join(',')]\r\n      \r\n      events.forEach(event => {\r\n        const row = [\r\n          event.id,\r\n          event.timestamp.toISOString(),\r\n          event.eventType,\r\n          event.severity,\r\n          event.source,\r\n          `\"${event.message.replace(/\"/g, '\"\"')}\"`, // CSVエスケープ\r\n          `\"${event.userAgent.replace(/\"/g, '\"\"')}\"`,\r\n          event.sessionId || ''\r\n        ]\r\n        csvRows.push(row.join(','))\r\n      })\r\n      \r\n      return csvRows.join('\\n')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 監査ログをクリア\r\n   */\r\n  async clearAuditLog(): Promise<void> {\r\n    try {\r\n      await this.storage.removeItem('security_audit_log')\r\n      await this.storage.removeItem('security_audit_metadata')\r\n      this.eventQueue = []\r\n      \r\n      // クリア操作自体をログに記録\r\n      await this.logSecurityEvent(\r\n        'audit_log_cleared',\r\n        'medium',\r\n        'security_audit_logger',\r\n        'セキュリティ監査ログがクリアされました',\r\n        { clearedAt: new Date().toISOString(), sessionId: this.sessionId }\r\n      )\r\n      \r\n      console.log('🗑️ セキュリティ監査ログがクリアされました')\r\n      \r\n    } catch (error) {\r\n      console.error('監査ログのクリアに失敗:', error)\r\n      throw error\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 設定を更新\r\n   */\r\n  updateConfig(newConfig: Partial<typeof this.config>): void {\r\n    this.config = { ...this.config, ...newConfig }\r\n    \r\n    console.log('⚙️ セキュリティ監査ログの設定が更新されました:', newConfig)\r\n  }\r\n\r\n  /**\r\n   * 現在の設定を取得\r\n   */\r\n  getConfig(): typeof this.config {\r\n    return { ...this.config }\r\n  }\r\n\r\n  /**\r\n   * 統計情報を取得\r\n   */\r\n  async getStatistics(): Promise<{\r\n    queueSize: number\r\n    totalEventsLogged: number\r\n    oldestEvent: string | null\r\n    newestEvent: string | null\r\n    sessionId: string\r\n  }> {\r\n    const metadata = await this.storage.getItem<any>('security_audit_metadata', true)\r\n    \r\n    return {\r\n      queueSize: this.eventQueue.length,\r\n      totalEventsLogged: metadata?.totalEvents || 0,\r\n      oldestEvent: metadata?.oldestEvent || null,\r\n      newestEvent: metadata?.newestEvent || null,\r\n      sessionId: this.sessionId\r\n    }\r\n  }\r\n}\r\n\r\n// 自動初期化とグローバルエラーハンドラー設定\r\nif (typeof window !== 'undefined') {\r\n  const auditLogger = SecurityAuditLogger.getInstance()\r\n\r\n  // グローバルエラーハンドラー\r\n  window.addEventListener('error', (event) => {\r\n    auditLogger.logSecurityEvent(\r\n      'javascript_error',\r\n      'medium',\r\n      'global_error_handler',\r\n      `JavaScriptエラー: ${event.message}`,\r\n      {\r\n        filename: event.filename,\r\n        lineno: event.lineno,\r\n        colno: event.colno,\r\n        error: event.error?.toString()\r\n      }\r\n    )\r\n  })\r\n\r\n  // Promise rejection ハンドラー\r\n  window.addEventListener('unhandledrejection', (event) => {\r\n    auditLogger.logSecurityEvent(\r\n      'unhandled_promise_rejection',\r\n      'medium',\r\n      'global_promise_handler',\r\n      `未処理のPromise rejection: ${event.reason}`,\r\n      {\r\n        reason: event.reason?.toString(),\r\n        stack: event.reason?.stack\r\n      }\r\n    )\r\n  })\r\n\r\n  // Console override for security monitoring\r\n  const originalConsoleError = console.error\r\n  console.error = function(...args) {\r\n    auditLogger.logSecurityEvent(\r\n      'console_error',\r\n      'low',\r\n      'console_override',\r\n      `Console Error: ${args.join(' ')}`,\r\n      { args }\r\n    )\r\n    return originalConsoleError.apply(console, args)\r\n  }\r\n}","/**\r\n * セキュリティシステム統合初期化\r\n * 全セキュリティ機能の自動設定と連携\r\n */\r\n\r\nimport { initializeSecurity } from './security-extensions'\r\nimport { SecurityInterceptor } from './xss-csrf-protection'\r\nimport { CSPManager, SecurityHeaderManager } from './csp-manager'\r\nimport { SecurityAuditLogger } from './security-audit-logger'\r\nimport { secureLocalStorage } from './security'\r\n\r\n/**\r\n * メインセキュリティシステムの初期化\r\n */\r\nexport async function initializeSecuritySystem(): Promise<void> {\r\n  try {\r\n    console.log('🛡️ セキュリティシステムを初期化中...')\r\n\r\n    // 1. 基本セキュリティ機能の初期化\r\n    initializeSecurity()\r\n\r\n    // 2. CSPとセキュリティヘッダーの設定\r\n    const cspManager = CSPManager.getInstance()\r\n    const headerManager = SecurityHeaderManager.getInstance()\r\n    \r\n    cspManager.initialize()\r\n    headerManager.initializeSecurityHeaders()\r\n\r\n    // 3. XSS/CSRF保護の初期化\r\n    const securityInterceptor = SecurityInterceptor.getInstance()\r\n    securityInterceptor.initialize()\r\n\r\n    // 4. 監査ログシステムの初期化\r\n    const auditLogger = SecurityAuditLogger.getInstance()\r\n    \r\n    // セキュリティシステム初期化完了をログ\r\n    await auditLogger.logSecurityEvent(\r\n      'security_system_initialized',\r\n      'low',\r\n      'security_init',\r\n      'セキュリティシステムが正常に初期化されました',\r\n      {\r\n        timestamp: new Date().toISOString(),\r\n        userAgent: navigator.userAgent,\r\n        url: window.location.href,\r\n        features: {\r\n          csp: true,\r\n          xssProtection: true,\r\n          csrfProtection: true,\r\n          auditLogging: true,\r\n          secureStorage: true\r\n        }\r\n      }\r\n    )\r\n\r\n    // 5. セキュリティ設定の検証\r\n    await validateSecurityConfiguration()\r\n\r\n    // 6. セキュリティイベントリスナーの設定\r\n    setupSecurityEventListeners()\r\n\r\n    // 7. 定期的なセキュリティチェックの開始\r\n    startPeriodicSecurityChecks()\r\n\r\n    console.log('✅ セキュリティシステムの初期化が完了しました')\r\n\r\n  } catch (error) {\r\n    console.error('❌ セキュリティシステム初期化に失敗:', error)\r\n    \r\n    // フォールバック: 最低限のセキュリティ機能を設定\r\n    setupFallbackSecurity()\r\n    \r\n    throw new Error(`セキュリティシステム初期化失敗: ${error instanceof Error ? error.message : String(error)}`)\r\n  }\r\n}\r\n\r\n/**\r\n * セキュリティ設定の検証\r\n */\r\nasync function validateSecurityConfiguration(): Promise<void> {\r\n  const auditLogger = SecurityAuditLogger.getInstance()\r\n  const issues: string[] = []\r\n\r\n  // HTTPS チェック\r\n  if (window.location.protocol !== 'https:' && window.location.hostname !== 'localhost') {\r\n    issues.push('HTTPS が使用されていません')\r\n  }\r\n\r\n  // Crypto API チェック\r\n  if (!window.crypto?.subtle) {\r\n    issues.push('Web Crypto API が利用できません')\r\n  }\r\n\r\n  // セキュアストレージのテスト\r\n  try {\r\n    const storage = secureLocalStorage()\r\n    await storage.setItem('__security_test__', { test: true }, true)\r\n    const retrieved = await storage.getItem('__security_test__', true)\r\n    if (!retrieved || retrieved.test !== true) {\r\n      issues.push('セキュアストレージが正常に動作していません')\r\n    }\r\n    storage.removeItem('__security_test__')\r\n  } catch (error) {\r\n    issues.push('セキュアストレージのテストに失敗しました')\r\n  }\r\n\r\n  // CSP ヘッダーの確認\r\n  const cspMeta = document.querySelector('meta[http-equiv=\"Content-Security-Policy\"]')\r\n  if (!cspMeta) {\r\n    issues.push('Content-Security-Policy が設定されていません')\r\n  }\r\n\r\n  // セキュリティヘッダーの確認\r\n  const requiredHeaders = [\r\n    'X-Content-Type-Options',\r\n    'X-Frame-Options',\r\n    'X-XSS-Protection'\r\n  ]\r\n\r\n  requiredHeaders.forEach(header => {\r\n    const meta = document.querySelector(`meta[http-equiv=\"${header}\"]`)\r\n    if (!meta) {\r\n      issues.push(`${header} ヘッダーが設定されていません`)\r\n    }\r\n  })\r\n\r\n  // 問題があればログに記録\r\n  if (issues.length > 0) {\r\n    await auditLogger.logSecurityEvent(\r\n      'security_configuration_issues',\r\n      'medium',\r\n      'security_validator',\r\n      `セキュリティ設定に問題があります: ${issues.join(', ')}`,\r\n      { issues }\r\n    )\r\n  } else {\r\n    await auditLogger.logSecurityEvent(\r\n      'security_configuration_valid',\r\n      'low',\r\n      'security_validator',\r\n      'セキュリティ設定は正常です'\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * セキュリティイベントリスナーの設定\r\n */\r\nfunction setupSecurityEventListeners(): void {\r\n  const auditLogger = SecurityAuditLogger.getInstance()\r\n\r\n  // フォーカス/ブラー イベントの監視（タブ切り替えの検出）\r\n  let isTabActive = true\r\n\r\n  document.addEventListener('visibilitychange', async () => {\r\n    if (document.hidden && isTabActive) {\r\n      isTabActive = false\r\n      await auditLogger.logSecurityEvent(\r\n        'tab_hidden',\r\n        'low',\r\n        'visibility_monitor',\r\n        'タブが非アクティブになりました'\r\n      )\r\n    } else if (!document.hidden && !isTabActive) {\r\n      isTabActive = true\r\n      await auditLogger.logSecurityEvent(\r\n        'tab_visible',\r\n        'low',\r\n        'visibility_monitor',\r\n        'タブがアクティブになりました'\r\n      )\r\n    }\r\n  })\r\n\r\n  // 右クリック禁止 (開発時は除く)\r\n  if (process.env.NODE_ENV === 'production') {\r\n    document.addEventListener('contextmenu', async (event) => {\r\n      event.preventDefault()\r\n      await auditLogger.logSecurityEvent(\r\n        'context_menu_blocked',\r\n        'low',\r\n        'context_menu_blocker',\r\n        '右クリックメニューがブロックされました',\r\n        {\r\n          target: event.target instanceof Element ? event.target.tagName : 'unknown',\r\n          coordinates: { x: event.clientX, y: event.clientY }\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n  // キーボードショートカットの監視\r\n  document.addEventListener('keydown', async (event) => {\r\n    const dangerousShortcuts = [\r\n      { key: 'F12' }, // Developer Tools\r\n      { key: 'I', ctrlKey: true, shiftKey: true }, // Developer Tools\r\n      { key: 'J', ctrlKey: true, shiftKey: true }, // Console\r\n      { key: 'U', ctrlKey: true }, // View Source\r\n      { key: 'S', ctrlKey: true, shiftKey: true }, // Save Page\r\n    ]\r\n\r\n    const isDangerous = dangerousShortcuts.some(shortcut => {\r\n      return event.key === shortcut.key &&\r\n             (!shortcut.ctrlKey || event.ctrlKey) &&\r\n             (!shortcut.shiftKey || event.shiftKey)\r\n    })\r\n\r\n    if (isDangerous && process.env.NODE_ENV === 'production') {\r\n      event.preventDefault()\r\n      await auditLogger.logSecurityEvent(\r\n        'dangerous_shortcut_blocked',\r\n        'medium',\r\n        'keyboard_monitor',\r\n        `危険なキーボードショートカットがブロックされました: ${event.key}`,\r\n        {\r\n          key: event.key,\r\n          ctrlKey: event.ctrlKey,\r\n          shiftKey: event.shiftKey,\r\n          altKey: event.altKey\r\n        }\r\n      )\r\n    }\r\n  })\r\n\r\n  // 不審なネットワーク活動の監視（Fetch API のオーバーライド）\r\n  const originalFetch = window.fetch\r\n  window.fetch = async function(input: RequestInfo | URL, init?: RequestInit) {\r\n    const url = typeof input === 'string' ? input : input.toString()\r\n    \r\n    // 外部ドメインへのリクエストを監視\r\n    if (url.startsWith('http') && !url.startsWith(window.location.origin)) {\r\n      await auditLogger.logSecurityEvent(\r\n        'external_fetch_request',\r\n        'medium',\r\n        'fetch_monitor',\r\n        `外部ドメインへのFetchリクエスト: ${url}`,\r\n        {\r\n          url,\r\n          method: init?.method || 'GET',\r\n          headers: init?.headers\r\n        }\r\n      )\r\n    }\r\n    \r\n    // 不審なパターンの検出\r\n    if (url.includes('eval') || url.includes('javascript:') || url.includes('data:')) {\r\n      await auditLogger.logSecurityEvent(\r\n        'suspicious_fetch_url',\r\n        'high',\r\n        'fetch_monitor',\r\n        `不審なFetch URL: ${url}`,\r\n        { url }\r\n      )\r\n    }\r\n    \r\n    return originalFetch.call(this, input, init)\r\n  }\r\n\r\n  // Storage イベントの監視\r\n  window.addEventListener('storage', async (event) => {\r\n    await auditLogger.logSecurityEvent(\r\n      'storage_changed',\r\n      'low',\r\n      'storage_monitor',\r\n      'LocalStorage/SessionStorageが変更されました',\r\n      {\r\n        key: event.key,\r\n        oldValue: event.oldValue?.substring(0, 100),\r\n        newValue: event.newValue?.substring(0, 100),\r\n        storageArea: event.storageArea === localStorage ? 'localStorage' : 'sessionStorage'\r\n      }\r\n    )\r\n  })\r\n\r\n  // beforeunload イベントの監視（不正な離脱の検出）\r\n  window.addEventListener('beforeunload', async () => {\r\n    await auditLogger.logSecurityEvent(\r\n      'page_unload',\r\n      'low',\r\n      'unload_monitor',\r\n      'ページが閉じられようとしています'\r\n    )\r\n  })\r\n}\r\n\r\n/**\r\n * 定期的なセキュリティチェック\r\n */\r\nfunction startPeriodicSecurityChecks(): void {\r\n  const auditLogger = SecurityAuditLogger.getInstance()\r\n\r\n  // 30秒ごとの軽量チェック\r\n  setInterval(async () => {\r\n    try {\r\n      // メモリ使用量チェック\r\n      if ('memory' in performance) {\r\n        const memory = (performance as any).memory\r\n        const usedMB = Math.round(memory.usedJSHeapSize / 1024 / 1024)\r\n        const limitMB = Math.round(memory.jsHeapSizeLimit / 1024 / 1024)\r\n        const usage = (usedMB / limitMB) * 100\r\n\r\n        if (usage > 90) {\r\n          await auditLogger.logSecurityEvent(\r\n            'high_memory_usage',\r\n            'medium',\r\n            'periodic_check',\r\n            `メモリ使用率が高いです: ${usage.toFixed(1)}%`,\r\n            { usedMB, limitMB, usage }\r\n          )\r\n        }\r\n      }\r\n\r\n      // DOM の異常な変更チェック\r\n      const scriptTags = document.querySelectorAll('script[src]')\r\n      const externalScripts = Array.from(scriptTags).filter(script => {\r\n        const src = script.getAttribute('src')\r\n        return src && !src.startsWith(window.location.origin) && !src.startsWith('/')\r\n      })\r\n\r\n      if (externalScripts.length > 5) { // 閾値: 5個以上の外部スクリプト\r\n        await auditLogger.logSecurityEvent(\r\n          'excessive_external_scripts',\r\n          'medium',\r\n          'periodic_check',\r\n          `過度の外部スクリプトが検出されました: ${externalScripts.length}個`,\r\n          {\r\n            count: externalScripts.length,\r\n            sources: externalScripts.map(s => s.getAttribute('src')).slice(0, 10)\r\n          }\r\n        )\r\n      }\r\n\r\n    } catch (error) {\r\n      console.warn('定期セキュリティチェック中にエラー:', error)\r\n    }\r\n  }, 30000)\r\n\r\n  // 5分ごとの詳細チェック\r\n  setInterval(async () => {\r\n    try {\r\n      // LocalStorage のサイズチェック\r\n      let totalSize = 0\r\n      for (const key in localStorage) {\r\n        if (localStorage.hasOwnProperty(key)) {\r\n          totalSize += localStorage[key].length + key.length\r\n        }\r\n      }\r\n\r\n      const sizeMB = totalSize / (1024 * 1024)\r\n      if (sizeMB > 5) { // 5MB以上\r\n        await auditLogger.logSecurityEvent(\r\n          'large_localstorage_usage',\r\n          'low',\r\n          'periodic_check',\r\n          `LocalStorageの使用量が大きいです: ${sizeMB.toFixed(2)}MB`\r\n        )\r\n      }\r\n\r\n      // セキュリティ設定の再検証\r\n      await validateSecurityConfiguration()\r\n\r\n    } catch (error) {\r\n      console.warn('詳細セキュリティチェック中にエラー:', error)\r\n    }\r\n  }, 5 * 60 * 1000)\r\n\r\n  // 1時間ごとのセキュリティレポート\r\n  setInterval(async () => {\r\n    try {\r\n      const report = await auditLogger.generateAuditReport(\r\n        new Date(Date.now() - 60 * 60 * 1000), // 1時間前から\r\n        new Date()\r\n      )\r\n\r\n      if (report.summary.totalEvents > 0) {\r\n        console.log('📊 セキュリティ時間レポート:', {\r\n          期間: '過去1時間',\r\n          総イベント数: report.summary.totalEvents,\r\n          クリティカル: report.summary.criticalEvents,\r\n          高: report.summary.highSeverityEvents,\r\n          中: report.summary.mediumSeverityEvents,\r\n          低: report.summary.lowSeverityEvents,\r\n          推奨事項: report.recommendations\r\n        })\r\n      }\r\n\r\n    } catch (error) {\r\n      console.warn('セキュリティレポート生成中にエラー:', error)\r\n    }\r\n  }, 60 * 60 * 1000)\r\n}\r\n\r\n/**\r\n * フォールバックセキュリティの設定\r\n */\r\nfunction setupFallbackSecurity(): void {\r\n  console.warn('⚠️ フォールバックセキュリティを設定中...')\r\n\r\n  // 最低限のXSS保護\r\n  const originalInnerHTML = Element.prototype.innerHTML\r\n  Object.defineProperty(Element.prototype, 'innerHTML', {\r\n    set(value: string) {\r\n      if (typeof value === 'string') {\r\n        // 基本的なXSS保護\r\n        const sanitized = value\r\n          .replace(/<script[^>]*>.*?<\\/script>/gi, '')\r\n          .replace(/javascript:/gi, '')\r\n          .replace(/on\\w+\\s*=/gi, '')\r\n        \r\n        originalInnerHTML.call(this, sanitized)\r\n      } else {\r\n        originalInnerHTML.call(this, value)\r\n      }\r\n    },\r\n    get() {\r\n      return originalInnerHTML.call(this)\r\n    }\r\n  })\r\n\r\n  // 基本的なCSRF保護\r\n  const forms = document.querySelectorAll('form')\r\n  forms.forEach(form => {\r\n    if (!form.querySelector('input[name=\"csrf_token\"]')) {\r\n      const csrfInput = document.createElement('input')\r\n      csrfInput.type = 'hidden'\r\n      csrfInput.name = 'csrf_token'\r\n      csrfInput.value = Math.random().toString(36).substr(2, 15)\r\n      form.appendChild(csrfInput)\r\n    }\r\n  })\r\n\r\n  console.log('✅ フォールバックセキュリティが設定されました')\r\n}\r\n\r\n/**\r\n * セキュリティシステムの状態確認\r\n */\r\nexport async function getSecuritySystemStatus(): Promise<{\r\n  initialized: boolean\r\n  features: Record<string, boolean>\r\n  issues: string[]\r\n  recommendations: string[]\r\n}> {\r\n  const issues: string[] = []\r\n  const recommendations: string[] = []\r\n\r\n  // 各機能の状態確認\r\n  const features = {\r\n    https: window.location.protocol === 'https:' || window.location.hostname === 'localhost',\r\n    cryptoApi: !!(window.crypto && window.crypto.subtle),\r\n    csp: !!document.querySelector('meta[http-equiv=\"Content-Security-Policy\"]'),\r\n    xFrameOptions: !!document.querySelector('meta[http-equiv=\"X-Frame-Options\"]'),\r\n    contentTypeOptions: !!document.querySelector('meta[http-equiv=\"X-Content-Type-Options\"]'),\r\n    secureStorage: true, // secureLocalStorage() の存在確認\r\n    auditLogging: true,  // SecurityAuditLogger の存在確認\r\n    xssProtection: true, // XSSProtection の存在確認\r\n    csrfProtection: true // CSRFProtection の存在確認\r\n  }\r\n\r\n  // 問題の特定\r\n  if (!features.https) {\r\n    issues.push('HTTPS が使用されていません')\r\n    recommendations.push('本番環境では HTTPS を使用してください')\r\n  }\r\n\r\n  if (!features.cryptoApi) {\r\n    issues.push('Web Crypto API が利用できません')\r\n    recommendations.push('モダンなブラウザを使用することを推奨します')\r\n  }\r\n\r\n  if (!features.csp) {\r\n    issues.push('Content-Security-Policy が設定されていません')\r\n    recommendations.push('CSP ヘッダーを設定してください')\r\n  }\r\n\r\n  const initialized = issues.length === 0\r\n\r\n  return {\r\n    initialized,\r\n    features,\r\n    issues,\r\n    recommendations\r\n  }\r\n}\r\n\r\n/**\r\n * セキュリティシステムのデバッグ情報出力\r\n */\r\nexport function debugSecuritySystem(): void {\r\n  console.group('🛡️ セキュリティシステム デバッグ情報')\r\n  \r\n  // CSP 情報\r\n  const cspManager = CSPManager.getInstance()\r\n  cspManager.debugCSP()\r\n\r\n  // セキュリティヘッダー情報\r\n  const headerManager = SecurityHeaderManager.getInstance()\r\n  const headerValidation = headerManager.validateSecurityHeaders()\r\n  console.log('セキュリティヘッダー:', headerValidation)\r\n\r\n  // 監査ログ統計\r\n  const auditLogger = SecurityAuditLogger.getInstance()\r\n  auditLogger.getStatistics().then(stats => {\r\n    console.log('監査ログ統計:', stats)\r\n  })\r\n\r\n  console.groupEnd()\r\n}\r\n\r\n// 自動初期化（本番環境）\r\nif (typeof window !== 'undefined' && process.env.NODE_ENV === 'production') {\r\n  document.addEventListener('DOMContentLoaded', () => {\r\n    initializeSecuritySystem().catch(error => {\r\n      console.error('セキュリティシステム自動初期化失敗:', error)\r\n    })\r\n  })\r\n}\r\n\r\n// 開発環境でのデバッグ支援\r\nif (typeof window !== 'undefined' && process.env.NODE_ENV === 'development') {\r\n  (window as any).__SECURITY_DEBUG__ = {\r\n    init: initializeSecuritySystem,\r\n    status: getSecuritySystemStatus,\r\n    debug: debugSecuritySystem\r\n  }\r\n}","/**\r\n * エラーログ管理システム\r\n * すべてのエラーを記録し、分析可能な形で保存\r\n */\r\n\r\nimport type { ErrorInfo } from './ErrorHandler'\r\n\r\nexport interface LogEntry {\r\n  id: string\r\n  timestamp: number\r\n  errorInfo: ErrorInfo\r\n  context?: Record<string, any>\r\n  sessionId?: string\r\n  userId?: string\r\n  buildVersion?: string\r\n  source: 'user' | 'system' | 'auto' // ログの発生源\r\n  correlationId?: string // 関連するエラーの結びつけ\r\n  resolved?: boolean // 解決済みかどうか\r\n  resolvedBy?: string // 解決方法\r\n  impact?: 'low' | 'medium' | 'high' | 'critical' // ビジネスインパクト\r\n}\r\n\r\nexport interface WarningEntry {\r\n  id: string\r\n  timestamp: number\r\n  message: string\r\n  component?: string\r\n  trace?: string\r\n}\r\n\r\nexport class ErrorLogger {\r\n  private logs: LogEntry[] = []\r\n  private warnings: WarningEntry[] = []\r\n  private maxLogs = 1000\r\n  private logRotationSize = 100\r\n  private storageKey = 'game_error_logs'\r\n  private warningStorageKey = 'game_warning_logs'\r\n  private analyticsBuffer: LogEntry[] = []\r\n  private realtimeListeners: Array<(entry: LogEntry) => void> = []\r\n  private sessionId: string\r\n  private userId?: string\r\n  private buildVersion: string\r\n  private isAnalyzing = false\r\n\r\n  constructor() {\r\n    this.sessionId = this.generateSessionId()\r\n    this.buildVersion = import.meta.env.VITE_BUILD_VERSION || 'unknown'\r\n    this.loadFromStorage()\r\n    this.startRealtimeAnalysis()\r\n  }\r\n\r\n  /**\r\n   * エラーをログに記録\r\n   */\r\n  log(errorInfo: ErrorInfo, context?: Record<string, any>, source: LogEntry['source'] = 'auto'): void {\r\n    const entry: LogEntry = {\r\n      id: this.generateId(),\r\n      timestamp: Date.now(),\r\n      errorInfo,\r\n      context,\r\n      sessionId: this.sessionId,\r\n      userId: this.userId,\r\n      buildVersion: this.buildVersion,\r\n      source,\r\n      correlationId: this.generateCorrelationId(errorInfo),\r\n      resolved: false,\r\n      impact: this.calculateBusinessImpact(errorInfo)\r\n    }\r\n\r\n    this.logs.push(entry)\r\n    this.analyticsBuffer.push(entry)\r\n    \r\n    // リアルタイムリスナーに通知\r\n    this.notifyRealtimeListeners(entry)\r\n    \r\n    // ログのローテーション\r\n    if (this.logs.length > this.maxLogs) {\r\n      this.logs = this.logs.slice(-this.maxLogs + this.logRotationSize)\r\n    }\r\n\r\n    // ストレージに保存\r\n    this.saveToStorage()\r\n\r\n    // 開発環境では詳細をコンソールに出力\r\n    if (import.meta.env.DEV) {\r\n      this.logToConsole(entry)\r\n    }\r\n    \r\n    // アラート条件のチェック\r\n    this.checkAlertConditions(entry)\r\n  }\r\n\r\n  /**\r\n   * 警告をログに記録\r\n   */\r\n  logWarning(warning: Omit<WarningEntry, 'id'>): void {\r\n    const entry: WarningEntry = {\r\n      id: this.generateId(),\r\n      ...warning\r\n    }\r\n\r\n    this.warnings.push(entry)\r\n    \r\n    // 警告のローテーション\r\n    if (this.warnings.length > this.maxLogs / 2) {\r\n      this.warnings = this.warnings.slice(-this.maxLogs / 2 + this.logRotationSize)\r\n    }\r\n\r\n    this.saveToStorage()\r\n  }\r\n\r\n  /**\r\n   * ログを取得\r\n   */\r\n  getLogs(filter?: {\r\n    severity?: ErrorInfo['severity']\r\n    category?: ErrorInfo['category']\r\n    startTime?: number\r\n    endTime?: number\r\n    limit?: number\r\n  }): LogEntry[] {\r\n    let filteredLogs = [...this.logs]\r\n\r\n    if (filter) {\r\n      if (filter.severity) {\r\n        filteredLogs = filteredLogs.filter(log => \r\n          log.errorInfo.severity === filter.severity\r\n        )\r\n      }\r\n\r\n      if (filter.category) {\r\n        filteredLogs = filteredLogs.filter(log => \r\n          log.errorInfo.category === filter.category\r\n        )\r\n      }\r\n\r\n      if (filter.startTime) {\r\n        filteredLogs = filteredLogs.filter(log => \r\n          log.timestamp >= filter.startTime!\r\n        )\r\n      }\r\n\r\n      if (filter.endTime) {\r\n        filteredLogs = filteredLogs.filter(log => \r\n          log.timestamp <= filter.endTime!\r\n        )\r\n      }\r\n\r\n      if (filter.limit) {\r\n        filteredLogs = filteredLogs.slice(-filter.limit)\r\n      }\r\n    }\r\n\r\n    return filteredLogs\r\n  }\r\n\r\n  /**\r\n   * 警告を取得\r\n   */\r\n  getWarnings(limit?: number): WarningEntry[] {\r\n    if (limit) {\r\n      return this.warnings.slice(-limit)\r\n    }\r\n    return [...this.warnings]\r\n  }\r\n\r\n  /**\r\n   * エラー統計を生成\r\n   */\r\n  getStatistics(timeRange?: { start: number; end: number }) {\r\n    const logs = timeRange \r\n      ? this.getLogs({ startTime: timeRange.start, endTime: timeRange.end })\r\n      : this.logs\r\n\r\n    const stats = {\r\n      total: logs.length,\r\n      bySeverity: {\r\n        low: 0,\r\n        medium: 0,\r\n        high: 0,\r\n        critical: 0\r\n      },\r\n      byCategory: {\r\n        vue: 0,\r\n        javascript: 0,\r\n        network: 0,\r\n        async: 0,\r\n        user: 0,\r\n        system: 0\r\n      },\r\n      errorRate: 0,\r\n      mostCommonErrors: [] as Array<{ message: string; count: number }>\r\n    }\r\n\r\n    // 集計\r\n    const errorMessages = new Map<string, number>()\r\n    \r\n    logs.forEach(log => {\r\n      stats.bySeverity[log.errorInfo.severity]++\r\n      stats.byCategory[log.errorInfo.category]++\r\n      \r\n      const message = log.errorInfo.message\r\n      errorMessages.set(message, (errorMessages.get(message) || 0) + 1)\r\n    })\r\n\r\n    // エラーレート計算（1分あたり）\r\n    if (logs.length > 0) {\r\n      const timeSpan = logs[logs.length - 1].timestamp - logs[0].timestamp\r\n      stats.errorRate = timeSpan > 0 ? (logs.length / timeSpan) * 60000 : 0\r\n    }\r\n\r\n    // 最も一般的なエラーを抽出\r\n    stats.mostCommonErrors = Array.from(errorMessages.entries())\r\n      .sort((a, b) => b[1] - a[1])\r\n      .slice(0, 5)\r\n      .map(([message, count]) => ({ message, count }))\r\n\r\n    return stats\r\n  }\r\n\r\n  /**\r\n   * 特定のパターンのエラーを検索\r\n   */\r\n  searchErrors(pattern: string | RegExp): LogEntry[] {\r\n    const regex = typeof pattern === 'string' ? new RegExp(pattern, 'i') : pattern\r\n    \r\n    return this.logs.filter(log => \r\n      regex.test(log.errorInfo.message) ||\r\n      (log.errorInfo.stack && regex.test(log.errorInfo.stack))\r\n    )\r\n  }\r\n\r\n  /**\r\n   * エラーログをエクスポート\r\n   */\r\n  export(format: 'json' | 'csv' = 'json'): string {\r\n    if (format === 'json') {\r\n      return JSON.stringify({\r\n        logs: this.logs,\r\n        warnings: this.warnings,\r\n        exported: new Date().toISOString()\r\n      }, null, 2)\r\n    }\r\n\r\n    // CSV形式\r\n    const headers = ['ID', 'Timestamp', 'Severity', 'Category', 'Message', 'Component', 'URL', 'Stack']\r\n    const rows = this.logs.map(log => [\r\n      log.id,\r\n      new Date(log.timestamp).toISOString(),\r\n      log.errorInfo.severity,\r\n      log.errorInfo.category,\r\n      `\"${log.errorInfo.message.replace(/\"/g, '\"\"')}\"`,\r\n      log.errorInfo.component || '',\r\n      log.errorInfo.url || '',\r\n      log.errorInfo.stack ? `\"${log.errorInfo.stack.replace(/\"/g, '\"\"')}\"` : ''\r\n    ])\r\n\r\n    return [headers.join(','), ...rows.map(row => row.join(','))].join('\\n')\r\n  }\r\n\r\n  /**\r\n   * ログをクリア\r\n   */\r\n  clear(): void {\r\n    this.logs = []\r\n    this.warnings = []\r\n    this.saveToStorage()\r\n  }\r\n\r\n  /**\r\n   * 古いログを削除\r\n   */\r\n  pruneOldLogs(maxAge: number): void {\r\n    const cutoff = Date.now() - maxAge\r\n    \r\n    this.logs = this.logs.filter(log => log.timestamp > cutoff)\r\n    this.warnings = this.warnings.filter(warning => warning.timestamp > cutoff)\r\n    \r\n    this.saveToStorage()\r\n  }\r\n\r\n  /**\r\n   * ストレージから読み込み\r\n   */\r\n  private loadFromStorage(): void {\r\n    try {\r\n      const logsData = localStorage.getItem(this.storageKey)\r\n      const warningsData = localStorage.getItem(this.warningStorageKey)\r\n      \r\n      if (logsData) {\r\n        this.logs = JSON.parse(logsData)\r\n      }\r\n      \r\n      if (warningsData) {\r\n        this.warnings = JSON.parse(warningsData)\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load error logs from storage:', error)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ストレージに保存\r\n   */\r\n  private saveToStorage(): void {\r\n    try {\r\n      // 最新のログのみ保存（ストレージ容量を考慮）\r\n      const recentLogs = this.logs.slice(-100)\r\n      const recentWarnings = this.warnings.slice(-50)\r\n      \r\n      localStorage.setItem(this.storageKey, JSON.stringify(recentLogs))\r\n      localStorage.setItem(this.warningStorageKey, JSON.stringify(recentWarnings))\r\n    } catch (error) {\r\n      // ストレージがいっぱいの場合は古いログを削除\r\n      if (error instanceof DOMException && error.name === 'QuotaExceededError') {\r\n        this.logs = this.logs.slice(-50)\r\n        this.warnings = this.warnings.slice(-25)\r\n        try {\r\n          this.saveToStorage()\r\n        } catch {\r\n          // それでも失敗したら諦める\r\n          console.error('Failed to save error logs to storage')\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * セッションIDを生成\r\n   */\r\n  private generateSessionId(): string {\r\n    return `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\r\n  }\r\n\r\n  /**\r\n   * 相関IDを生成\r\n   */\r\n  private generateCorrelationId(errorInfo: ErrorInfo): string {\r\n    // 同じ種類のエラーには同じ相関IDを付与\r\n    const key = `${errorInfo.category}_${errorInfo.component || 'unknown'}_${errorInfo.message.split(' ')[0]}`\r\n    let hash = 0\r\n    for (let i = 0; i < key.length; i++) {\r\n      const char = key.charCodeAt(i)\r\n      hash = ((hash << 5) - hash) + char\r\n      hash = hash & hash // 32bit整数に変換\r\n    }\r\n    return `corr_${Math.abs(hash).toString(16)}`\r\n  }\r\n\r\n  /**\r\n   * ビジネスインパクトを計算\r\n   */\r\n  private calculateBusinessImpact(errorInfo: ErrorInfo): LogEntry['impact'] {\r\n    // ゲーム関連のエラーは高インパクト\r\n    if (errorInfo.category === 'game' && errorInfo.severity === 'critical') {\r\n      return 'critical'\r\n    }\r\n    \r\n    // セキュリティエラーは高インパクト\r\n    if (errorInfo.category === 'security') {\r\n      return 'high'\r\n    }\r\n    \r\n    // ネットワークエラーは中インパクト\r\n    if (errorInfo.category === 'network') {\r\n      return 'medium'\r\n    }\r\n    \r\n    // その他は深刻度に基づく\r\n    switch (errorInfo.severity) {\r\n      case 'critical': return 'critical'\r\n      case 'high': return 'high'\r\n      case 'medium': return 'medium'\r\n      case 'low': return 'low'\r\n    }\r\n  }\r\n\r\n  /**\r\n   * リアルタイムリスナーに通知\r\n   */\r\n  private notifyRealtimeListeners(entry: LogEntry): void {\r\n    this.realtimeListeners.forEach(listener => {\r\n      try {\r\n        listener(entry)\r\n      } catch (error) {\r\n        console.warn('[ErrorLogger] Realtime listener failed:', error)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * コンソールログ出力\r\n   */\r\n  private logToConsole(entry: LogEntry): void {\r\n    const impactIcon = {\r\n      low: '🟢',\r\n      medium: '🟡',\r\n      high: '🟠',\r\n      critical: '🔴'\r\n    }[entry.impact || 'low']\r\n\r\n    console.group(`🚨 Error Log [${entry.id}] ${impactIcon}`)\r\n    console.error('Error Info:', entry.errorInfo)\r\n    console.log('Impact:', entry.impact)\r\n    console.log('Source:', entry.source)\r\n    if (entry.correlationId) {\r\n      console.log('Correlation ID:', entry.correlationId)\r\n    }\r\n    if (entry.context) {\r\n      console.log('Context:', entry.context)\r\n    }\r\n    console.groupEnd()\r\n  }\r\n\r\n  /**\r\n   * アラート条件をチェック\r\n   */\r\n  private checkAlertConditions(entry: LogEntry): void {\r\n    // 過去5分間のクリティカルエラー数をチェック\r\n    const fiveMinutesAgo = Date.now() - 5 * 60 * 1000\r\n    const recentCriticalErrors = this.logs.filter(log => \r\n      log.timestamp > fiveMinutesAgo && \r\n      log.errorInfo.severity === 'critical'\r\n    ).length\r\n\r\n    if (recentCriticalErrors >= 3) {\r\n      this.triggerAlert('critical-error-spike', {\r\n        count: recentCriticalErrors,\r\n        timespan: '5 minutes',\r\n        latestError: entry\r\n      })\r\n    }\r\n\r\n    // 同じ相関IDのエラーが連続している場合\r\n    if (entry.correlationId) {\r\n      const sameCorrelationErrors = this.logs.filter(log => \r\n        log.correlationId === entry.correlationId &&\r\n        log.timestamp > Date.now() - 2 * 60 * 1000 // 2分以内\r\n      ).length\r\n\r\n      if (sameCorrelationErrors >= 5) {\r\n        this.triggerAlert('repeated-error', {\r\n          correlationId: entry.correlationId,\r\n          count: sameCorrelationErrors,\r\n          errorType: entry.errorInfo.message\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * アラートをトリガー\r\n   */\r\n  private triggerAlert(type: string, data: any): void {\r\n    const alertEvent = new CustomEvent('app:error-alert', {\r\n      detail: { type, data, timestamp: Date.now() }\r\n    })\r\n    window.dispatchEvent(alertEvent)\r\n  }\r\n\r\n  /**\r\n   * リアルタイム分析を開始\r\n   */\r\n  private startRealtimeAnalysis(): void {\r\n    // 30秒ごとに分析バッファを処理\r\n    setInterval(() => {\r\n      if (!this.isAnalyzing && this.analyticsBuffer.length > 0) {\r\n        this.performRealtimeAnalysis()\r\n      }\r\n    }, 30000)\r\n  }\r\n\r\n  /**\r\n   * リアルタイム分析を実行\r\n   */\r\n  private async performRealtimeAnalysis(): Promise<void> {\r\n    if (this.analyticsBuffer.length === 0) return\r\n    \r\n    this.isAnalyzing = true\r\n    \r\n    try {\r\n      const buffer = [...this.analyticsBuffer]\r\n      this.analyticsBuffer = []\r\n      \r\n      // パターン分析\r\n      const patterns = this.analyzeErrorPatterns(buffer)\r\n      \r\n      // トレンド分析\r\n      const trends = this.analyzeTrends(buffer)\r\n      \r\n      // 異常検知\r\n      const anomalies = this.detectAnomalies(buffer)\r\n      \r\n      // 分析結果をイベントとして発火\r\n      const analysisEvent = new CustomEvent('app:error-analysis', {\r\n        detail: {\r\n          patterns,\r\n          trends,\r\n          anomalies,\r\n          timestamp: Date.now(),\r\n          sampleSize: buffer.length\r\n        }\r\n      })\r\n      window.dispatchEvent(analysisEvent)\r\n      \r\n    } catch (error) {\r\n      console.error('[ErrorLogger] Realtime analysis failed:', error)\r\n    } finally {\r\n      this.isAnalyzing = false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * エラーパターンを分析\r\n   */\r\n  private analyzeErrorPatterns(logs: LogEntry[]): any {\r\n    const patterns = {\r\n      byCategory: new Map<string, number>(),\r\n      byComponent: new Map<string, number>(),\r\n      byCorrelation: new Map<string, number>(),\r\n      topErrors: [] as Array<{ message: string; count: number; severity: string }>\r\n    }\r\n    \r\n    const messageCount = new Map<string, { count: number; severity: string }>()\r\n    \r\n    logs.forEach(log => {\r\n      // カテゴリ別集計\r\n      const category = log.errorInfo.category\r\n      patterns.byCategory.set(category, (patterns.byCategory.get(category) || 0) + 1)\r\n      \r\n      // コンポーネント別集計\r\n      const component = log.errorInfo.component || 'unknown'\r\n      patterns.byComponent.set(component, (patterns.byComponent.get(component) || 0) + 1)\r\n      \r\n      // 相関ID別集計\r\n      if (log.correlationId) {\r\n        patterns.byCorrelation.set(log.correlationId, (patterns.byCorrelation.get(log.correlationId) || 0) + 1)\r\n      }\r\n      \r\n      // メッセージ別集計\r\n      const message = log.errorInfo.message\r\n      const existing = messageCount.get(message) || { count: 0, severity: log.errorInfo.severity }\r\n      messageCount.set(message, { count: existing.count + 1, severity: log.errorInfo.severity })\r\n    })\r\n    \r\n    // トップエラーを抽出\r\n    patterns.topErrors = Array.from(messageCount.entries())\r\n      .sort((a, b) => b[1].count - a[1].count)\r\n      .slice(0, 5)\r\n      .map(([message, data]) => ({\r\n        message,\r\n        count: data.count,\r\n        severity: data.severity\r\n      }))\r\n    \r\n    return patterns\r\n  }\r\n\r\n  /**\r\n   * トレンド分析\r\n   */\r\n  private analyzeTrends(logs: LogEntry[]): any {\r\n    if (logs.length < 2) return null\r\n    \r\n    const timeSlots = new Map<string, number>()\r\n    const slotSize = 5 * 60 * 1000 // 5分スロット\r\n    \r\n    logs.forEach(log => {\r\n      const slot = Math.floor(log.timestamp / slotSize) * slotSize\r\n      const slotKey = new Date(slot).toISOString()\r\n      timeSlots.set(slotKey, (timeSlots.get(slotKey) || 0) + 1)\r\n    })\r\n    \r\n    const sortedSlots = Array.from(timeSlots.entries()).sort((a, b) => \r\n      new Date(a[0]).getTime() - new Date(b[0]).getTime()\r\n    )\r\n    \r\n    if (sortedSlots.length < 2) return null\r\n    \r\n    // 傾向を計算\r\n    const values = sortedSlots.map(([, count]) => count)\r\n    const trend = this.calculateTrend(values)\r\n    \r\n    return {\r\n      timeSlots: sortedSlots,\r\n      trend: trend > 0 ? 'increasing' : trend < 0 ? 'decreasing' : 'stable',\r\n      trendValue: trend\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 傾向計算（線形回帰の簡易版）\r\n   */\r\n  private calculateTrend(values: number[]): number {\r\n    const n = values.length\r\n    const sumX = (n * (n - 1)) / 2\r\n    const sumY = values.reduce((a, b) => a + b, 0)\r\n    const sumXY = values.reduce((sum, y, x) => sum + x * y, 0)\r\n    const sumXX = values.reduce((sum, _, x) => sum + x * x, 0)\r\n    \r\n    return (n * sumXY - sumX * sumY) / (n * sumXX - sumX * sumX)\r\n  }\r\n\r\n  /**\r\n   * 異常検知\r\n   */\r\n  private detectAnomalies(logs: LogEntry[]): any {\r\n    const anomalies = []\r\n    \r\n    // エラー頻度の異常\r\n    if (logs.length > 10) { // 30秒で10個以上のエラー\r\n      anomalies.push({\r\n        type: 'high_frequency',\r\n        description: 'Unusually high error frequency detected',\r\n        count: logs.length,\r\n        severity: 'high'\r\n      })\r\n    }\r\n    \r\n    // 新しいエラータイプの検出\r\n    const recentMessages = new Set(logs.map(log => log.errorInfo.message))\r\n    const historicalMessages = new Set(\r\n      this.logs.slice(0, -logs.length).map(log => log.errorInfo.message)\r\n    )\r\n    \r\n    const newMessages = Array.from(recentMessages).filter(msg => !historicalMessages.has(msg))\r\n    if (newMessages.length > 0) {\r\n      anomalies.push({\r\n        type: 'new_error_types',\r\n        description: 'New error types detected',\r\n        newErrors: newMessages,\r\n        severity: 'medium'\r\n      })\r\n    }\r\n    \r\n    return anomalies\r\n  }\r\n\r\n  /**\r\n   * リアルタイムリスナーを追加\r\n   */\r\n  addRealtimeListener(listener: (entry: LogEntry) => void): () => void {\r\n    this.realtimeListeners.push(listener)\r\n    \r\n    // リスナーを削除する関数を返す\r\n    return () => {\r\n      const index = this.realtimeListeners.indexOf(listener)\r\n      if (index !== -1) {\r\n        this.realtimeListeners.splice(index, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * エラーを解決済みとしてマーク\r\n   */\r\n  markAsResolved(errorId: string, resolvedBy: string): boolean {\r\n    const entry = this.logs.find(log => log.id === errorId)\r\n    if (entry) {\r\n      entry.resolved = true\r\n      entry.resolvedBy = resolvedBy\r\n      this.saveToStorage()\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * 相関IDで関連エラーを取得\r\n   */\r\n  getRelatedErrors(correlationId: string): LogEntry[] {\r\n    return this.logs.filter(log => log.correlationId === correlationId)\r\n  }\r\n\r\n  /**\r\n   * ユーザーIDを設定\r\n   */\r\n  setUserId(userId: string): void {\r\n    this.userId = userId\r\n  }\r\n\r\n  /**\r\n   * 高度な統計を取得\r\n   */\r\n  getAdvancedStatistics(timeRange?: { start: number; end: number }) {\r\n    const logs = timeRange \r\n      ? this.getLogs({ startTime: timeRange.start, endTime: timeRange.end })\r\n      : this.logs\r\n\r\n    const baseStats = this.getStatistics(timeRange)\r\n    \r\n    // MTTR (Mean Time To Resolution) の計算\r\n    const resolvedErrors = logs.filter(log => log.resolved)\r\n    const mttr = resolvedErrors.length > 0\r\n      ? resolvedErrors.reduce((sum, log) => {\r\n          // 解決時刻は記録されていないので、簡易的に次のエラーまでの時間を使用\r\n          return sum + (60 * 1000) // 仮の値: 1分\r\n        }, 0) / resolvedErrors.length\r\n      : 0\r\n\r\n    // インパクト別統計\r\n    const impactStats = {\r\n      low: logs.filter(log => log.impact === 'low').length,\r\n      medium: logs.filter(log => log.impact === 'medium').length,\r\n      high: logs.filter(log => log.impact === 'high').length,\r\n      critical: logs.filter(log => log.impact === 'critical').length\r\n    }\r\n\r\n    // ソース別統計\r\n    const sourceStats = {\r\n      user: logs.filter(log => log.source === 'user').length,\r\n      system: logs.filter(log => log.source === 'system').length,\r\n      auto: logs.filter(log => log.source === 'auto').length\r\n    }\r\n\r\n    return {\r\n      ...baseStats,\r\n      mttr,\r\n      impactStats,\r\n      sourceStats,\r\n      resolutionRate: logs.length > 0 ? resolvedErrors.length / logs.length : 0,\r\n      correlationGroups: this.getCorrelationGroups(logs)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 相関グループを取得\r\n   */\r\n  private getCorrelationGroups(logs: LogEntry[]): Array<{ id: string; count: number; resolved: number }> {\r\n    const groups = new Map<string, { count: number; resolved: number }>()\r\n    \r\n    logs.forEach(log => {\r\n      if (log.correlationId) {\r\n        const existing = groups.get(log.correlationId) || { count: 0, resolved: 0 }\r\n        existing.count++\r\n        if (log.resolved) {\r\n          existing.resolved++\r\n        }\r\n        groups.set(log.correlationId, existing)\r\n      }\r\n    })\r\n    \r\n    return Array.from(groups.entries())\r\n      .map(([id, stats]) => ({ id, ...stats }))\r\n      .sort((a, b) => b.count - a.count)\r\n  }\r\n\r\n  /**\r\n   * ユニークIDを生成\r\n   */\r\n  private generateId(): string {\r\n    return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\r\n  }\r\n}","/**\r\n * エラーレポートシステム\r\n * エラーを外部サービスに報告し、監視を可能にする\r\n */\r\n\r\nimport type { ErrorInfo } from './ErrorHandler'\r\n\r\nexport interface ReportOptions {\r\n  endpoint?: string\r\n  apiKey?: string\r\n  environment?: 'development' | 'staging' | 'production'\r\n  userId?: string\r\n  sessionId?: string\r\n  metadata?: Record<string, any>\r\n}\r\n\r\nexport interface ErrorReport {\r\n  errorInfo: ErrorInfo\r\n  environment: string\r\n  browser: {\r\n    name: string\r\n    version: string\r\n    platform: string\r\n  }\r\n  screen: {\r\n    width: number\r\n    height: number\r\n    pixelRatio: number\r\n  }\r\n  memory?: {\r\n    used: number\r\n    total: number\r\n    limit: number\r\n  }\r\n  sessionInfo: {\r\n    id: string\r\n    startTime: number\r\n    duration: number\r\n    pageViews: number\r\n  }\r\n  userId?: string\r\n  metadata?: Record<string, any>\r\n}\r\n\r\nexport class ErrorReporter {\r\n  private options: Required<ReportOptions>\r\n  private queue: ErrorReport[] = []\r\n  private isReporting = false\r\n  private sessionId: string\r\n  private sessionStartTime: number\r\n  private pageViews = 0\r\n  private reportInterval: number | null = null\r\n  private maxQueueSize = 50\r\n  private batchSize = 10\r\n\r\n  constructor(options: ReportOptions = {}) {\r\n    this.options = {\r\n      endpoint: import.meta.env.VITE_ERROR_REPORT_ENDPOINT || '',\r\n      apiKey: import.meta.env.VITE_ERROR_REPORT_API_KEY || '',\r\n      environment: (import.meta.env.MODE as any) || 'development',\r\n      userId: '',\r\n      sessionId: this.generateSessionId(),\r\n      metadata: {},\r\n      ...options\r\n    }\r\n\r\n    this.sessionId = this.options.sessionId\r\n    this.sessionStartTime = Date.now()\r\n    \r\n    // ページビューのトラッキング\r\n    this.trackPageView()\r\n    \r\n    // バッチ報告の設定\r\n    if (this.options.endpoint) {\r\n      this.startBatchReporting()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * エラーを報告キューに追加\r\n   */\r\n  report(errorInfo: ErrorInfo, additionalData?: Record<string, any>): void {\r\n    // 開発環境では報告しない（オプション）\r\n    if (this.options.environment === 'development' && !import.meta.env.VITE_FORCE_ERROR_REPORTING) {\r\n      console.log('[ErrorReporter] Skipping report in development environment')\r\n      return\r\n    }\r\n\r\n    const report: ErrorReport = {\r\n      errorInfo,\r\n      environment: this.options.environment,\r\n      browser: this.getBrowserInfo(),\r\n      screen: this.getScreenInfo(),\r\n      memory: this.getMemoryInfo(),\r\n      sessionInfo: {\r\n        id: this.sessionId,\r\n        startTime: this.sessionStartTime,\r\n        duration: Date.now() - this.sessionStartTime,\r\n        pageViews: this.pageViews\r\n      },\r\n      userId: this.options.userId,\r\n      metadata: {\r\n        ...this.options.metadata,\r\n        ...additionalData\r\n      }\r\n    }\r\n\r\n    // キューに追加\r\n    this.queue.push(report)\r\n    \r\n    // キューサイズ制限\r\n    if (this.queue.length > this.maxQueueSize) {\r\n      this.queue = this.queue.slice(-this.maxQueueSize)\r\n    }\r\n\r\n    // 緊急度が高いエラーは即座に報告\r\n    if (errorInfo.severity === 'critical') {\r\n      this.flushQueue()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 報告キューを送信\r\n   */\r\n  async flushQueue(): Promise<void> {\r\n    if (this.isReporting || this.queue.length === 0 || !this.options.endpoint) {\r\n      return\r\n    }\r\n\r\n    this.isReporting = true\r\n    \r\n    try {\r\n      // バッチごとに送信\r\n      while (this.queue.length > 0) {\r\n        const batch = this.queue.splice(0, this.batchSize)\r\n        await this.sendBatch(batch)\r\n      }\r\n    } catch (error) {\r\n      console.error('[ErrorReporter] Failed to send error reports:', error)\r\n      // 失敗したバッチは破棄（無限ループを防ぐため）\r\n    } finally {\r\n      this.isReporting = false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * バッチを送信\r\n   */\r\n  private async sendBatch(batch: ErrorReport[]): Promise<void> {\r\n    const payload = {\r\n      reports: batch,\r\n      timestamp: Date.now(),\r\n      apiKey: this.options.apiKey\r\n    }\r\n\r\n    const response = await fetch(this.options.endpoint, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-API-Key': this.options.apiKey\r\n      },\r\n      body: JSON.stringify(payload)\r\n    })\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to send error reports: ${response.statusText}`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ブラウザ情報を取得\r\n   */\r\n  private getBrowserInfo() {\r\n    const ua = navigator.userAgent\r\n    const browser = {\r\n      name: 'Unknown',\r\n      version: 'Unknown',\r\n      platform: navigator.platform || 'Unknown'\r\n    }\r\n\r\n    // 簡易的なブラウザ判定\r\n    if (ua.includes('Chrome')) {\r\n      browser.name = 'Chrome'\r\n      const match = ua.match(/Chrome\\/(\\d+)/)\r\n      if (match) browser.version = match[1]\r\n    } else if (ua.includes('Firefox')) {\r\n      browser.name = 'Firefox'\r\n      const match = ua.match(/Firefox\\/(\\d+)/)\r\n      if (match) browser.version = match[1]\r\n    } else if (ua.includes('Safari')) {\r\n      browser.name = 'Safari'\r\n      const match = ua.match(/Version\\/(\\d+)/)\r\n      if (match) browser.version = match[1]\r\n    } else if (ua.includes('Edge')) {\r\n      browser.name = 'Edge'\r\n      const match = ua.match(/Edge\\/(\\d+)/)\r\n      if (match) browser.version = match[1]\r\n    }\r\n\r\n    return browser\r\n  }\r\n\r\n  /**\r\n   * スクリーン情報を取得\r\n   */\r\n  private getScreenInfo() {\r\n    return {\r\n      width: window.screen.width,\r\n      height: window.screen.height,\r\n      pixelRatio: window.devicePixelRatio || 1\r\n    }\r\n  }\r\n\r\n  /**\r\n   * メモリ情報を取得（Chrome限定）\r\n   */\r\n  private getMemoryInfo() {\r\n    if ('memory' in performance) {\r\n      const memory = (performance as any).memory\r\n      return {\r\n        used: memory.usedJSHeapSize,\r\n        total: memory.totalJSHeapSize,\r\n        limit: memory.jsHeapSizeLimit\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  /**\r\n   * ページビューをトラッキング\r\n   */\r\n  private trackPageView(): void {\r\n    this.pageViews++\r\n    \r\n    // SPAのルート変更を検知\r\n    const pushState = history.pushState\r\n    history.pushState = (...args) => {\r\n      this.pageViews++\r\n      return pushState.apply(history, args)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * バッチ報告を開始\r\n   */\r\n  private startBatchReporting(): void {\r\n    // 30秒ごとにキューを送信\r\n    this.reportInterval = window.setInterval(() => {\r\n      this.flushQueue()\r\n    }, 30000)\r\n\r\n    // ページ離脱時にキューを送信\r\n    window.addEventListener('beforeunload', () => {\r\n      this.flushQueue()\r\n    })\r\n    \r\n    // ページ非表示時にキューを送信\r\n    document.addEventListener('visibilitychange', () => {\r\n      if (document.hidden) {\r\n        this.flushQueue()\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * セッションIDを生成\r\n   */\r\n  private generateSessionId(): string {\r\n    return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\r\n  }\r\n\r\n  /**\r\n   * ユーザーIDを設定\r\n   */\r\n  setUserId(userId: string): void {\r\n    this.options.userId = userId\r\n  }\r\n\r\n  /**\r\n   * メタデータを更新\r\n   */\r\n  updateMetadata(metadata: Record<string, any>): void {\r\n    this.options.metadata = {\r\n      ...this.options.metadata,\r\n      ...metadata\r\n    }\r\n  }\r\n\r\n  /**\r\n   * レポート統計を取得\r\n   */\r\n  getStats() {\r\n    return {\r\n      queueSize: this.queue.length,\r\n      sessionDuration: Date.now() - this.sessionStartTime,\r\n      pageViews: this.pageViews,\r\n      isReporting: this.isReporting\r\n    }\r\n  }\r\n\r\n  /**\r\n   * クリーンアップ\r\n   */\r\n  destroy(): void {\r\n    if (this.reportInterval) {\r\n      clearInterval(this.reportInterval)\r\n      this.reportInterval = null\r\n    }\r\n    \r\n    // 残りのキューを送信\r\n    this.flushQueue()\r\n  }\r\n}","/**\r\n * エラーリカバリーシステム\r\n * エラーから自動的に回復を試みる\r\n */\r\n\r\nimport type { ErrorInfo } from './ErrorHandler'\r\n\r\nexport interface RecoveryStrategy {\r\n  name: string\r\n  description: string\r\n  condition: (error: ErrorInfo) => boolean\r\n  recover: (error: ErrorInfo) => Promise<boolean>\r\n  maxRetries?: number\r\n  retryDelay?: number\r\n  priority?: number // 高いほど優先\r\n  prerequisites?: string[] // 前提条件となる戦略\r\n  rollback?: () => Promise<void> // 失敗時のロールバック\r\n  healthCheck?: () => Promise<boolean> // 復旧後の健全性チェック\r\n}\r\n\r\nexport interface RecoveryResult {\r\n  success: boolean\r\n  strategyUsed?: string\r\n  attemptsCount: number\r\n  error?: Error\r\n}\r\n\r\nexport class ErrorRecovery {\r\n  private strategies: RecoveryStrategy[] = []\r\n  private recoveryAttempts = new Map<string, number>()\r\n  private recoveryHistory: Array<{\r\n    timestamp: number\r\n    errorInfo: ErrorInfo\r\n    result: RecoveryResult\r\n  }> = []\r\n  private maxHistorySize = 100\r\n\r\n  private gameStateBackup: any = null\r\n  private performanceBaseline: { memory: number; timing: number } | null = null\r\n  \r\n  constructor() {\r\n    this.registerDefaultStrategies()\r\n    this.initializePerformanceBaseline()\r\n  }\r\n\r\n  /**\r\n   * パフォーマンスベースラインを初期化\r\n   */\r\n  private initializePerformanceBaseline(): void {\r\n    try {\r\n      const memory = (performance as any).memory?.usedJSHeapSize || 0\r\n      const timing = performance.now()\r\n      this.performanceBaseline = { memory, timing }\r\n    } catch (error) {\r\n      console.warn('[Recovery] Failed to initialize performance baseline:', error)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * デフォルトのリカバリー戦略を登録\r\n   */\r\n  private registerDefaultStrategies(): void {\r\n    // ネットワークエラーのリカバリー\r\n    this.registerStrategy({\r\n      name: 'network-retry',\r\n      description: 'ネットワーク接続の再試行と復旧',\r\n      condition: (error) => \r\n        error.category === 'network' || \r\n        error.message.includes('Failed to fetch') ||\r\n        error.message.includes('Network'),\r\n      recover: async (error) => {\r\n        console.log('[Recovery] Attempting network recovery...')\r\n        \r\n        // ネットワーク状態の診斧\r\n        const networkStatus = await this.diagnoseNetworkStatus()\r\n        \r\n        if (networkStatus.isOffline) {\r\n          await this.waitForOnline(30000) // 30秒タイムアウト\r\n        }\r\n        \r\n        // DNSキャッシュのクリアを試みる\r\n        await this.clearDNSCache()\r\n        \r\n        // 持続的な問題の場合はオフラインモードに切り替え\r\n        if (this.getRecoveryAttempts('network-retry') >= 2) {\r\n          return await this.enableOfflineMode()\r\n        }\r\n        \r\n        return networkStatus.isOnline\r\n      },\r\n      maxRetries: 3,\r\n      retryDelay: 2000,\r\n      priority: 8,\r\n      healthCheck: () => this.checkNetworkHealth()\r\n    })\r\n\r\n    // メモリ不足エラーのリカバリー\r\n    this.registerStrategy({\r\n      name: 'memory-cleanup',\r\n      description: 'メモリの最適化とクリーンアップ',\r\n      condition: (error) => \r\n        error.message.includes('out of memory') ||\r\n        error.message.includes('Maximum call stack') ||\r\n        error.category === 'performance',\r\n      recover: async (error) => {\r\n        console.log('[Recovery] Attempting memory cleanup...')\r\n        \r\n        const initialMemory = this.getCurrentMemoryUsage()\r\n        \r\n        // 段階的なメモリクリーンアップを実行\r\n        await this.performMemoryCleanup()\r\n        \r\n        const finalMemory = this.getCurrentMemoryUsage()\r\n        const memoryReduced = initialMemory - finalMemory\r\n        \r\n        console.log(`[Recovery] Memory cleanup completed. Reduced: ${(memoryReduced / 1024 / 1024).toFixed(1)}MB`)\r\n        \r\n        // 十分なメモリが解放されたかチェック\r\n        return memoryReduced > 10 * 1024 * 1024 // 10MB以上で成功\r\n      },\r\n      maxRetries: 2,\r\n      retryDelay: 1000,\r\n      priority: 7,\r\n      healthCheck: () => this.checkMemoryHealth()\r\n    })\r\n\r\n    // Vueコンポーネントエラーのリカバリー\r\n    this.registerStrategy({\r\n      name: 'vue-component-remount',\r\n      description: 'Vueコンポーネントの再マウントと状態復旧',\r\n      condition: (error) => error.category === 'vue',\r\n      recover: async (error) => {\r\n        console.log('[Recovery] Attempting Vue component recovery...')\r\n        \r\n        // コンポーネント固有のリカバリーを試みる\r\n        const componentName = error.component || 'unknown'\r\n        \r\n        // コンポーネントの状態をバックアップ\r\n        await this.backupComponentState(componentName)\r\n        \r\n        // コンポーネントの再マウント\r\n        const remountEvent = new CustomEvent('app:remount-component', {\r\n          detail: { \r\n            component: componentName,\r\n            preserveState: true,\r\n            errorId: error.fingerprint\r\n          }\r\n        })\r\n        window.dispatchEvent(remountEvent)\r\n        \r\n        // 再マウントの完了を待つ\r\n        await new Promise(resolve => setTimeout(resolve, 1000))\r\n        \r\n        // 状態を復元\r\n        await this.restoreComponentState(componentName)\r\n        \r\n        return true\r\n      },\r\n      maxRetries: 2,\r\n      retryDelay: 1000,\r\n      priority: 6,\r\n      rollback: async () => {\r\n        // 復旧に失敗した場合はページをリロード\r\n        console.log('[Recovery] Vue recovery failed, reloading page')\r\n        location.reload()\r\n      }\r\n    })\r\n\r\n    // ローカルストレージエラーのリカバリー\r\n    this.registerStrategy({\r\n      name: 'storage-cleanup',\r\n      condition: (error) => \r\n        error.message.includes('QuotaExceededError') ||\r\n        error.message.includes('storage'),\r\n      recover: async () => {\r\n        console.log('[Recovery] Attempting storage cleanup...')\r\n        \r\n        // 古いデータを削除\r\n        this.cleanupLocalStorage()\r\n        \r\n        return true\r\n      },\r\n      maxRetries: 1\r\n    })\r\n\r\n    // ゲーム状態のリカバリー\r\n    this.registerStrategy({\r\n      name: 'game-state-recovery',\r\n      description: 'ゲーム状態のバックアップからの復旧',\r\n      condition: (error) => \r\n        error.category === 'game' ||\r\n        error.message.includes('game') ||\r\n        error.message.includes('state'),\r\n      recover: async (error) => {\r\n        console.log('[Recovery] Attempting game state recovery...')\r\n        \r\n        // ゲーム状態のバックアップから復旧\r\n        const recovered = await this.restoreGameState()\r\n        \r\n        if (recovered) {\r\n          // ゲームの再初期化をトリガー\r\n          const reinitEvent = new CustomEvent('app:reinitialize-game', {\r\n            detail: { reason: 'error-recovery', errorId: error.fingerprint }\r\n          })\r\n          window.dispatchEvent(reinitEvent)\r\n          \r\n          return true\r\n        }\r\n        \r\n        return false\r\n      },\r\n      maxRetries: 1,\r\n      priority: 9,\r\n      prerequisites: ['memory-cleanup'],\r\n      rollback: async () => {\r\n        // ゲーム状態の復旧に失敗した場合は新しいゲームを始める\r\n        const newGameEvent = new CustomEvent('app:start-new-game', {\r\n          detail: { reason: 'recovery-failed' }\r\n        })\r\n        window.dispatchEvent(newGameEvent)\r\n      }\r\n    })\r\n\r\n    // 非同期エラーのリカバリー\r\n    this.registerStrategy({\r\n      name: 'async-retry',\r\n      description: '非同期処理の再試行',\r\n      condition: (error) => \r\n        error.category === 'async' &&\r\n        !error.message.includes('Network'),\r\n      recover: async (error) => {\r\n        console.log('[Recovery] Attempting async operation retry...')\r\n        \r\n        // 指数バックオフで再試行\r\n        const attempt = this.getRecoveryAttempts('async-retry')\r\n        const delay = Math.min(1000 * Math.pow(2, attempt), 10000)\r\n        \r\n        await new Promise(resolve => setTimeout(resolve, delay))\r\n        \r\n        // アプリケーションに再試行を通知\r\n        const retryEvent = new CustomEvent('app:retry-async-operation', {\r\n          detail: { \r\n            originalError: error,\r\n            attempt: attempt + 1\r\n          }\r\n        })\r\n        window.dispatchEvent(retryEvent)\r\n        \r\n        return true\r\n      },\r\n      maxRetries: 3,\r\n      retryDelay: 1000,\r\n      priority: 4\r\n    })\r\n\r\n    // セキュリティエラーのリカバリー\r\n    this.registerStrategy({\r\n      name: 'security-fallback',\r\n      description: 'セキュリティ制限を回避するフォールバック',\r\n      condition: (error) => \r\n        error.category === 'security' ||\r\n        error.message.includes('CORS') ||\r\n        error.message.includes('blocked'),\r\n      recover: async (error) => {\r\n        console.log('[Recovery] Attempting security fallback...')\r\n        \r\n        // 安全なフォールバックモードに切り替え\r\n        const fallbackEvent = new CustomEvent('app:enable-security-fallback', {\r\n          detail: { reason: error.message }\r\n        })\r\n        window.dispatchEvent(fallbackEvent)\r\n        \r\n        return true\r\n      },\r\n      maxRetries: 1,\r\n      priority: 5\r\n    })\r\n  }\r\n\r\n  /**\r\n   * リカバリー戦略を登録\r\n   */\r\n  registerStrategy(strategy: RecoveryStrategy): void {\r\n    // プライオリティによるソートで挿入\r\n    const priority = strategy.priority || 0\r\n    const insertIndex = this.strategies.findIndex(s => (s.priority || 0) < priority)\r\n    \r\n    if (insertIndex === -1) {\r\n      this.strategies.push(strategy)\r\n    } else {\r\n      this.strategies.splice(insertIndex, 0, strategy)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * エラーからの回復を試みる\r\n   */\r\n  async tryRecover(errorInfo: ErrorInfo): Promise<RecoveryResult> {\r\n    console.log('[Recovery] Attempting recovery for error:', errorInfo.message)\r\n    \r\n    // 適用可能な戦略を探す\r\n    for (const strategy of this.strategies) {\r\n      if (strategy.condition(errorInfo)) {\r\n        const attempts = this.getRecoveryAttempts(strategy.name)\r\n        const maxRetries = strategy.maxRetries || 1\r\n        \r\n        if (attempts >= maxRetries) {\r\n          console.log(`[Recovery] Max retries reached for strategy: ${strategy.name}`)\r\n          continue\r\n        }\r\n        \r\n        try {\r\n          // リトライ遅延\r\n          if (attempts > 0 && strategy.retryDelay) {\r\n            await new Promise(resolve => setTimeout(resolve, strategy.retryDelay))\r\n          }\r\n          \r\n          // リカバリー実行\r\n          this.incrementRecoveryAttempts(strategy.name)\r\n          const success = await strategy.recover()\r\n          \r\n          const result: RecoveryResult = {\r\n            success,\r\n            strategyUsed: strategy.name,\r\n            attemptsCount: attempts + 1\r\n          }\r\n          \r\n          // 履歴に記録\r\n          this.addToHistory(errorInfo, result)\r\n          \r\n          if (success) {\r\n            console.log(`[Recovery] Successfully recovered using strategy: ${strategy.name}`)\r\n            this.resetRecoveryAttempts(strategy.name)\r\n          }\r\n          \r\n          return result\r\n        } catch (error) {\r\n          console.error(`[Recovery] Strategy ${strategy.name} failed:`, error)\r\n          \r\n          const result: RecoveryResult = {\r\n            success: false,\r\n            strategyUsed: strategy.name,\r\n            attemptsCount: attempts + 1,\r\n            error: error as Error\r\n          }\r\n          \r\n          this.addToHistory(errorInfo, result)\r\n          return result\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 適用可能な戦略がない\r\n    const result: RecoveryResult = {\r\n      success: false,\r\n      attemptsCount: 0\r\n    }\r\n    \r\n    this.addToHistory(errorInfo, result)\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * オンラインになるまで待機\r\n   */\r\n  private async waitForOnline(timeout = 30000): Promise<void> {\r\n    if (navigator.onLine) return\r\n    \r\n    return new Promise((resolve) => {\r\n      const handler = () => {\r\n        window.removeEventListener('online', handler)\r\n        resolve()\r\n      }\r\n      \r\n      window.addEventListener('online', handler)\r\n      \r\n      // タイムアウト設定\r\n      setTimeout(() => {\r\n        window.removeEventListener('online', handler)\r\n        resolve()\r\n      }, timeout)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * イベントリスナーのクリーンアップ\r\n   */\r\n  private cleanupEventListeners(): void {\r\n    // カスタムイベントのクリーンアップフラグを送信\r\n    const event = new CustomEvent('app:cleanup-listeners')\r\n    window.dispatchEvent(event)\r\n  }\r\n\r\n  /**\r\n   * キャッシュのクリア\r\n   */\r\n  private clearCaches(): void {\r\n    // セッションストレージのクリア（一時的なデータ）\r\n    try {\r\n      sessionStorage.clear()\r\n    } catch (e) {\r\n      console.error('[Recovery] Failed to clear session storage:', e)\r\n    }\r\n    \r\n    // メモリ内のキャッシュをクリア\r\n    const event = new CustomEvent('app:clear-caches')\r\n    window.dispatchEvent(event)\r\n  }\r\n\r\n  /**\r\n   * ローカルストレージのクリーンアップ\r\n   */\r\n  private cleanupLocalStorage(): void {\r\n    try {\r\n      const keysToRemove: string[] = []\r\n      const now = Date.now()\r\n      \r\n      // 期限切れのデータを探す\r\n      for (let i = 0; i < localStorage.length; i++) {\r\n        const key = localStorage.key(i)\r\n        if (!key) continue\r\n        \r\n        try {\r\n          const value = localStorage.getItem(key)\r\n          if (!value) continue\r\n          \r\n          const data = JSON.parse(value)\r\n          if (data.expiry && data.expiry < now) {\r\n            keysToRemove.push(key)\r\n          }\r\n        } catch {\r\n          // JSON解析に失敗した場合はスキップ\r\n        }\r\n      }\r\n      \r\n      // 期限切れデータを削除\r\n      keysToRemove.forEach(key => localStorage.removeItem(key))\r\n      \r\n      // それでも容量が足りない場合は古いゲームデータを削除\r\n      if (keysToRemove.length === 0) {\r\n        const gameDataKeys = []\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n          const key = localStorage.key(i)\r\n          if (key && key.startsWith('game_')) {\r\n            gameDataKeys.push(key)\r\n          }\r\n        }\r\n        \r\n        // 最も古いデータを削除\r\n        if (gameDataKeys.length > 0) {\r\n          localStorage.removeItem(gameDataKeys[0])\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.error('[Recovery] Failed to cleanup local storage:', e)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * リカバリー試行回数を取得\r\n   */\r\n  private getRecoveryAttempts(strategyName: string): number {\r\n    return this.recoveryAttempts.get(strategyName) || 0\r\n  }\r\n\r\n  /**\r\n   * リカバリー試行回数を増加\r\n   */\r\n  private incrementRecoveryAttempts(strategyName: string): void {\r\n    const current = this.getRecoveryAttempts(strategyName)\r\n    this.recoveryAttempts.set(strategyName, current + 1)\r\n  }\r\n\r\n  /**\r\n   * リカバリー試行回数をリセット\r\n   */\r\n  private resetRecoveryAttempts(strategyName: string): void {\r\n    this.recoveryAttempts.delete(strategyName)\r\n  }\r\n\r\n  /**\r\n   * 履歴に追加\r\n   */\r\n  private addToHistory(errorInfo: ErrorInfo, result: RecoveryResult): void {\r\n    this.recoveryHistory.push({\r\n      timestamp: Date.now(),\r\n      errorInfo,\r\n      result\r\n    })\r\n    \r\n    // 履歴サイズ制限\r\n    if (this.recoveryHistory.length > this.maxHistorySize) {\r\n      this.recoveryHistory = this.recoveryHistory.slice(-this.maxHistorySize)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * リカバリー統計を取得\r\n   */\r\n  getStatistics() {\r\n    const successful = this.recoveryHistory.filter(h => h.result.success).length\r\n    const failed = this.recoveryHistory.filter(h => !h.result.success).length\r\n    const byStrategy = new Map<string, { success: number; failed: number }>()\r\n    \r\n    this.recoveryHistory.forEach(h => {\r\n      if (h.result.strategyUsed) {\r\n        const stats = byStrategy.get(h.result.strategyUsed) || { success: 0, failed: 0 }\r\n        if (h.result.success) {\r\n          stats.success++\r\n        } else {\r\n          stats.failed++\r\n        }\r\n        byStrategy.set(h.result.strategyUsed, stats)\r\n      }\r\n    })\r\n    \r\n    return {\r\n      total: this.recoveryHistory.length,\r\n      successful,\r\n      failed,\r\n      successRate: this.recoveryHistory.length > 0 ? successful / this.recoveryHistory.length : 0,\r\n      byStrategy: Object.fromEntries(byStrategy),\r\n      currentAttempts: Object.fromEntries(this.recoveryAttempts)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ネットワーク状態の診断\r\n   */\r\n  private async diagnoseNetworkStatus(): Promise<{\r\n    isOnline: boolean\r\n    isOffline: boolean\r\n    latency?: number\r\n    bandwidth?: string\r\n  }> {\r\n    const isOnline = navigator.onLine\r\n    \r\n    if (!isOnline) {\r\n      return { isOnline: false, isOffline: true }\r\n    }\r\n    \r\n    try {\r\n      // 軽量な接続テスト\r\n      const startTime = performance.now()\r\n      const response = await fetch('/favicon.ico', { \r\n        method: 'HEAD',\r\n        cache: 'no-cache'\r\n      })\r\n      const latency = performance.now() - startTime\r\n      \r\n      const connection = (navigator as any).connection\r\n      const bandwidth = connection?.effectiveType || 'unknown'\r\n      \r\n      return {\r\n        isOnline: response.ok,\r\n        isOffline: !response.ok,\r\n        latency,\r\n        bandwidth\r\n      }\r\n    } catch (error) {\r\n      return { isOnline: false, isOffline: true }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * DNSキャッシュのクリア\r\n   */\r\n  private async clearDNSCache(): Promise<void> {\r\n    // ブラウザでできる範囲でDNSキャッシュをクリア\r\n    try {\r\n      // Service Workerにキャッシュクリアを依頼\r\n      if ('serviceWorker' in navigator && navigator.serviceWorker.controller) {\r\n        navigator.serviceWorker.controller.postMessage({\r\n          type: 'CLEAR_DNS_CACHE'\r\n        })\r\n      }\r\n    } catch (error) {\r\n      console.warn('[Recovery] Could not clear DNS cache:', error)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * オフラインモードの有効化\r\n   */\r\n  private async enableOfflineMode(): Promise<boolean> {\r\n    try {\r\n      const offlineEvent = new CustomEvent('app:enable-offline-mode', {\r\n        detail: { reason: 'network-recovery-failed' }\r\n      })\r\n      window.dispatchEvent(offlineEvent)\r\n      return true\r\n    } catch (error) {\r\n      console.error('[Recovery] Failed to enable offline mode:', error)\r\n      return false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ネットワーク健全性チェック\r\n   */\r\n  private async checkNetworkHealth(): Promise<boolean> {\r\n    try {\r\n      const response = await fetch('/api/health', { \r\n        method: 'GET',\r\n        cache: 'no-cache',\r\n        signal: AbortSignal.timeout(5000)\r\n      })\r\n      return response.ok\r\n    } catch {\r\n      return navigator.onLine\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 現在のメモリ使用量を取得\r\n   */\r\n  private getCurrentMemoryUsage(): number {\r\n    try {\r\n      return (performance as any).memory?.usedJSHeapSize || 0\r\n    } catch {\r\n      return 0\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 段階的なメモリクリーンアップを実行\r\n   */\r\n  private async performMemoryCleanup(): Promise<void> {\r\n    // 段階1: 軽量なクリーンアップ\r\n    this.clearCaches()\r\n    await new Promise(resolve => setTimeout(resolve, 100))\r\n    \r\n    // 段階2: イベントリスナーのクリーンアップ\r\n    this.cleanupEventListeners()\r\n    await new Promise(resolve => setTimeout(resolve, 100))\r\n    \r\n    // 段階3: DOM要素の削除\r\n    await this.cleanupDOMElements()\r\n    \r\n    // 段階4: 強制ガベージコレクション\r\n    if ('gc' in window) {\r\n      (window as any).gc()\r\n    }\r\n    \r\n    // 段階5: メモリリークの検出と修正\r\n    await this.detectAndFixMemoryLeaks()\r\n  }\r\n\r\n  /**\r\n   * DOM要素のクリーンアップ\r\n   */\r\n  private async cleanupDOMElements(): Promise<void> {\r\n    // 非表示の要素や不要な要素を削除\r\n    const hiddenElements = document.querySelectorAll('[style*=\"display: none\"]')\r\n    hiddenElements.forEach(el => {\r\n      if (el.parentNode && !el.hasAttribute('data-keep')) {\r\n        el.parentNode.removeChild(el)\r\n      }\r\n    })\r\n    \r\n    // 古いログ要素を削除\r\n    const logElements = document.querySelectorAll('[data-log-entry]')\r\n    if (logElements.length > 100) {\r\n      const toRemove = Array.from(logElements).slice(0, logElements.length - 50)\r\n      toRemove.forEach(el => el.remove())\r\n    }\r\n  }\r\n\r\n  /**\r\n   * メモリリークの検出と修正\r\n   */\r\n  private async detectAndFixMemoryLeaks(): Promise<void> {\r\n    // 循環参照の検出と修正（簡易版）\r\n    const memoryLeakEvent = new CustomEvent('app:detect-memory-leaks')\r\n    window.dispatchEvent(memoryLeakEvent)\r\n    \r\n    // タイマーの整理\r\n    this.cleanupOrphanedTimers()\r\n  }\r\n\r\n  /**\r\n   * 孤立したタイマーのクリーンアップ\r\n   */\r\n  private cleanupOrphanedTimers(): void {\r\n    // この実装は限定的ですが、アプリケーションに通知を送ることで\r\n    // 各コンポーネントが自身のタイマーをクリーンアップできます\r\n    const timerCleanupEvent = new CustomEvent('app:cleanup-timers')\r\n    window.dispatchEvent(timerCleanupEvent)\r\n  }\r\n\r\n  /**\r\n   * メモリ健全性チェック\r\n   */\r\n  private async checkMemoryHealth(): Promise<boolean> {\r\n    const currentMemory = this.getCurrentMemoryUsage()\r\n    if (!this.performanceBaseline || currentMemory === 0) {\r\n      return true // 測定できない場合は健全とみなす\r\n    }\r\n    \r\n    const memoryIncrease = currentMemory - this.performanceBaseline.memory\r\n    const criticalThreshold = 100 * 1024 * 1024 // 100MB\r\n    \r\n    return memoryIncrease < criticalThreshold\r\n  }\r\n\r\n  /**\r\n   * コンポーネント状態のバックアップ\r\n   */\r\n  private async backupComponentState(componentName: string): Promise<void> {\r\n    const backupEvent = new CustomEvent('app:backup-component-state', {\r\n      detail: { component: componentName }\r\n    })\r\n    window.dispatchEvent(backupEvent)\r\n  }\r\n\r\n  /**\r\n   * コンポーネント状態の復元\r\n   */\r\n  private async restoreComponentState(componentName: string): Promise<void> {\r\n    const restoreEvent = new CustomEvent('app:restore-component-state', {\r\n      detail: { component: componentName }\r\n    })\r\n    window.dispatchEvent(restoreEvent)\r\n  }\r\n\r\n  /**\r\n   * ゲーム状態の復旧\r\n   */\r\n  private async restoreGameState(): Promise<boolean> {\r\n    try {\r\n      // ローカルストレージからの復旧を試みる\r\n      const savedState = localStorage.getItem('game_state_backup')\r\n      if (savedState) {\r\n        const gameState = JSON.parse(savedState)\r\n        \r\n        const restoreEvent = new CustomEvent('app:restore-game-state', {\r\n          detail: { state: gameState, source: 'backup' }\r\n        })\r\n        window.dispatchEvent(restoreEvent)\r\n        \r\n        return true\r\n      }\r\n      \r\n      // 自動保存からの復旧を試みる\r\n      const autoSave = localStorage.getItem('game_autosave')\r\n      if (autoSave) {\r\n        const gameState = JSON.parse(autoSave)\r\n        \r\n        const restoreEvent = new CustomEvent('app:restore-game-state', {\r\n          detail: { state: gameState, source: 'autosave' }\r\n        })\r\n        window.dispatchEvent(restoreEvent)\r\n        \r\n        return true\r\n      }\r\n      \r\n      return false\r\n    } catch (error) {\r\n      console.error('[Recovery] Failed to restore game state:', error)\r\n      return false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 前提条件の戦略をチェック\r\n   */\r\n  private async checkPrerequisites(strategy: RecoveryStrategy): Promise<boolean> {\r\n    if (!strategy.prerequisites || strategy.prerequisites.length === 0) {\r\n      return true\r\n    }\r\n    \r\n    for (const prerequisite of strategy.prerequisites) {\r\n      const prerequisiteStrategy = this.strategies.find(s => s.name === prerequisite)\r\n      if (!prerequisiteStrategy) {\r\n        continue\r\n      }\r\n      \r\n      // 前提条件の戦略を実行\r\n      try {\r\n        const result = await prerequisiteStrategy.recover(\r\n          {} as ErrorInfo // ダミーのエラー情報\r\n        )\r\n        if (!result) {\r\n          console.log(`[Recovery] Prerequisite ${prerequisite} failed`)\r\n          return false\r\n        }\r\n      } catch (error) {\r\n        console.error(`[Recovery] Prerequisite ${prerequisite} threw error:`, error)\r\n        return false\r\n      }\r\n    }\r\n    \r\n    return true\r\n  }\r\n\r\n  /**\r\n   * 高度なリカバリー実行（前提条件とヘルスチェック付き）\r\n   */\r\n  async tryAdvancedRecover(errorInfo: ErrorInfo): Promise<RecoveryResult> {\r\n    console.log('[Recovery] Starting advanced recovery for error:', errorInfo.message)\r\n    \r\n    // 優先度順にソートされた戦略を取得\r\n    const sortedStrategies = [...this.strategies].sort((a, b) => \r\n      (b.priority || 0) - (a.priority || 0)\r\n    )\r\n    \r\n    for (const strategy of sortedStrategies) {\r\n      if (strategy.condition(errorInfo)) {\r\n        const attempts = this.getRecoveryAttempts(strategy.name)\r\n        const maxRetries = strategy.maxRetries || 1\r\n        \r\n        if (attempts >= maxRetries) {\r\n          console.log(`[Recovery] Max retries reached for strategy: ${strategy.name}`)\r\n          continue\r\n        }\r\n        \r\n        // 前提条件をチェック\r\n        const prerequisitesMet = await this.checkPrerequisites(strategy)\r\n        if (!prerequisitesMet) {\r\n          console.log(`[Recovery] Prerequisites not met for strategy: ${strategy.name}`)\r\n          continue\r\n        }\r\n        \r\n        try {\r\n          // リトライ遅延\r\n          if (attempts > 0 && strategy.retryDelay) {\r\n            await new Promise(resolve => setTimeout(resolve, strategy.retryDelay))\r\n          }\r\n          \r\n          // リカバリー実行\r\n          this.incrementRecoveryAttempts(strategy.name)\r\n          const success = await strategy.recover(errorInfo)\r\n          \r\n          // ヘルスチェック\r\n          let healthCheckPassed = true\r\n          if (success && strategy.healthCheck) {\r\n            healthCheckPassed = await strategy.healthCheck()\r\n            if (!healthCheckPassed) {\r\n              console.log(`[Recovery] Health check failed for strategy: ${strategy.name}`)\r\n            }\r\n          }\r\n          \r\n          const result: RecoveryResult = {\r\n            success: success && healthCheckPassed,\r\n            strategyUsed: strategy.name,\r\n            attemptsCount: attempts + 1\r\n          }\r\n          \r\n          // 履歴に記録\r\n          this.addToHistory(errorInfo, result)\r\n          \r\n          if (result.success) {\r\n            console.log(`[Recovery] Successfully recovered using strategy: ${strategy.name}`)\r\n            this.resetRecoveryAttempts(strategy.name)\r\n            return result\r\n          } else if (strategy.rollback) {\r\n            // ロールバック実行\r\n            console.log(`[Recovery] Rolling back strategy: ${strategy.name}`)\r\n            await strategy.rollback()\r\n          }\r\n          \r\n          return result\r\n        } catch (error) {\r\n          console.error(`[Recovery] Strategy ${strategy.name} failed:`, error)\r\n          \r\n          if (strategy.rollback) {\r\n            try {\r\n              await strategy.rollback()\r\n            } catch (rollbackError) {\r\n              console.error(`[Recovery] Rollback failed for ${strategy.name}:`, rollbackError)\r\n            }\r\n          }\r\n          \r\n          const result: RecoveryResult = {\r\n            success: false,\r\n            strategyUsed: strategy.name,\r\n            attemptsCount: attempts + 1,\r\n            error: error as Error\r\n          }\r\n          \r\n          this.addToHistory(errorInfo, result)\r\n          return result\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 適用可能な戦略がない\r\n    const result: RecoveryResult = {\r\n      success: false,\r\n      attemptsCount: 0\r\n    }\r\n    \r\n    this.addToHistory(errorInfo, result)\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * クリーンアップ\r\n   */\r\n  clear(): void {\r\n    this.recoveryAttempts.clear()\r\n    this.recoveryHistory = []\r\n    this.gameStateBackup = null\r\n    this.performanceBaseline = null\r\n  }\r\n}","/**\r\n * 包括的エラーハンドリングシステム\r\n * あらゆるエラーを捕捉し、適切に処理する\r\n */\r\n\r\nimport { ErrorLogger } from './ErrorLogger'\r\nimport { ErrorReporter } from './ErrorReporter'\r\nimport { ErrorRecovery } from './ErrorRecovery'\r\nimport type { App } from 'vue'\r\n\r\nexport interface ErrorInfo {\r\n  message: string\r\n  stack?: string\r\n  code?: string\r\n  component?: string\r\n  props?: Record<string, any>\r\n  info?: string\r\n  url?: string\r\n  line?: number\r\n  column?: number\r\n  timestamp: number\r\n  userAgent: string\r\n  severity: 'low' | 'medium' | 'high' | 'critical'\r\n  category: 'vue' | 'javascript' | 'network' | 'async' | 'user' | 'system' | 'performance' | 'security' | 'game'\r\n  context?: {\r\n    userId?: string\r\n    sessionId?: string\r\n    gameState?: string\r\n    route?: string\r\n    action?: string\r\n    deviceInfo?: {\r\n      isMobile: boolean\r\n      screenSize: string\r\n      connection?: string\r\n    }\r\n  }\r\n  fingerprint?: string\r\n  tags?: string[]\r\n  breadcrumbs?: Array<{\r\n    timestamp: number\r\n    category: string\r\n    message: string\r\n    data?: Record<string, any>\r\n  }>\r\n}\r\n\r\nexport interface ErrorHandlerOptions {\r\n  enableLogging?: boolean\r\n  enableReporting?: boolean\r\n  enableRecovery?: boolean\r\n  logToConsole?: boolean\r\n  reportToServer?: boolean\r\n  showUserNotification?: boolean\r\n  maxErrorsPerMinute?: number\r\n  recoveryStrategies?: Map<string, () => void>\r\n}\r\n\r\nexport class GlobalErrorHandler {\r\n  private static instance: GlobalErrorHandler\r\n  private errorLogger: ErrorLogger\r\n  private errorReporter: ErrorReporter\r\n  private errorRecovery: ErrorRecovery\r\n  private options: Required<ErrorHandlerOptions>\r\n  private errorCount = 0\r\n  private errorTimestamps: number[] = []\r\n  private isInitialized = false\r\n\r\n  private constructor(options: ErrorHandlerOptions = {}) {\r\n    this.options = {\r\n      enableLogging: true,\r\n      enableReporting: true,\r\n      enableRecovery: true,\r\n      logToConsole: true,\r\n      reportToServer: false,\r\n      showUserNotification: true,\r\n      maxErrorsPerMinute: 10,\r\n      recoveryStrategies: new Map(),\r\n      ...options\r\n    }\r\n\r\n    this.errorLogger = new ErrorLogger()\r\n    this.errorReporter = new ErrorReporter()\r\n    this.errorRecovery = new ErrorRecovery()\r\n  }\r\n\r\n  static getInstance(options?: ErrorHandlerOptions): GlobalErrorHandler {\r\n    if (!GlobalErrorHandler.instance) {\r\n      GlobalErrorHandler.instance = new GlobalErrorHandler(options)\r\n    }\r\n    return GlobalErrorHandler.instance\r\n  }\r\n\r\n  /**\r\n   * Vueアプリケーションにエラーハンドラーを設定\r\n   */\r\n  setupVueErrorHandler(app: App): void {\r\n    app.config.errorHandler = (error, instance, info) => {\r\n      this.handleError({\r\n        message: error.message || 'Unknown Vue error',\r\n        stack: error.stack,\r\n        component: instance?.$options.name || 'Unknown',\r\n        props: instance?.$props,\r\n        info,\r\n        timestamp: Date.now(),\r\n        userAgent: navigator.userAgent,\r\n        severity: this.determineSeverity(error),\r\n        category: 'vue'\r\n      })\r\n    }\r\n\r\n    // Vue警告ハンドラー\r\n    app.config.warnHandler = (msg, instance, trace) => {\r\n      if (this.options.logToConsole) {\r\n        console.warn(`Vue warning: ${msg}\\nTrace: ${trace}`)\r\n      }\r\n      this.errorLogger.logWarning({\r\n        message: msg,\r\n        component: instance?.$options.name || 'Unknown',\r\n        trace,\r\n        timestamp: Date.now()\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * グローバルエラーハンドラーを設定\r\n   */\r\n  setupGlobalHandlers(): void {\r\n    if (this.isInitialized) {\r\n      console.warn('GlobalErrorHandler is already initialized')\r\n      return\r\n    }\r\n\r\n    // window.onerrorハンドラー\r\n    window.onerror = (message, source, lineno, colno, error) => {\r\n      this.handleError({\r\n        message: typeof message === 'string' ? message : 'Unknown error',\r\n        stack: error?.stack,\r\n        url: source,\r\n        line: lineno,\r\n        column: colno,\r\n        timestamp: Date.now(),\r\n        userAgent: navigator.userAgent,\r\n        severity: this.determineSeverity(error),\r\n        category: 'javascript'\r\n      })\r\n      return true // エラーの伝播を防ぐ\r\n    }\r\n\r\n    // unhandledrejectionハンドラー\r\n    window.addEventListener('unhandledrejection', (event) => {\r\n      this.handleError({\r\n        message: `Unhandled Promise rejection: ${event.reason}`,\r\n        stack: event.reason?.stack,\r\n        timestamp: Date.now(),\r\n        userAgent: navigator.userAgent,\r\n        severity: 'high',\r\n        category: 'async'\r\n      })\r\n      event.preventDefault()\r\n    })\r\n\r\n    // ネットワークエラーの監視\r\n    if ('PerformanceObserver' in window) {\r\n      const observer = new PerformanceObserver((list) => {\r\n        for (const entry of list.getEntries()) {\r\n          if (entry.entryType === 'resource' && \r\n              'responseStatus' in entry && \r\n              (entry as any).responseStatus >= 400) {\r\n            this.handleError({\r\n              message: `Network error: ${(entry as any).name}`,\r\n              url: (entry as any).name,\r\n              timestamp: Date.now(),\r\n              userAgent: navigator.userAgent,\r\n              severity: 'medium',\r\n              category: 'network'\r\n            })\r\n          }\r\n        }\r\n      })\r\n      \r\n      try {\r\n        observer.observe({ entryTypes: ['resource'] })\r\n      } catch (e) {\r\n        // PerformanceObserverがサポートされていない場合は無視\r\n      }\r\n    }\r\n\r\n    this.isInitialized = true\r\n  }\r\n\r\n  /**\r\n   * エラーを処理する中核メソッド\r\n   */\r\n  handleError(errorInfo: ErrorInfo): void {\r\n    // エラーの前処理と拡張\r\n    const enhancedErrorInfo = this.enhanceErrorInfo(errorInfo)\r\n    \r\n    // レート制限チェック\r\n    if (!this.checkRateLimit()) {\r\n      console.error('Error rate limit exceeded')\r\n      return\r\n    }\r\n\r\n    this.errorCount++\r\n\r\n    // エラーフィンガープリントの生成\r\n    enhancedErrorInfo.fingerprint = this.generateFingerprint(enhancedErrorInfo)\r\n    \r\n    // 重複エラーのチェック\r\n    if (this.isDuplicateError(enhancedErrorInfo)) {\r\n      console.log('Duplicate error detected, skipping notification')\r\n      // ログには記録するが通知はスキップ\r\n      if (this.options.enableLogging) {\r\n        this.errorLogger.log(enhancedErrorInfo)\r\n      }\r\n      return\r\n    }\r\n\r\n    // ログ記録\r\n    if (this.options.enableLogging) {\r\n      this.errorLogger.log(enhancedErrorInfo)\r\n      if (this.options.logToConsole) {\r\n        this.logStructuredError(enhancedErrorInfo)\r\n      }\r\n    }\r\n\r\n    // エラー報告\r\n    if (this.options.enableReporting && this.options.reportToServer) {\r\n      this.errorReporter.report(enhancedErrorInfo)\r\n    }\r\n\r\n    // リカバリー試行（高度なリカバリーを使用）\r\n    if (this.options.enableRecovery) {\r\n      this.errorRecovery.tryAdvancedRecover(enhancedErrorInfo)\r\n        .then(result => {\r\n          // リカバリー結果をイベントとして発火\r\n          const recoveryEvent = new CustomEvent('app:recovery-result', {\r\n            detail: {\r\n              success: result.success,\r\n              strategy: result.strategyUsed,\r\n              attempts: result.attemptsCount,\r\n              errorId: enhancedErrorInfo.fingerprint\r\n            }\r\n          })\r\n          window.dispatchEvent(recoveryEvent)\r\n          \r\n          if (result.success) {\r\n            console.log(`[ErrorHandler] Auto-recovery successful using ${result.strategyUsed}`)\r\n            \r\n            // 成功した復旧を通知\r\n            const successEvent = new CustomEvent('app:error', {\r\n              detail: {\r\n                message: `エラーから自動復旧しました (${result.strategyUsed})`,\r\n                severity: 'info',\r\n                category: 'system',\r\n                timestamp: Date.now(),\r\n                userAgent: navigator.userAgent,\r\n                context: {\r\n                  originalError: enhancedErrorInfo.fingerprint,\r\n                  recoveryStrategy: result.strategyUsed\r\n                }\r\n              } as ErrorInfo\r\n            })\r\n            window.dispatchEvent(successEvent)\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('[ErrorHandler] Recovery failed:', error)\r\n          \r\n          // 復旧失敗を記録\r\n          this.handleError({\r\n            message: `Recovery system failure: ${error.message}`,\r\n            stack: error.stack,\r\n            category: 'system',\r\n            severity: 'high',\r\n            timestamp: Date.now(),\r\n            userAgent: navigator.userAgent,\r\n            context: {\r\n              originalError: enhancedErrorInfo.fingerprint,\r\n              recoveryError: true\r\n            }\r\n          })\r\n        })\r\n    }\r\n\r\n    // ユーザー通知\r\n    if (this.options.showUserNotification && enhancedErrorInfo.severity !== 'low') {\r\n      this.notifyUser(enhancedErrorInfo)\r\n    }\r\n\r\n    // パフォーマンス監視\r\n    this.trackErrorPerformance(enhancedErrorInfo)\r\n  }\r\n\r\n  /**\r\n   * エラーの深刻度を判定\r\n   */\r\n  private determineSeverity(error: any): ErrorInfo['severity'] {\r\n    if (!error) return 'low'\r\n\r\n    const message = error.message || error.toString()\r\n    const stack = error.stack || ''\r\n    \r\n    // 致命的なエラーパターン（システム停止レベル）\r\n    if (\r\n      message.includes('Cannot read property') ||\r\n      message.includes('Cannot access before initialization') ||\r\n      message.includes('is not defined') ||\r\n      message.includes('Maximum call stack') ||\r\n      message.includes('Out of memory') ||\r\n      message.includes('Script error') ||\r\n      message.includes('ChunkLoadError') ||\r\n      stack.includes('at Object.exports') ||\r\n      (error.name === 'TypeError' && message.includes('null'))\r\n    ) {\r\n      return 'critical'\r\n    }\r\n\r\n    // 高優先度エラーパターン（機能停止レベル）\r\n    if (\r\n      message.includes('Network error') ||\r\n      message.includes('Failed to fetch') ||\r\n      message.includes('Promise rejection') ||\r\n      message.includes('Timeout') ||\r\n      message.includes('CORS') ||\r\n      message.includes('401') ||\r\n      message.includes('403') ||\r\n      message.includes('500') ||\r\n      message.includes('Game state') ||\r\n      message.includes('Save failed') ||\r\n      error.name === 'SecurityError'\r\n    ) {\r\n      return 'high'\r\n    }\r\n\r\n    // 中優先度エラーパターン（体験劣化レベル）\r\n    if (\r\n      message.includes('Warning') ||\r\n      message.includes('Deprecated') ||\r\n      message.includes('Performance') ||\r\n      message.includes('Slow') ||\r\n      message.includes('404') ||\r\n      message.includes('Render') ||\r\n      message.includes('Animation')\r\n    ) {\r\n      return 'medium'\r\n    }\r\n\r\n    return 'low'\r\n  }\r\n\r\n  /**\r\n   * レート制限チェック\r\n   */\r\n  private checkRateLimit(): boolean {\r\n    const now = Date.now()\r\n    const oneMinuteAgo = now - 60000\r\n\r\n    // 1分以上前のタイムスタンプを削除\r\n    this.errorTimestamps = this.errorTimestamps.filter(ts => ts > oneMinuteAgo)\r\n    \r\n    if (this.errorTimestamps.length >= this.options.maxErrorsPerMinute) {\r\n      return false\r\n    }\r\n\r\n    this.errorTimestamps.push(now)\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * ユーザーへの通知\r\n   */\r\n  private notifyUser(errorInfo: ErrorInfo): void {\r\n    // エラーの種類に応じたメッセージを生成\r\n    let userMessage = 'エラーが発生しました'\r\n    \r\n    switch (errorInfo.category) {\r\n      case 'network':\r\n        userMessage = 'ネットワーク接続に問題が発生しました'\r\n        break\r\n      case 'async':\r\n        userMessage = '処理中にエラーが発生しました'\r\n        break\r\n      case 'vue':\r\n        userMessage = '画面の表示でエラーが発生しました'\r\n        break\r\n      default:\r\n        userMessage = '予期しないエラーが発生しました'\r\n    }\r\n\r\n    // 実際の通知実装（後でUIコンポーネントと連携）\r\n    this.showErrorNotification(userMessage, errorInfo.severity)\r\n  }\r\n\r\n  /**\r\n   * エラー通知を表示（UIコンポーネントと連携予定）\r\n   */\r\n  private showErrorNotification(message: string, severity: ErrorInfo['severity']): void {\r\n    // 一時的にconsoleに出力\r\n    console.warn(`[User Notification] ${severity.toUpperCase()}: ${message}`)\r\n    \r\n    // TODO: 実際のUI通知コンポーネントと連携\r\n    const event = new CustomEvent('app:error', {\r\n      detail: { message, severity }\r\n    })\r\n    window.dispatchEvent(event)\r\n  }\r\n\r\n  /**\r\n   * エラー統計の取得\r\n   */\r\n  getErrorStats() {\r\n    return {\r\n      totalErrors: this.errorCount,\r\n      recentErrors: this.errorTimestamps.length,\r\n      logs: this.errorLogger.getLogs(),\r\n      isHealthy: this.errorTimestamps.length < this.options.maxErrorsPerMinute / 2\r\n    }\r\n  }\r\n\r\n  /**\r\n   * エラーハンドラーのリセット\r\n   */\r\n  reset(): void {\r\n    this.errorCount = 0\r\n    this.errorTimestamps = []\r\n    this.errorLogger.clear()\r\n  }\r\n\r\n  /**\r\n   * エラー情報を拡張\r\n   */\r\n  private enhanceErrorInfo(errorInfo: ErrorInfo): ErrorInfo {\r\n    // コンテキスト情報の自動収集\r\n    const context = {\r\n      ...errorInfo.context,\r\n      route: window.location.pathname,\r\n      deviceInfo: {\r\n        isMobile: /Mobile|Android|iPhone|iPad/.test(navigator.userAgent),\r\n        screenSize: `${window.screen.width}x${window.screen.height}`,\r\n        connection: (navigator as any).connection?.effectiveType || 'unknown'\r\n      }\r\n    }\r\n\r\n    // タグの自動生成\r\n    const tags = [\r\n      ...errorInfo.tags || [],\r\n      errorInfo.category,\r\n      errorInfo.severity,\r\n      context.deviceInfo.isMobile ? 'mobile' : 'desktop'\r\n    ]\r\n\r\n    // ブレッドクラムの追加（現在のアクション）\r\n    const breadcrumbs = [\r\n      ...errorInfo.breadcrumbs || [],\r\n      {\r\n        timestamp: Date.now(),\r\n        category: 'error',\r\n        message: 'Error captured by handler',\r\n        data: { component: errorInfo.component }\r\n      }\r\n    ]\r\n\r\n    return {\r\n      ...errorInfo,\r\n      context,\r\n      tags,\r\n      breadcrumbs\r\n    }\r\n  }\r\n\r\n  /**\r\n   * エラーフィンガープリントを生成\r\n   */\r\n  private generateFingerprint(errorInfo: ErrorInfo): string {\r\n    const key = [\r\n      errorInfo.message,\r\n      errorInfo.component || 'unknown',\r\n      errorInfo.category,\r\n      errorInfo.context?.route || 'unknown'\r\n    ].join('|')\r\n    \r\n    // 簡易ハッシュ関数\r\n    let hash = 0\r\n    for (let i = 0; i < key.length; i++) {\r\n      const char = key.charCodeAt(i)\r\n      hash = ((hash << 5) - hash) + char\r\n      hash = hash & hash // 32bit整数に変換\r\n    }\r\n    return Math.abs(hash).toString(16)\r\n  }\r\n\r\n  /**\r\n   * 重複エラーのチェック\r\n   */\r\n  private duplicateErrors = new Map<string, number>()\r\n  private isDuplicateError(errorInfo: ErrorInfo): boolean {\r\n    if (!errorInfo.fingerprint) return false\r\n    \r\n    const now = Date.now()\r\n    const lastSeen = this.duplicateErrors.get(errorInfo.fingerprint) || 0\r\n    const timeDiff = now - lastSeen\r\n    \r\n    // 同じエラーが1分以内に発生した場合は重複とみなす\r\n    if (timeDiff < 60000) {\r\n      return true\r\n    }\r\n    \r\n    this.duplicateErrors.set(errorInfo.fingerprint, now)\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * 構造化されたエラーログ出力\r\n   */\r\n  private logStructuredError(errorInfo: ErrorInfo): void {\r\n    const logData = {\r\n      message: errorInfo.message,\r\n      severity: errorInfo.severity,\r\n      category: errorInfo.category,\r\n      component: errorInfo.component,\r\n      fingerprint: errorInfo.fingerprint,\r\n      context: errorInfo.context,\r\n      tags: errorInfo.tags,\r\n      timestamp: new Date(errorInfo.timestamp).toISOString()\r\n    }\r\n\r\n    console.group(`🚨 [${errorInfo.severity.toUpperCase()}] ${errorInfo.category}`)\r\n    console.error('Message:', errorInfo.message)\r\n    console.log('Data:', logData)\r\n    if (errorInfo.stack) {\r\n      console.log('Stack:', errorInfo.stack)\r\n    }\r\n    console.groupEnd()\r\n  }\r\n\r\n  /**\r\n   * エラーパフォーマンスの追跡\r\n   */\r\n  private errorPerformanceHistory: Array<{ timestamp: number; severity: string }> = []\r\n  private trackErrorPerformance(errorInfo: ErrorInfo): void {\r\n    this.errorPerformanceHistory.push({\r\n      timestamp: Date.now(),\r\n      severity: errorInfo.severity\r\n    })\r\n\r\n    // 1時間以上前のデータを削除\r\n    const oneHourAgo = Date.now() - 3600000\r\n    this.errorPerformanceHistory = this.errorPerformanceHistory.filter(\r\n      entry => entry.timestamp > oneHourAgo\r\n    )\r\n\r\n    // アラート条件のチェック\r\n    const recentCriticalErrors = this.errorPerformanceHistory.filter(\r\n      entry => entry.severity === 'critical' && entry.timestamp > Date.now() - 300000 // 5分以内\r\n    ).length\r\n\r\n    if (recentCriticalErrors >= 3) {\r\n      this.triggerSystemAlert('Multiple critical errors detected')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * システムアラートをトリガー\r\n   */\r\n  private triggerSystemAlert(message: string): void {\r\n    console.error(`🚀 SYSTEM ALERT: ${message}`)\r\n    \r\n    // カスタムイベントを発火\r\n    const event = new CustomEvent('app:system-alert', {\r\n      detail: { message, timestamp: Date.now() }\r\n    })\r\n    window.dispatchEvent(event)\r\n  }\r\n\r\n  /**\r\n   * ブレッドクラムを追加\r\n   */\r\n  addBreadcrumb(category: string, message: string, data?: Record<string, any>): void {\r\n    // 将来的にグローバルなブレッドクラム管理を実装予定\r\n    console.log(`[Breadcrumb] ${category}: ${message}`, data)\r\n  }\r\n\r\n  /**\r\n   * エラーハンドラーの健全性チェック\r\n   */\r\n  getHealthStatus() {\r\n    const recentErrors = this.errorTimestamps.filter(\r\n      ts => ts > Date.now() - 300000 // 5分以内\r\n    ).length\r\n\r\n    const criticalErrorsRecent = this.errorPerformanceHistory.filter(\r\n      entry => entry.severity === 'critical' && entry.timestamp > Date.now() - 300000\r\n    ).length\r\n\r\n    return {\r\n      isHealthy: recentErrors < this.options.maxErrorsPerMinute / 2 && criticalErrorsRecent === 0,\r\n      recentErrorCount: recentErrors,\r\n      criticalErrorCount: criticalErrorsRecent,\r\n      totalErrors: this.errorCount,\r\n      rateLimit: {\r\n        current: this.errorTimestamps.length,\r\n        max: this.options.maxErrorsPerMinute\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * クリーンアップ\r\n   */\r\n  destroy(): void {\r\n    window.onerror = null\r\n    window.removeEventListener('unhandledrejection', () => {})\r\n    this.duplicateErrors.clear()\r\n    this.errorPerformanceHistory = []\r\n    this.reset()\r\n    this.isInitialized = false\r\n  }\r\n}","/**\r\n * デバッグ情報の安全な収集システム\r\n * プライバシーを保護しながら問題解決に必要な情報を収集\r\n */\r\n\r\nexport interface DebugInfo {\r\n  timestamp: string\r\n  sessionId: string\r\n  buildVersion: string\r\n  environment: string\r\n  \r\n  // システム情報\r\n  system: {\r\n    userAgent: string\r\n    platform: string\r\n    language: string\r\n    cookieEnabled: boolean\r\n    onLine: boolean\r\n    screenResolution: string\r\n    viewportSize: string\r\n    devicePixelRatio: number\r\n    timezone: string\r\n  }\r\n  \r\n  // パフォーマンス情報\r\n  performance: {\r\n    memory?: {\r\n      used: number\r\n      total: number\r\n      limit: number\r\n    }\r\n    timing: {\r\n      navigationStart: number\r\n      loadComplete: number\r\n      domReady: number\r\n      firstPaint?: number\r\n      firstContentfulPaint?: number\r\n    }\r\n    connection?: {\r\n      effectiveType: string\r\n      downlink: number\r\n      rtt: number\r\n    }\r\n  }\r\n  \r\n  // アプリケーション状態\r\n  application: {\r\n    url: string\r\n    referrer: string\r\n    gameState?: 'menu' | 'playing' | 'paused' | 'finished' | 'error'\r\n    routePath?: string\r\n    currentComponent?: string\r\n    activeFeatures: string[]\r\n    errorCount: number\r\n    lastError?: {\r\n      message: string\r\n      timestamp: number\r\n      severity: string\r\n    }\r\n  }\r\n  \r\n  // ブラウザ機能\r\n  features: {\r\n    localStorage: boolean\r\n    sessionStorage: boolean\r\n    webGL: boolean\r\n    webWorker: boolean\r\n    serviceWorker: boolean\r\n    notifications: boolean\r\n    geolocation: boolean\r\n    mediaDevices: boolean\r\n  }\r\n  \r\n  // 実験的機能・設定\r\n  experimental?: {\r\n    flags: Record<string, boolean>\r\n    abTests: Record<string, string>\r\n    featureToggles: Record<string, boolean>\r\n  }\r\n  \r\n  // 機密情報は含めない\r\n  // - ユーザーの個人情報\r\n  // - 認証トークン\r\n  // - セッション詳細\r\n  // - IPアドレス\r\n  // - 位置情報\r\n}\r\n\r\nexport interface CollectionOptions {\r\n  includeMemory?: boolean\r\n  includePerformance?: boolean\r\n  includeGameState?: boolean\r\n  includeExperimental?: boolean\r\n  sanitize?: boolean\r\n  maxDataSize?: number // bytes\r\n}\r\n\r\nexport class DebugInfoCollector {\r\n  private sessionId: string\r\n  private buildVersion: string\r\n  private environment: string\r\n  private gameStateProvider?: () => string\r\n  private componentProvider?: () => string\r\n  private featureProvider?: () => string[]\r\n  \r\n  constructor(\r\n    sessionId: string,\r\n    buildVersion: string = 'unknown',\r\n    environment: string = 'unknown'\r\n  ) {\r\n    this.sessionId = sessionId\r\n    this.buildVersion = buildVersion\r\n    this.environment = environment\r\n  }\r\n  \r\n  /**\r\n   * ゲーム状態プロバイダーを設定\r\n   */\r\n  setGameStateProvider(provider: () => string): void {\r\n    this.gameStateProvider = provider\r\n  }\r\n  \r\n  /**\r\n   * コンポーネントプロバイダーを設定\r\n   */\r\n  setComponentProvider(provider: () => string): void {\r\n    this.componentProvider = provider\r\n  }\r\n  \r\n  /**\r\n   * アクティブ機能プロバイダーを設定\r\n   */\r\n  setFeatureProvider(provider: () => string[]): void {\r\n    this.featureProvider = provider\r\n  }\r\n  \r\n  /**\r\n   * デバッグ情報を安全に収集\r\n   */\r\n  collect(options: CollectionOptions = {}): DebugInfo {\r\n    const opts = {\r\n      includeMemory: true,\r\n      includePerformance: true,\r\n      includeGameState: true,\r\n      includeExperimental: false,\r\n      sanitize: true,\r\n      maxDataSize: 1024 * 100, // 100KB\r\n      ...options\r\n    }\r\n    \r\n    try {\r\n      const debugInfo: DebugInfo = {\r\n        timestamp: new Date().toISOString(),\r\n        sessionId: this.sessionId,\r\n        buildVersion: this.buildVersion,\r\n        environment: this.environment,\r\n        \r\n        system: this.collectSystemInfo(),\r\n        performance: this.collectPerformanceInfo(opts),\r\n        application: this.collectApplicationInfo(opts),\r\n        features: this.collectFeatureInfo()\r\n      }\r\n      \r\n      if (opts.includeExperimental) {\r\n        debugInfo.experimental = this.collectExperimentalInfo()\r\n      }\r\n      \r\n      // データサイズの制限\r\n      if (opts.maxDataSize) {\r\n        const serialized = JSON.stringify(debugInfo)\r\n        if (serialized.length > opts.maxDataSize) {\r\n          console.warn('[DebugInfoCollector] Data size exceeds limit, truncating...')\r\n          return this.truncateData(debugInfo, opts.maxDataSize)\r\n        }\r\n      }\r\n      \r\n      // サニタイズ\r\n      if (opts.sanitize) {\r\n        return this.sanitizeData(debugInfo)\r\n      }\r\n      \r\n      return debugInfo\r\n      \r\n    } catch (error) {\r\n      console.error('[DebugInfoCollector] Failed to collect debug info:', error)\r\n      \r\n      // 最小限の情報を返す\r\n      return {\r\n        timestamp: new Date().toISOString(),\r\n        sessionId: this.sessionId,\r\n        buildVersion: this.buildVersion,\r\n        environment: this.environment,\r\n        system: {\r\n          userAgent: navigator.userAgent,\r\n          platform: navigator.platform,\r\n          language: navigator.language,\r\n          cookieEnabled: navigator.cookieEnabled,\r\n          onLine: navigator.onLine,\r\n          screenResolution: `${screen.width}x${screen.height}`,\r\n          viewportSize: `${window.innerWidth}x${window.innerHeight}`,\r\n          devicePixelRatio: window.devicePixelRatio,\r\n          timezone: Intl.DateTimeFormat().resolvedOptions().timeZone\r\n        },\r\n        performance: {\r\n          timing: {\r\n            navigationStart: 0,\r\n            loadComplete: 0,\r\n            domReady: 0\r\n          }\r\n        },\r\n        application: {\r\n          url: this.sanitizeUrl(window.location.href),\r\n          referrer: this.sanitizeUrl(document.referrer),\r\n          activeFeatures: [],\r\n          errorCount: 0\r\n        },\r\n        features: {\r\n          localStorage: false,\r\n          sessionStorage: false,\r\n          webGL: false,\r\n          webWorker: false,\r\n          serviceWorker: false,\r\n          notifications: false,\r\n          geolocation: false,\r\n          mediaDevices: false\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * システム情報を収集\r\n   */\r\n  private collectSystemInfo(): DebugInfo['system'] {\r\n    return {\r\n      userAgent: navigator.userAgent,\r\n      platform: navigator.platform,\r\n      language: navigator.language,\r\n      cookieEnabled: navigator.cookieEnabled,\r\n      onLine: navigator.onLine,\r\n      screenResolution: `${screen.width}x${screen.height}`,\r\n      viewportSize: `${window.innerWidth}x${window.innerHeight}`,\r\n      devicePixelRatio: window.devicePixelRatio,\r\n      timezone: Intl.DateTimeFormat().resolvedOptions().timeZone\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * パフォーマンス情報を収集\r\n   */\r\n  private collectPerformanceInfo(options: CollectionOptions): DebugInfo['performance'] {\r\n    const perfInfo: DebugInfo['performance'] = {\r\n      timing: {\r\n        navigationStart: performance.timing.navigationStart,\r\n        loadComplete: performance.timing.loadEventEnd - performance.timing.navigationStart,\r\n        domReady: performance.timing.domContentLoadedEventEnd - performance.timing.navigationStart\r\n      }\r\n    }\r\n    \r\n    // メモリ情報（Chrome限定）\r\n    if (options.includeMemory && 'memory' in performance) {\r\n      const memory = (performance as any).memory\r\n      perfInfo.memory = {\r\n        used: memory.usedJSHeapSize,\r\n        total: memory.totalJSHeapSize,\r\n        limit: memory.jsHeapSizeLimit\r\n      }\r\n    }\r\n    \r\n    // ペイント情報\r\n    if (options.includePerformance && 'getEntriesByType' in performance) {\r\n      try {\r\n        const paintEntries = performance.getEntriesByType('paint')\r\n        const fpEntry = paintEntries.find(entry => entry.name === 'first-paint')\r\n        const fcpEntry = paintEntries.find(entry => entry.name === 'first-contentful-paint')\r\n        \r\n        if (fpEntry) perfInfo.timing.firstPaint = fpEntry.startTime\r\n        if (fcpEntry) perfInfo.timing.firstContentfulPaint = fcpEntry.startTime\r\n      } catch (error) {\r\n        // サポートされていない場合は無視\r\n      }\r\n    }\r\n    \r\n    // 接続情報\r\n    if ('connection' in navigator) {\r\n      const connection = (navigator as any).connection\r\n      perfInfo.connection = {\r\n        effectiveType: connection.effectiveType || 'unknown',\r\n        downlink: connection.downlink || 0,\r\n        rtt: connection.rtt || 0\r\n      }\r\n    }\r\n    \r\n    return perfInfo\r\n  }\r\n  \r\n  /**\r\n   * アプリケーション情報を収集\r\n   */\r\n  private collectApplicationInfo(options: CollectionOptions): DebugInfo['application'] {\r\n    const appInfo: DebugInfo['application'] = {\r\n      url: this.sanitizeUrl(window.location.href),\r\n      referrer: this.sanitizeUrl(document.referrer),\r\n      activeFeatures: this.featureProvider ? this.featureProvider() : this.detectActiveFeatures(),\r\n      errorCount: this.getErrorCount()\r\n    }\r\n    \r\n    if (options.includeGameState && this.gameStateProvider) {\r\n      try {\r\n        appInfo.gameState = this.gameStateProvider() as any\r\n      } catch (error) {\r\n        // エラーが発生した場合は'error'状態とする\r\n        appInfo.gameState = 'error'\r\n      }\r\n    }\r\n    \r\n    if (this.componentProvider) {\r\n      try {\r\n        appInfo.currentComponent = this.componentProvider()\r\n      } catch (error) {\r\n        // 取得できない場合は無視\r\n      }\r\n    }\r\n    \r\n    // ルートパス（Vue Router等）\r\n    if (window.location.pathname) {\r\n      appInfo.routePath = window.location.pathname\r\n    }\r\n    \r\n    // 最後のエラー情報\r\n    const lastError = this.getLastError()\r\n    if (lastError) {\r\n      appInfo.lastError = lastError\r\n    }\r\n    \r\n    return appInfo\r\n  }\r\n  \r\n  /**\r\n   * ブラウザ機能情報を収集\r\n   */\r\n  private collectFeatureInfo(): DebugInfo['features'] {\r\n    return {\r\n      localStorage: this.testFeature(() => 'localStorage' in window && window.localStorage !== null),\r\n      sessionStorage: this.testFeature(() => 'sessionStorage' in window && window.sessionStorage !== null),\r\n      webGL: this.testFeature(() => this.hasWebGL()),\r\n      webWorker: this.testFeature(() => 'Worker' in window),\r\n      serviceWorker: this.testFeature(() => 'serviceWorker' in navigator),\r\n      notifications: this.testFeature(() => 'Notification' in window),\r\n      geolocation: this.testFeature(() => 'geolocation' in navigator),\r\n      mediaDevices: this.testFeature(() => 'mediaDevices' in navigator)\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 実験的機能情報を収集\r\n   */\r\n  private collectExperimentalInfo(): DebugInfo['experimental'] {\r\n    return {\r\n      flags: this.getFeatureFlags(),\r\n      abTests: this.getABTests(),\r\n      featureToggles: this.getFeatureToggles()\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 機能のテスト\r\n   */\r\n  private testFeature(test: () => boolean): boolean {\r\n    try {\r\n      return test()\r\n    } catch {\r\n      return false\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * WebGLサポートの確認\r\n   */\r\n  private hasWebGL(): boolean {\r\n    try {\r\n      const canvas = document.createElement('canvas')\r\n      return !!(canvas.getContext('webgl') || canvas.getContext('experimental-webgl'))\r\n    } catch {\r\n      return false\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * URLをサニタイズ（機密情報を除去）\r\n   */\r\n  private sanitizeUrl(url: string): string {\r\n    if (!url) return ''\r\n    \r\n    try {\r\n      const urlObj = new URL(url)\r\n      \r\n      // クエリパラメータから機密情報を除去\r\n      const sanitizedParams = new URLSearchParams()\r\n      urlObj.searchParams.forEach((value, key) => {\r\n        // トークンやIDなどの機密情報を除去\r\n        if (!this.isSensitiveParam(key)) {\r\n          sanitizedParams.set(key, value)\r\n        }\r\n      })\r\n      \r\n      return `${urlObj.origin}${urlObj.pathname}${sanitizedParams.toString() ? `?${  sanitizedParams.toString()}` : ''}`\r\n    } catch {\r\n      // URLが無効な場合はドメインのみ返す\r\n      return url.split('?')[0].split('#')[0]\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 機密パラメータの判定\r\n   */\r\n  private isSensitiveParam(key: string): boolean {\r\n    const sensitiveKeys = [\r\n      'token', 'auth', 'session', 'key', 'secret',\r\n      'password', 'pwd', 'pass', 'api_key', 'apikey',\r\n      'access_token', 'refresh_token', 'jwt', 'bearer'\r\n    ]\r\n    \r\n    return sensitiveKeys.some(sensitive => \r\n      key.toLowerCase().includes(sensitive)\r\n    )\r\n  }\r\n  \r\n  /**\r\n   * アクティブ機能を検出\r\n   */\r\n  private detectActiveFeatures(): string[] {\r\n    const features: string[] = []\r\n    \r\n    // DOM要素から機能を推測\r\n    if (document.querySelector('[data-game-canvas]')) features.push('game')\r\n    if (document.querySelector('[data-tutorial]')) features.push('tutorial')\r\n    if (document.querySelector('[data-statistics]')) features.push('statistics')\r\n    if (document.querySelector('[data-settings]')) features.push('settings')\r\n    \r\n    // ローカルストレージから機能を推測\r\n    try {\r\n      if (localStorage.getItem('game_settings')) features.push('settings-saved')\r\n      if (localStorage.getItem('game_progress')) features.push('progress-saved')\r\n      if (localStorage.getItem('tutorial_completed')) features.push('tutorial-completed')\r\n    } catch {\r\n      // アクセスできない場合は無視\r\n    }\r\n    \r\n    return features\r\n  }\r\n  \r\n  /**\r\n   * エラー数を取得\r\n   */\r\n  private getErrorCount(): number {\r\n    try {\r\n      // グローバルエラーハンドラーから統計を取得\r\n      const errorHandling = (window as any).__errorHandling\r\n      if (errorHandling?.getStatistics) {\r\n        const stats = errorHandling.getStatistics()\r\n        return stats.totalErrors || 0\r\n      }\r\n    } catch {\r\n      // 取得できない場合は0を返す\r\n    }\r\n    return 0\r\n  }\r\n  \r\n  /**\r\n   * 最後のエラー情報を取得\r\n   */\r\n  private getLastError(): DebugInfo['application']['lastError'] {\r\n    try {\r\n      const errorHandling = (window as any).__errorHandling\r\n      if (errorHandling?.getStatistics) {\r\n        const stats = errorHandling.getStatistics()\r\n        if (stats.logs && stats.logs.length > 0) {\r\n          const lastLog = stats.logs[stats.logs.length - 1]\r\n          return {\r\n            message: lastLog.errorInfo.message,\r\n            timestamp: lastLog.timestamp,\r\n            severity: lastLog.errorInfo.severity\r\n          }\r\n        }\r\n      }\r\n    } catch {\r\n      // 取得できない場合はundefinedを返す\r\n    }\r\n    return undefined\r\n  }\r\n  \r\n  /**\r\n   * 機能フラグを取得\r\n   */\r\n  private getFeatureFlags(): Record<string, boolean> {\r\n    const flags: Record<string, boolean> = {}\r\n    \r\n    try {\r\n      // 環境変数から機能フラグを取得\r\n      const flagKeys = Object.keys(import.meta.env).filter(key => \r\n        key.startsWith('VITE_FEATURE_FLAG_')\r\n      )\r\n      \r\n      flagKeys.forEach(key => {\r\n        const flagName = key.replace('VITE_FEATURE_FLAG_', '').toLowerCase()\r\n        flags[flagName] = import.meta.env[key] === 'true'\r\n      })\r\n    } catch {\r\n      // 取得できない場合は空のオブジェクト\r\n    }\r\n    \r\n    return flags\r\n  }\r\n  \r\n  /**\r\n   * A/Bテスト情報を取得\r\n   */\r\n  private getABTests(): Record<string, string> {\r\n    const tests: Record<string, string> = {}\r\n    \r\n    try {\r\n      // ローカルストレージからA/Bテスト情報を取得\r\n      const abTestData = localStorage.getItem('ab_tests')\r\n      if (abTestData) {\r\n        Object.assign(tests, JSON.parse(abTestData))\r\n      }\r\n    } catch {\r\n      // 取得できない場合は空のオブジェクト\r\n    }\r\n    \r\n    return tests\r\n  }\r\n  \r\n  /**\r\n   * 機能トグル情報を取得\r\n   */\r\n  private getFeatureToggles(): Record<string, boolean> {\r\n    const toggles: Record<string, boolean> = {}\r\n    \r\n    try {\r\n      // ローカルストレージから機能トグル情報を取得\r\n      const toggleData = localStorage.getItem('feature_toggles')\r\n      if (toggleData) {\r\n        Object.assign(toggles, JSON.parse(toggleData))\r\n      }\r\n    } catch {\r\n      // 取得できない場合は空のオブジェクト\r\n    }\r\n    \r\n    return toggles\r\n  }\r\n  \r\n  /**\r\n   * データをサニタイズ\r\n   */\r\n  private sanitizeData(data: DebugInfo): DebugInfo {\r\n    // 深いコピーを作成\r\n    const sanitized = JSON.parse(JSON.stringify(data))\r\n    \r\n    // User Agentから不要な情報を除去\r\n    if (sanitized.system.userAgent) {\r\n      sanitized.system.userAgent = this.sanitizeUserAgent(sanitized.system.userAgent)\r\n    }\r\n    \r\n    // URLから機密情報を除去（既にsanitizeUrlで処理済み）\r\n    \r\n    return sanitized\r\n  }\r\n  \r\n  /**\r\n   * User Agentをサニタイズ\r\n   */\r\n  private sanitizeUserAgent(userAgent: string): string {\r\n    // 基本的なブラウザ情報のみ残す\r\n    const parts = userAgent.split(' ')\r\n    const importantParts = parts.filter(part => {\r\n      return part.includes('Chrome') || \r\n             part.includes('Firefox') || \r\n             part.includes('Safari') || \r\n             part.includes('Edge') ||\r\n             part.includes('Mobile') ||\r\n             part.includes('Windows') ||\r\n             part.includes('Mac') ||\r\n             part.includes('Linux')\r\n    })\r\n    \r\n    return importantParts.slice(0, 5).join(' ') // 最大5つまで\r\n  }\r\n  \r\n  /**\r\n   * データサイズを制限\r\n   */\r\n  private truncateData(data: DebugInfo, maxSize: number): DebugInfo {\r\n    // 優先度の低い情報から削除\r\n    const truncated = { ...data }\r\n    \r\n    // 実験的情報を削除\r\n    delete truncated.experimental\r\n    \r\n    // パフォーマンス詳細を削除\r\n    if (truncated.performance.memory) {\r\n      delete truncated.performance.memory\r\n    }\r\n    \r\n    if (truncated.performance.connection) {\r\n      delete truncated.performance.connection\r\n    }\r\n    \r\n    // まだサイズが大きい場合はアプリケーション情報を簡略化\r\n    if (JSON.stringify(truncated).length > maxSize) {\r\n      truncated.application = {\r\n        url: truncated.application.url,\r\n        errorCount: truncated.application.errorCount,\r\n        activeFeatures: []\r\n      }\r\n    }\r\n    \r\n    return truncated\r\n  }\r\n}\r\n\r\n// シングルトンインスタンス\r\nlet debugInfoCollector: DebugInfoCollector | null = null\r\n\r\n/**\r\n * デバッグ情報コレクターのインスタンスを取得\r\n */\r\nexport function getDebugInfoCollector(\r\n  sessionId?: string,\r\n  buildVersion?: string,\r\n  environment?: string\r\n): DebugInfoCollector {\r\n  if (!debugInfoCollector) {\r\n    debugInfoCollector = new DebugInfoCollector(\r\n      sessionId || 'unknown',\r\n      buildVersion || import.meta.env.VITE_BUILD_VERSION || 'unknown',\r\n      environment || import.meta.env.MODE || 'unknown'\r\n    )\r\n  }\r\n  return debugInfoCollector\r\n}","/**\r\n * エラーハンドリングシステムの統合エクスポート\r\n * アプリケーション全体でのエラーハンドリングを統一管理\r\n */\r\n\r\nimport { GlobalErrorHandler, type ErrorInfo, type ErrorHandlerOptions } from './ErrorHandler'\r\nimport { ErrorLogger, type LogEntry } from './ErrorLogger'\r\nimport { ErrorRecovery } from './ErrorRecovery'\r\nimport { ErrorReporter } from './ErrorReporter'\r\nimport { safeAsync, safeAsyncAll, withAsyncErrorHandler, AsyncQueue } from './AsyncErrorHandler'\r\nimport { userFriendlyMessages, type UserMessage } from './UserFriendlyMessages'\r\nimport { getDebugInfoCollector, type DebugInfo, type CollectionOptions } from './DebugInfoCollector'\r\nimport type { App } from 'vue'\r\n\r\nexport {\r\n  GlobalErrorHandler,\r\n  ErrorLogger,\r\n  ErrorRecovery,\r\n  ErrorReporter,\r\n  safeAsync,\r\n  safeAsyncAll,\r\n  withAsyncErrorHandler,\r\n  AsyncQueue,\r\n  userFriendlyMessages,\r\n  getDebugInfoCollector\r\n}\r\n\r\nexport type {\r\n  ErrorInfo,\r\n  ErrorHandlerOptions,\r\n  LogEntry,\r\n  UserMessage,\r\n  DebugInfo,\r\n  CollectionOptions\r\n}\r\n\r\n/**\r\n * エラーハンドリングシステムの初期化オプション\r\n */\r\nexport interface ErrorHandlingConfig {\r\n  // 基本設定\r\n  enableLogging?: boolean\r\n  enableReporting?: boolean\r\n  enableRecovery?: boolean\r\n  enableUserNotifications?: boolean\r\n  \r\n  // 詳細設定\r\n  maxErrorsPerMinute?: number\r\n  logToConsole?: boolean\r\n  reportToServer?: boolean\r\n  \r\n  // サーバーレポート設定\r\n  reportEndpoint?: string\r\n  reportApiKey?: string\r\n  \r\n  // 環境設定\r\n  environment?: 'development' | 'staging' | 'production'\r\n  userId?: string\r\n  buildVersion?: string\r\n  \r\n  // カスタムコールバック\r\n  onError?: (errorInfo: ErrorInfo) => void\r\n  onRecovery?: (success: boolean, strategy?: string) => void\r\n  onAlert?: (type: string, data: any) => void\r\n}\r\n\r\n/**\r\n * グローバルエラーハンドリングシステム\r\n */\r\nclass ErrorHandlingSystem {\r\n  private globalHandler?: GlobalErrorHandler\r\n  private isInitialized = false\r\n  private config: ErrorHandlingConfig = {}\r\n  private debugCollector?: ReturnType<typeof getDebugInfoCollector>\r\n  \r\n  /**\r\n   * システムを初期化\r\n   */\r\n  initialize(config: ErrorHandlingConfig = {}): void {\r\n    if (this.isInitialized) {\r\n      console.warn('[ErrorHandlingSystem] Already initialized')\r\n      return\r\n    }\r\n    \r\n    this.config = {\r\n      enableLogging: true,\r\n      enableReporting: true,\r\n      enableRecovery: true,\r\n      enableUserNotifications: true,\r\n      maxErrorsPerMinute: 10,\r\n      logToConsole: import.meta.env.DEV,\r\n      reportToServer: import.meta.env.PROD,\r\n      environment: (import.meta.env.MODE as any) || 'development',\r\n      ...config\r\n    }\r\n    \r\n    // グローバルハンドラーの初期化\r\n    this.globalHandler = GlobalErrorHandler.getInstance({\r\n      enableLogging: this.config.enableLogging,\r\n      enableReporting: this.config.enableReporting,\r\n      enableRecovery: this.config.enableRecovery,\r\n      logToConsole: this.config.logToConsole,\r\n      reportToServer: this.config.reportToServer,\r\n      showUserNotification: this.config.enableUserNotifications,\r\n      maxErrorsPerMinute: this.config.maxErrorsPerMinute\r\n    })\r\n    \r\n    // グローバルハンドラーの設定\r\n    this.globalHandler.setupGlobalHandlers()\r\n    \r\n    // デバッグ情報コレクターの初期化\r\n    this.debugCollector = getDebugInfoCollector(\r\n      this.generateSessionId(),\r\n      this.config.buildVersion,\r\n      this.config.environment\r\n    )\r\n    \r\n    // ユーザーIDの設定\r\n    if (this.config.userId) {\r\n      this.setUserId(this.config.userId)\r\n    }\r\n    \r\n    // イベントリスナーの設定\r\n    this.setupEventListeners()\r\n    \r\n    this.isInitialized = true\r\n    \r\n    console.log('[ErrorHandlingSystem] Initialized successfully', {\r\n      config: this.config,\r\n      environment: this.config.environment\r\n    })\r\n  }\r\n  \r\n  /**\r\n   * Vueアプリケーションに統合\r\n   */\r\n  integrateWithVue(app: App): void {\r\n    if (!this.globalHandler) {\r\n      throw new Error('ErrorHandlingSystem must be initialized before Vue integration')\r\n    }\r\n    \r\n    this.globalHandler.setupVueErrorHandler(app)\r\n    \r\n    // Vue DevToolsの統合（開発環境のみ）\r\n    if (import.meta.env.DEV && (window as any).__VUE_DEVTOOLS_GLOBAL_HOOK__) {\r\n      this.setupVueDevToolsIntegration()\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * ユーザーIDを設定\r\n   */\r\n  setUserId(userId: string): void {\r\n    this.config.userId = userId\r\n    \r\n    if (this.globalHandler) {\r\n      // エラーレポーターにユーザーIDを設定\r\n      // 注意: これは内部APIなので、将来的に変更される可能性があります\r\n      try {\r\n        (this.globalHandler as any).errorReporter.setUserId(userId)\r\n        (this.globalHandler as any).errorLogger.setUserId(userId)\r\n      } catch (error) {\r\n        console.warn('[ErrorHandlingSystem] Failed to set user ID:', error)\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 手動でエラーを報告\r\n   */\r\n  reportError(error: Error | string, context?: Record<string, any>, category: ErrorInfo['category'] = 'user'): void {\r\n    if (!this.globalHandler) {\r\n      console.error('[ErrorHandlingSystem] Not initialized')\r\n      return\r\n    }\r\n    \r\n    const errorInfo: ErrorInfo = {\r\n      message: typeof error === 'string' ? error : error.message,\r\n      stack: typeof error === 'object' ? error.stack : undefined,\r\n      category,\r\n      severity: 'medium',\r\n      timestamp: Date.now(),\r\n      userAgent: navigator.userAgent,\r\n      context: {\r\n        ...context,\r\n        source: 'manual-report',\r\n        userId: this.config.userId\r\n      }\r\n    }\r\n    \r\n    this.globalHandler.handleError(errorInfo)\r\n  }\r\n  \r\n  /**\r\n   * カスタムエラーパターンを追加\r\n   */\r\n  addErrorPattern(pattern: any): void {\r\n    userFriendlyMessages.addPattern(pattern)\r\n  }\r\n  \r\n  /**\r\n   * システムの健全性を取得\r\n   */\r\n  getHealthStatus() {\r\n    if (!this.globalHandler) {\r\n      return { isHealthy: false, error: 'Not initialized' }\r\n    }\r\n    \r\n    return this.globalHandler.getHealthStatus()\r\n  }\r\n  \r\n  /**\r\n   * エラー統計を取得\r\n   */\r\n  getStatistics() {\r\n    if (!this.globalHandler) {\r\n      return null\r\n    }\r\n    \r\n    return this.globalHandler.getErrorStats()\r\n  }\r\n  \r\n  /**\r\n   * リアルタイムエラー監視リスナーを追加\r\n   */\r\n  addErrorListener(listener: (errorInfo: ErrorInfo) => void): () => void {\r\n    const handler = (event: CustomEvent) => {\r\n      listener(event.detail)\r\n    }\r\n    \r\n    window.addEventListener('app:error', handler as EventListener)\r\n    \r\n    return () => {\r\n      window.removeEventListener('app:error', handler as EventListener)\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * イベントリスナーを設定\r\n   */\r\n  private setupEventListeners(): void {\r\n    // エラーアラートリスナー\r\n    window.addEventListener('app:error-alert', (event: CustomEvent) => {\r\n      if (this.config.onAlert) {\r\n        this.config.onAlert(event.detail.type, event.detail.data)\r\n      }\r\n    })\r\n    \r\n    // システムアラートリスナー\r\n    window.addEventListener('app:system-alert', (event: CustomEvent) => {\r\n      console.error(`🚨 SYSTEM ALERT: ${event.detail.message}`)\r\n      \r\n      if (this.config.onAlert) {\r\n        this.config.onAlert('system-alert', event.detail)\r\n      }\r\n    })\r\n    \r\n    // リカバリー結果リスナー\r\n    window.addEventListener('app:recovery-result', (event: CustomEvent) => {\r\n      if (this.config.onRecovery) {\r\n        this.config.onRecovery(event.detail.success, event.detail.strategy)\r\n      }\r\n    })\r\n    \r\n    // パフォーマンス問題の検出\r\n    this.setupPerformanceMonitoring()\r\n  }\r\n  \r\n  /**\r\n   * Vue DevToolsとの統合を設定\r\n   */\r\n  private setupVueDevToolsIntegration(): void {\r\n    const devtools = (window as any).__VUE_DEVTOOLS_GLOBAL_HOOK__\r\n    \r\n    // エラー情報をDevToolsに送信\r\n    this.addErrorListener((errorInfo) => {\r\n      devtools.emit('app:error', {\r\n        type: 'error',\r\n        payload: {\r\n          error: errorInfo,\r\n          timestamp: Date.now()\r\n        }\r\n      })\r\n    })\r\n  }\r\n  \r\n  /**\r\n   * パフォーマンス監視を設定\r\n   */\r\n  private setupPerformanceMonitoring(): void {\r\n    // メモリ使用量の監視\r\n    if ('memory' in performance) {\r\n      setInterval(() => {\r\n        const memory = (performance as any).memory\r\n        const used = memory.usedJSHeapSize\r\n        const limit = memory.jsHeapSizeLimit\r\n        \r\n        // メモリ使用量が80%を超えた場合\r\n        if (used / limit > 0.8) {\r\n          this.reportError('High memory usage detected', {\r\n            memoryUsed: used,\r\n            memoryLimit: limit,\r\n            percentage: Math.round((used / limit) * 100)\r\n          }, 'performance')\r\n        }\r\n      }, 30000) // 30秒ごと\r\n    }\r\n    \r\n    // 長時間のタスクの検出\r\n    if ('PerformanceObserver' in window) {\r\n      try {\r\n        const observer = new PerformanceObserver((list) => {\r\n          for (const entry of list.getEntries()) {\r\n            if (entry.duration > 50) { // 50ms以上のタスク\r\n              this.reportError('Long task detected', {\r\n                duration: entry.duration,\r\n                startTime: entry.startTime,\r\n                name: entry.name\r\n              }, 'performance')\r\n            }\r\n          }\r\n        })\r\n        \r\n        observer.observe({ entryTypes: ['longtask'] })\r\n      } catch (error) {\r\n        console.warn('[ErrorHandlingSystem] Long task monitoring not supported:', error)\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * デバッグ情報を収集\r\n   */\r\n  collectDebugInfo(options?: CollectionOptions): DebugInfo | Record<string, any> {\r\n    if (this.debugCollector) {\r\n      try {\r\n        return this.debugCollector.collect(options)\r\n      } catch (error) {\r\n        console.error('[ErrorHandlingSystem] Failed to collect debug info:', error)\r\n      }\r\n    }\r\n    \r\n    // フォールバック: 基本的な情報のみ\r\n    const debugInfo: Record<string, any> = {\r\n      timestamp: new Date().toISOString(),\r\n      userAgent: navigator.userAgent,\r\n      url: window.location.href,\r\n      config: this.config,\r\n      isInitialized: this.isInitialized\r\n    }\r\n    \r\n    // メモリ情報\r\n    if ('memory' in performance) {\r\n      debugInfo.memory = (performance as any).memory\r\n    }\r\n    \r\n    // 接続情報\r\n    if ('connection' in navigator) {\r\n      debugInfo.connection = (navigator as any).connection\r\n    }\r\n    \r\n    // タイミング情報\r\n    debugInfo.timing = performance.timing\r\n    \r\n    // エラー統計\r\n    if (this.globalHandler) {\r\n      debugInfo.errorStats = this.getStatistics()\r\n      debugInfo.healthStatus = this.getHealthStatus()\r\n    }\r\n    \r\n    return debugInfo\r\n  }\r\n  \r\n  /**\r\n   * ゲーム状態プロバイダーを設定\r\n   */\r\n  setGameStateProvider(provider: () => string): void {\r\n    if (this.debugCollector) {\r\n      this.debugCollector.setGameStateProvider(provider)\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * コンポーネントプロバイダーを設定\r\n   */\r\n  setComponentProvider(provider: () => string): void {\r\n    if (this.debugCollector) {\r\n      this.debugCollector.setComponentProvider(provider)\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * アクティブ機能プロバイダーを設定\r\n   */\r\n  setFeatureProvider(provider: () => string[]): void {\r\n    if (this.debugCollector) {\r\n      this.debugCollector.setFeatureProvider(provider)\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * セッションIDを生成\r\n   */\r\n  private generateSessionId(): string {\r\n    return `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\r\n  }\r\n  \r\n  /**\r\n   * システムをクリーンアップ\r\n   */\r\n  destroy(): void {\r\n    if (this.globalHandler) {\r\n      this.globalHandler.destroy()\r\n      this.globalHandler = undefined\r\n    }\r\n    \r\n    this.isInitialized = false\r\n    console.log('[ErrorHandlingSystem] Destroyed')\r\n  }\r\n}\r\n\r\n/**\r\n * グローバルエラーハンドリングシステムのシングルトンインスタンス\r\n */\r\nexport const errorHandlingSystem = new ErrorHandlingSystem()\r\n\r\n/**\r\n * Vue プラグインとしてのエラーハンドリング統合\r\n */\r\nexport const ErrorHandlingPlugin = {\r\n  install(app: App, options: ErrorHandlingConfig = {}) {\r\n    // システムを初期化\r\n    errorHandlingSystem.initialize(options)\r\n    \r\n    // Vueアプリケーションと統合\r\n    errorHandlingSystem.integrateWithVue(app)\r\n    \r\n    // グローバルプロパティとして利用可能にする\r\n    app.config.globalProperties.$errorHandling = {\r\n      reportError: errorHandlingSystem.reportError.bind(errorHandlingSystem),\r\n      getHealth: errorHandlingSystem.getHealthStatus.bind(errorHandlingSystem),\r\n      getStats: errorHandlingSystem.getStatistics.bind(errorHandlingSystem),\r\n      collectDebugInfo: errorHandlingSystem.collectDebugInfo.bind(errorHandlingSystem)\r\n    }\r\n    \r\n    // Provide/Injectでも利用可能にする\r\n    app.provide('errorHandling', errorHandlingSystem)\r\n  }\r\n}\r\n\r\n/**\r\n * Composable for Vue 3\r\n */\r\nexport function useErrorHandling() {\r\n  return {\r\n    reportError: errorHandlingSystem.reportError.bind(errorHandlingSystem),\r\n    getHealthStatus: errorHandlingSystem.getHealthStatus.bind(errorHandlingSystem),\r\n    getStatistics: errorHandlingSystem.getStatistics.bind(errorHandlingSystem),\r\n    addErrorListener: errorHandlingSystem.addErrorListener.bind(errorHandlingSystem),\r\n    collectDebugInfo: errorHandlingSystem.collectDebugInfo.bind(errorHandlingSystem),\r\n    setGameStateProvider: errorHandlingSystem.setGameStateProvider.bind(errorHandlingSystem),\r\n    setComponentProvider: errorHandlingSystem.setComponentProvider.bind(errorHandlingSystem),\r\n    setFeatureProvider: errorHandlingSystem.setFeatureProvider.bind(errorHandlingSystem)\r\n  }\r\n}\r\n\r\n// デフォルトエクスポート（後方互換性のため）\r\nexport default errorHandlingSystem","/**\r\n * Service Worker の登録と管理\r\n */\r\n\r\nexport interface ServiceWorkerConfig {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n  onOffline?: () => void\r\n  onOnline?: () => void\r\n  onError?: (error: Error) => void\r\n}\r\n\r\nclass ServiceWorkerManager {\r\n  private registration: ServiceWorkerRegistration | null = null\r\n  private updateAvailable = false\r\n  private refreshing = false\r\n  \r\n  /**\r\n   * Service Worker を登録\r\n   */\r\n  async register(config: ServiceWorkerConfig = {}): Promise<void> {\r\n    if (!('serviceWorker' in navigator)) {\r\n      console.log('Service Worker is not supported')\r\n      return\r\n    }\r\n    \r\n    try {\r\n      // Service Worker の登録\r\n      const basePath = import.meta.env.BASE_URL || '/'\r\n      const registration = await navigator.serviceWorker.register(`${basePath}service-worker.js`, {\r\n        scope: basePath\r\n      })\r\n      \r\n      this.registration = registration\r\n      console.log('Service Worker registered:', registration)\r\n      \r\n      // 登録成功時のコールバック\r\n      if (config.onSuccess) {\r\n        config.onSuccess(registration)\r\n      }\r\n      \r\n      // 更新チェック\r\n      this.checkForUpdates(registration, config)\r\n      \r\n      // オンライン/オフライン状態の監視\r\n      this.setupNetworkListeners(config)\r\n      \r\n      // ページ更新の処理\r\n      this.setupRefreshListener()\r\n      \r\n      // 定期的な更新チェック（1時間ごと）\r\n      setInterval(() => {\r\n        registration.update()\r\n      }, 60 * 60 * 1000)\r\n      \r\n    } catch (error) {\r\n      console.error('Service Worker registration failed:', error)\r\n      if (config.onError) {\r\n        config.onError(error as Error)\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Service Worker の更新チェック\r\n   */\r\n  private checkForUpdates(registration: ServiceWorkerRegistration, config: ServiceWorkerConfig): void {\r\n    // インストール中の Service Worker\r\n    if (registration.installing) {\r\n      this.trackInstalling(registration.installing, config)\r\n    }\r\n    \r\n    // 待機中の Service Worker\r\n    if (registration.waiting) {\r\n      this.updateAvailable = true\r\n      if (config.onUpdate) {\r\n        config.onUpdate(registration)\r\n      }\r\n    }\r\n    \r\n    // 更新が見つかった時\r\n    registration.addEventListener('updatefound', () => {\r\n      const newWorker = registration.installing\r\n      if (newWorker) {\r\n        this.trackInstalling(newWorker, config)\r\n      }\r\n    })\r\n  }\r\n  \r\n  /**\r\n   * インストール中の Service Worker を追跡\r\n   */\r\n  private trackInstalling(worker: ServiceWorker, config: ServiceWorkerConfig): void {\r\n    worker.addEventListener('statechange', () => {\r\n      if (worker.state === 'installed' && navigator.serviceWorker.controller) {\r\n        // 新しい Service Worker が利用可能\r\n        this.updateAvailable = true\r\n        if (config.onUpdate) {\r\n          config.onUpdate(this.registration!)\r\n        }\r\n      }\r\n    })\r\n  }\r\n  \r\n  /**\r\n   * ネットワーク状態のリスナーを設定\r\n   */\r\n  private setupNetworkListeners(config: ServiceWorkerConfig): void {\r\n    window.addEventListener('online', () => {\r\n      console.log('Network: Online')\r\n      if (config.onOnline) {\r\n        config.onOnline()\r\n      }\r\n    })\r\n    \r\n    window.addEventListener('offline', () => {\r\n      console.log('Network: Offline')\r\n      if (config.onOffline) {\r\n        config.onOffline()\r\n      }\r\n    })\r\n  }\r\n  \r\n  /**\r\n   * ページ更新のリスナーを設定\r\n   */\r\n  private setupRefreshListener(): void {\r\n    // Service Worker からのメッセージを受信\r\n    navigator.serviceWorker.addEventListener('controllerchange', () => {\r\n      if (this.refreshing) return\r\n      this.refreshing = true\r\n      window.location.reload()\r\n    })\r\n  }\r\n  \r\n  /**\r\n   * Service Worker を更新\r\n   */\r\n  async update(): Promise<void> {\r\n    if (!this.registration) return\r\n    \r\n    try {\r\n      await this.registration.update()\r\n      \r\n      if (this.registration.waiting) {\r\n        // 待機中の Service Worker に切り替えを指示\r\n        this.registration.waiting.postMessage({ type: 'SKIP_WAITING' })\r\n      }\r\n    } catch (error) {\r\n      console.error('Service Worker update failed:', error)\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * キャッシュをクリア\r\n   */\r\n  async clearCache(): Promise<void> {\r\n    if (!navigator.serviceWorker.controller) return\r\n    \r\n    navigator.serviceWorker.controller.postMessage({ type: 'CLEAR_CACHE' })\r\n    \r\n    // ブラウザキャッシュもクリア\r\n    if ('caches' in window) {\r\n      const cacheNames = await caches.keys()\r\n      await Promise.all(\r\n        cacheNames.map(cacheName => caches.delete(cacheName))\r\n      )\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Service Worker の登録を解除\r\n   */\r\n  async unregister(): Promise<void> {\r\n    if (!this.registration) return\r\n    \r\n    try {\r\n      const success = await this.registration.unregister()\r\n      if (success) {\r\n        console.log('Service Worker unregistered')\r\n        this.registration = null\r\n      }\r\n    } catch (error) {\r\n      console.error('Service Worker unregistration failed:', error)\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 更新が利用可能かどうか\r\n   */\r\n  isUpdateAvailable(): boolean {\r\n    return this.updateAvailable\r\n  }\r\n  \r\n  /**\r\n   * オフライン対応かどうか\r\n   */\r\n  isOfflineReady(): boolean {\r\n    return this.registration !== null && this.registration.active !== null\r\n  }\r\n}\r\n\r\n// シングルトンインスタンス\r\nconst serviceWorkerManager = new ServiceWorkerManager()\r\n\r\n/**\r\n * Service Worker を登録（エクスポート関数）\r\n */\r\nexport async function registerServiceWorker(config: ServiceWorkerConfig = {}): Promise<void> {\r\n  // 開発環境では Service Worker を無効化\r\n  if (import.meta.env.DEV) {\r\n    console.log('Service Worker is disabled in development')\r\n    return\r\n  }\r\n  \r\n  // window.onload を待つ\r\n  window.addEventListener('load', () => {\r\n    serviceWorkerManager.register(config)\r\n  })\r\n}\r\n\r\n/**\r\n * Service Worker を更新\r\n */\r\nexport async function updateServiceWorker(): Promise<void> {\r\n  await serviceWorkerManager.update()\r\n}\r\n\r\n/**\r\n * キャッシュをクリア\r\n */\r\nexport async function clearServiceWorkerCache(): Promise<void> {\r\n  await serviceWorkerManager.clearCache()\r\n}\r\n\r\n/**\r\n * Service Worker の登録を解除\r\n */\r\nexport async function unregisterServiceWorker(): Promise<void> {\r\n  await serviceWorkerManager.unregister()\r\n}\r\n\r\n/**\r\n * 更新が利用可能かチェック\r\n */\r\nexport function isUpdateAvailable(): boolean {\r\n  return serviceWorkerManager.isUpdateAvailable()\r\n}\r\n\r\n/**\r\n * オフライン対応かチェック\r\n */\r\nexport function isOfflineReady(): boolean {\r\n  return serviceWorkerManager.isOfflineReady()\r\n}","/**\r\n * リップルエフェクト - タッチフィードバックの実装\r\n * マテリアルデザイン風の波紋効果\r\n */\r\n\r\nexport interface RippleOptions {\r\n  color?: string;\r\n  duration?: number;\r\n  opacity?: number;\r\n  centered?: boolean;\r\n  disabled?: boolean;\r\n}\r\n\r\nconst DEFAULT_OPTIONS: Required<RippleOptions> = {\r\n  color: 'rgba(255, 255, 255, 0.6)',\r\n  duration: 700,\r\n  opacity: 0.6,\r\n  centered: false,\r\n  disabled: false\r\n};\r\n\r\n/**\r\n * リップルエフェクトを作成\r\n */\r\nfunction createRippleCore(\r\n  element: HTMLElement, \r\n  event: MouseEvent | TouchEvent, \r\n  options: RippleOptions = {}\r\n): void {\r\n  const config = { ...DEFAULT_OPTIONS, ...options };\r\n  \r\n  if (config.disabled) return;\r\n  \r\n  // リップルコンテナがない場合は作成\r\n  if (!element.classList.contains('ripple-container')) {\r\n    element.classList.add('ripple-container');\r\n  }\r\n  \r\n  // リップル要素を作成\r\n  const ripple = document.createElement('span');\r\n  ripple.classList.add('ripple');\r\n  \r\n  // 要素のサイズと位置を取得\r\n  const rect = element.getBoundingClientRect();\r\n  const size = Math.max(rect.width, rect.height);\r\n  const radius = size / 2;\r\n  \r\n  // クリック位置を計算\r\n  let x: number, y: number;\r\n  \r\n  if (config.centered) {\r\n    x = rect.width / 2;\r\n    y = rect.height / 2;\r\n  } else {\r\n    const clientX = 'touches' in event ? event.touches[0].clientX : event.clientX;\r\n    const clientY = 'touches' in event ? event.touches[0].clientY : event.clientY;\r\n    x = clientX - rect.left;\r\n    y = clientY - rect.top;\r\n  }\r\n  \r\n  // リップルのスタイルを設定\r\n  Object.assign(ripple.style, {\r\n    width: `${size}px`,\r\n    height: `${size}px`,\r\n    left: `${x - radius}px`,\r\n    top: `${y - radius}px`,\r\n    backgroundColor: config.color,\r\n    opacity: config.opacity.toString(),\r\n    animationDuration: `${config.duration}ms`\r\n  });\r\n  \r\n  // リップルを要素に追加\r\n  element.appendChild(ripple);\r\n  \r\n  // アニメーション終了後にリップルを削除\r\n  const removeRipple = () => {\r\n    if (ripple.parentNode) {\r\n      ripple.parentNode.removeChild(ripple);\r\n    }\r\n  };\r\n  \r\n  ripple.addEventListener('animationend', removeRipple);\r\n  \r\n  // フォールバック：一定時間後に強制削除\r\n  setTimeout(removeRipple, config.duration + 100);\r\n}\r\n\r\n/**\r\n * 要素にリップルエフェクトを追加\r\n */\r\nexport function addRippleEffect(\r\n  element: HTMLElement, \r\n  options: RippleOptions = {}\r\n): () => void {\r\n  const handleRipple = (event: MouseEvent | TouchEvent) => {\r\n    createRippleCore(element, event, options);\r\n  };\r\n  \r\n  // マウスとタッチの両方に対応\r\n  element.addEventListener('mousedown', handleRipple);\r\n  element.addEventListener('touchstart', handleRipple, { passive: true });\r\n  \r\n  // クリーンアップ関数を返す\r\n  return () => {\r\n    element.removeEventListener('mousedown', handleRipple);\r\n    element.removeEventListener('touchstart', handleRipple);\r\n  };\r\n}\r\n\r\n/**\r\n * Vue.js向けのリップルディレクティブ\r\n */\r\nexport const rippleDirective = {\r\n  mounted(el: HTMLElement, binding: any) {\r\n    const options: RippleOptions = binding.value || {};\r\n    \r\n    // リップルエフェクトを追加\r\n    const cleanup = addRippleEffect(el, options);\r\n    \r\n    // クリーンアップ関数を要素に保存\r\n    (el as any)._rippleCleanup = cleanup;\r\n  },\r\n  \r\n  updated(el: HTMLElement, binding: any) {\r\n    const options: RippleOptions = binding.value || {};\r\n    \r\n    // 既存のリップルをクリーンアップ\r\n    if ((el as any)._rippleCleanup) {\r\n      (el as any)._rippleCleanup();\r\n    }\r\n    \r\n    // 新しい設定でリップルを再追加\r\n    const cleanup = addRippleEffect(el, options);\r\n    (el as any)._rippleCleanup = cleanup;\r\n  },\r\n  \r\n  unmounted(el: HTMLElement) {\r\n    // クリーンアップ\r\n    if ((el as any)._rippleCleanup) {\r\n      (el as any)._rippleCleanup();\r\n      delete (el as any)._rippleCleanup;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * 自動的にリップルエフェクトを追加\r\n */\r\nexport function initAutoRipple(): void {\r\n  // ページ読み込み後とDOM変更時に実行\r\n  const addRipplesToElements = () => {\r\n    const elements = document.querySelectorAll('.ripple-container');\r\n    \r\n    elements.forEach((element) => {\r\n      const htmlElement = element as HTMLElement;\r\n      \r\n      // すでにリップルが追加されている場合はスキップ\r\n      if ((htmlElement as any)._hasRipple) return;\r\n      \r\n      // リップルエフェクトを追加\r\n      addRippleEffect(htmlElement);\r\n      \r\n      // フラグを設定\r\n      (htmlElement as any)._hasRipple = true;\r\n    });\r\n  };\r\n  \r\n  // 初回実行\r\n  if (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', addRipplesToElements);\r\n  } else {\r\n    addRipplesToElements();\r\n  }\r\n  \r\n  // DOM変更を監視\r\n  const observer = new MutationObserver((mutations) => {\r\n    let shouldUpdate = false;\r\n    \r\n    mutations.forEach((mutation) => {\r\n      if (mutation.type === 'childList') {\r\n        mutation.addedNodes.forEach((node) => {\r\n          if (node.nodeType === Node.ELEMENT_NODE) {\r\n            const element = node as Element;\r\n            if (element.classList?.contains('ripple-container') || \r\n                element.querySelectorAll?.('.ripple-container').length > 0) {\r\n              shouldUpdate = true;\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    if (shouldUpdate) {\r\n      setTimeout(addRipplesToElements, 0);\r\n    }\r\n  });\r\n  \r\n  observer.observe(document.body, {\r\n    childList: true,\r\n    subtree: true\r\n  });\r\n  \r\n  // クリーンアップ関数を返す\r\n  return () => {\r\n    observer.disconnect();\r\n  };\r\n}\r\n\r\n/**\r\n * パフォーマンス考慮：リップル生成の制限\r\n */\r\nlet rippleCount = 0;\r\nconst MAX_RIPPLES = 10;\r\n\r\n/**\r\n * パフォーマンス制限付きリップル作成関数\r\n */\r\nexport function createRipple(\r\n  element: HTMLElement, \r\n  event: MouseEvent | TouchEvent, \r\n  options: RippleOptions = {}\r\n): void {\r\n  if (rippleCount >= MAX_RIPPLES) return;\r\n  \r\n  rippleCount++;\r\n  createRippleCore(element, event, options);\r\n  \r\n  // 一定時間後にカウンターをリセット\r\n  setTimeout(() => {\r\n    rippleCount = Math.max(0, rippleCount - 1);\r\n  }, 1000);\r\n}\r\n\r\n// デフォルトエクスポートとして throttled 版を使用\r\n// 元のcreateRippleをオーバーライド","import { createApp } from 'vue'\r\nimport '@unocss/reset/tailwind.css'\r\nimport 'virtual:uno.css'\r\nimport './style.css'\r\nimport './styles/design-system.css'\r\nimport './styles/micro-interactions.css'\r\nimport './styles/brand-elements.css'\r\nimport './styles/rtl-support.css'\r\nimport App from './App.vue'\r\n\r\n// 国際化システムの導入\r\nimport i18n from './i18n'\r\n\r\n// セキュリティシステムの初期化\r\nimport { initializeSecuritySystem } from '@/utils/security-init'\r\n\r\n// エラーハンドリングシステムの初期化\r\nimport { ErrorHandlingPlugin, errorHandlingSystem } from '@/utils/error-handling'\r\n\r\n// PWA Service Worker の登録\r\nimport { registerServiceWorker } from '@/pwa/registerServiceWorker'\r\n\r\n// リップルエフェクトの初期化\r\nimport { initAutoRipple } from '@/utils/ripple-effect'\r\n\r\n// Vueアプリケーションを作成\r\nconst app = createApp(App)\r\n\r\n// 国際化システムを統合\r\napp.use(i18n)\r\n\r\n// エラーハンドリングシステムをプラグインとして統合\r\napp.use(ErrorHandlingPlugin, {\r\n  enableLogging: true,\r\n  enableReporting: import.meta.env.PROD,\r\n  enableRecovery: true,\r\n  enableUserNotifications: true,\r\n  logToConsole: import.meta.env.DEV,\r\n  reportToServer: import.meta.env.PROD,\r\n  maxErrorsPerMinute: 20,\r\n  environment: import.meta.env.MODE as any,\r\n  buildVersion: import.meta.env.VITE_BUILD_VERSION,\r\n  reportEndpoint: import.meta.env.VITE_ERROR_REPORT_ENDPOINT,\r\n  reportApiKey: import.meta.env.VITE_ERROR_REPORT_API_KEY,\r\n  onError: (errorInfo) => {\r\n    console.log('[App] Error reported:', errorInfo.message)\r\n  },\r\n  onRecovery: (success, strategy) => {\r\n    console.log(`[App] Recovery ${success ? 'succeeded' : 'failed'}${strategy ? ` using ${strategy}` : ''}`)\r\n  },\r\n  onAlert: (type, data) => {\r\n    console.warn(`[App] Alert: ${type}`, data)\r\n  }\r\n})\r\n\r\n// アプリケーション初期化とマウント\r\nasync function initializeApp() {\r\n  try {\r\n    // セキュリティシステムを起動\r\n    await initializeSecuritySystem()\r\n    console.log('🛡️ セキュリティシステムが正常に初期化されました')\r\n    \r\n    // アプリケーションをマウント\r\n    app.mount('#app')\r\n    \r\n  } catch (error) {\r\n    console.error('アプリケーション初期化に失敗しました:', error)\r\n    // エラーハンドラーに報告\r\n    errorHandlingSystem.reportError(\r\n      error as Error,\r\n      { component: 'app-initialization' },\r\n      'system'\r\n    )\r\n    \r\n    // フォールバック: セキュリティなしでアプリケーションをマウント\r\n    console.warn('⚠️ セキュリティシステムなしでアプリケーションを起動します')\r\n    app.mount('#app')\r\n  }\r\n}\r\n\r\n// アプリケーション初期化を実行\r\ninitializeApp()\r\n\r\n// UI エンハンスメントの初期化\r\ninitAutoRipple()\r\n\r\n// Service Worker の登録\r\nregisterServiceWorker({\r\n  onSuccess: (registration) => {\r\n    console.log('PWA: Service Worker 登録成功', registration)\r\n  },\r\n  onUpdate: (registration) => {\r\n    console.log('PWA: 新しいバージョンが利用可能です', registration)\r\n    // ユーザーに更新を通知（実装は別途）\r\n  },\r\n  onOffline: () => {\r\n    console.log('PWA: オフラインモード')\r\n  },\r\n  onOnline: () => {\r\n    console.log('PWA: オンラインに復帰')\r\n  },\r\n  onError: (error) => {\r\n    console.error('PWA: Service Worker エラー', error)\r\n    errorHandlingSystem.reportError(\r\n      error,\r\n      { component: 'service-worker' },\r\n      'system'\r\n    )\r\n  }\r\n})\r\n\r\n// 開発環境でのデバッグ用\r\nif (import.meta.env.DEV) {\r\n  (window as any).__errorHandling = errorHandlingSystem\r\n  console.log('🚨 エラーハンドリングシステムが有効化されました')\r\n  console.log('📊 エラー統計を確認: window.__errorHandling.getStatistics()')\r\n  console.log('🩺 健全性を確認: window.__errorHandling.getHealthStatus()')\r\n  console.log('🔍 デバッグ情報を収集: window.__errorHandling.collectDebugInfo()')\r\n}"],"file":"js/index-CsX-0awL.js"}