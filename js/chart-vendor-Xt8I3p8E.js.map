{"version":3,"file":"chart-vendor-Xt8I3p8E.js","sources":["../../node_modules/chart.js/dist/chunks/helpers.dataset.js","../../node_modules/chart.js/dist/chart.js"],"sourcesContent":["/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _normalizeAngle as al, _readValueToProps as am, _updateBezierControlPoints as an, _computeSegments as ao, _boundSegments as ap, _steppedInterpolation as aq, _bezierInterpolation as ar, _pointInLine as as, _steppedLineTo as at, _bezierCurveTo as au, drawPoint as av, addRoundedRectPath as aw, toTRBL as ax, toTRBLCorners as ay, _boundSegment as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _normalizeAngle, am as _readValueToProps, an as _updateBezierControlPoints, ao as _computeSegments, ap as _boundSegments, aq as _steppedInterpolation, ar as _bezierInterpolation, as as _pointInLine, at as _steppedLineTo, au as _bezierCurveTo, av as drawPoint, aw as addRoundedRectPath, ax as toTRBL, ay as toTRBLCorners, az as _boundSegment, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n    _getAxisCount() {\n        return this._getAxis().length;\n    }\n    getFirstScaleIdForIndexAxis() {\n        const scales = this.chart.scales;\n        const indexScaleId = this.chart.options.indexAxis;\n        return Object.keys(scales).filter((key)=>scales[key].axis === indexScaleId).shift();\n    }\n    _getAxis() {\n        const axis = {};\n        const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n        for (const dataset of this.chart.data.datasets){\n            axis[valueOrDefault(this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId)] = true;\n        }\n        return Object.keys(axis);\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        const axisCount = this._getAxisCount();\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount) : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n            const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n            const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.5.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipSelf(ctx, element, endAngle) {\n    const { startAngle , x , y , outerRadius , innerRadius , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n    if (innerRadius > 0) {\n        const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n        ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n    } else {\n        const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n        if (borderJoinStyle === 'round') {\n            ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n        } else if (borderJoinStyle === 'bevel') {\n            const r = 2 * clipWidth * clipWidth;\n            const endX = -r * Math.cos(endAngle + PI / 2) + x;\n            const endY = -r * Math.sin(endAngle + PI / 2) + y;\n            const startX = r * Math.cos(startAngle + PI / 2) + x;\n            const startY = r * Math.sin(startAngle + PI / 2) + y;\n            ctx.lineTo(endX, endY);\n            ctx.lineTo(startX, startY);\n        }\n    }\n    ctx.closePath();\n    ctx.moveTo(0, 0);\n    ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.clip('evenodd');\n}\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset , borderRadius  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n        clipSelf(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true,\n        selfJoin: false\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    let fillColor = below;\n    if (below !== above) {\n        if (property === 'x') {\n            clipVertical(ctx, target, area.top);\n            fill(ctx, {\n                line,\n                target,\n                color: above,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipVertical(ctx, target, area.bottom);\n        } else if (property === 'y') {\n            clipHorizontal(ctx, target, area.left);\n            fill(ctx, {\n                line,\n                target,\n                color: below,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipHorizontal(ctx, target, area.right);\n            fillColor = above;\n        }\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: fillColor,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction clipHorizontal(ctx, target, clipX) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(clipX, firstPoint.y);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(clipX, lastPoint.y);\n        }\n    }\n    ctx.lineTo(clipX, target.first().y);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n"],"names":["noop","uid","id","isNullOrUndef","value","isArray","type","isObject","isNumberFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","callback","fn","args","thisArg","each","loopable","reverse","i","len","keys","_elementsEqual","a0","a1","ilen","v0","v1","clone","source","target","klen","k","isValidKey","key","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","keyResolvers","v","o","_splitKey","parts","tmp","part","_getKeyResolver","obj","resolveObjectKey","_capitalize","str","defined","isFunction","setsEqual","a","b","item","_isClickEvent","e","PI","TAU","PITAU","INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","x","y","epsilon","niceNum","range","roundedRange","niceRange","fraction","_factorize","result","sqrt","isNonPrimitive","n","isNumber","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","min","max","_int16Range","_isBetween","_lookup","table","cmp","index","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","method","base","res","object","unlistenArrayEvents","stub","listeners","_arrayUnique","items","set","requestAnimFrame","throttled","argsToUse","ticking","debounce","delay","timeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","atEdge","t","elasticIn","elasticOut","effects","isPatternOrGradient","color","Color","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","name","applyLayoutsDefaults","intlCache","getNumberFormat","locale","cacheKey","formatter","formatNumber","num","formatters","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","Ticks","applyScaleDefaults","_ctx","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","context","ctx","targetScope","targetName","scopeObject","targetScopeObject","privateName","local","appliers","apply","toFontString","font","_measureText","data","gc","longest","string","textWidth","_alignPixel","chart","pixel","width","devicePixelRatio","halfWidth","clearCanvas","canvas","drawPoint","drawPointLegend","w","xOffset","yOffset","size","cornerRadius","xOffsetW","yOffsetW","style","rotation","radius","rad","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","mode","midpoint","_bezierCurveTo","setRenderOpts","opts","decorateText","line","metrics","top","bottom","yDecoration","drawBackdrop","oldColor","renderText","text","lines","stroke","addRoundedRectPath","rect","h","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","numberOrZero","_readValueToProps","props","ret","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","_addGrace","minmax","grace","beginAtZero","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","_cached","_resolveWithPrefixes","getKeysFromAllScopes","storage","_attachContext","proxy","subProxy","descriptorDefaults","receiver","_resolveWithContext","_scriptable","_indexable","_allKeys","readKey","prefix","needsSubResolver","_proxy","_context","_subProxy","_resolveScriptable","_resolveArray","getValue","_stack","createSubResolver","isIndexable","arr","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","getValueAxis","indexAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","prev","_isDomSupported","_getParentNode","domNode","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","getCanvasPosition","touches","offsetX","offsetY","box","getRelativePosition","event","currentDevicePixelRatio","borderBox","paddings","borders","height","getContainerSize","maxWidth","maxHeight","container","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","supportsEventListenerOptions","passiveSupported","readUsedSize","_pointInLine","p1","p2","_steppedInterpolation","_bezierInterpolation","cp1","cp2","c","d","getRightToLeftAdapter","rectX","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","restoreTextDirection","propertyFn","normalizeSegment","count","getSegment","segment","bounds","startBound","endBound","between","normalize","_boundSegment","compare","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","spanGaps","solidSegments","cur","_computeSegments","segmentOptions","splitByStyles","completeLoop","doSplitByStyles","chartContext","baseStyle","readStyle","datasetIndex","prevStyle","addStyle","l","st","dir","styleChanged","replacer","getSizeForArea","scale","chartArea","field","getDatasetArea","meta","xScale","yScale","getDatasetClipArea","clip","Animator","anims","date","callbacks","numSteps","remaining","draw","charts","cb","acc","animator","transparent","interpolators","from","to","factor","c0","c1","Animation","cfg","currentValue","elapsed","remain","duration","promises","rej","resolved","Animations","config","animationOptions","animatedProps","option","newOptions","resolveTargetOptions","animations","awaitAll","running","animation","properties","anim","scaleClip","allowedOverflow","defaultClip","toClip","r","getSortedDatasetIndices","filterVisible","metasets","applyStack","stack","dsIndex","singleMode","otherValue","found","convertObjectDataToArray","iScale","vScale","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","updateStacks","controller","parsed","iAxis","vAxis","itemStacks","visualValues","getFirstScaleId","axis","scales","createDatasetContext","createDataContext","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","DatasetController","dataset","chooseId","xid","yid","rid","iid","vid","scaleID","_data","resetNewElements","stackChanged","oldStacked","scopeKeys","_stacked","sorted","isNotInOrderComparedToPrev","labels","singleScale","xAxisKey","yAxisKey","parsedValue","_parsed","otherScale","otherMin","otherMax","_skip","elements","active","drawActiveElementsOnTop","elementType","sharing","names","transition","sharedOptions","firstOpts","previouslySharedOptions","includeOptions","arg1","arg2","numMeta","numData","move","removed","newCount","__publicField","abstract","DateAdapterBase","members","adapters","binarySearch","metaset","intersect","_sorted","lookupMethod","distanceToDefinedLo","distanceToDefinedHi","evaluateInteractionItems","position","handler","j","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","includeInvisible","getNearestRadialItems","evaluationFunc","startAngle","endAngle","getNearestCartesianItems","distanceMetric","minDistance","inRange","center","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","buildLayoutBoxes","centerHorizontal","centerVertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","newHeight","widthChanged","heightChanged","handleMaxPadding","updatePos","getMargins","horizontal","marginForPositions","fitBoxes","refitBoxes","refit","changed","same","other","setBoxDims","placeBoxes","userPadding","weight","layoutItem","minPadding","padding","availableWidth","availableHeight","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","total","BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","isNullOrEmpty","initCanvas","renderHeight","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","nodeListContains","nodeList","createAttachObserver","observer","entries","trigger","entry","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","releaseObserver","createProxyAndListen","DomPlatform","initial","proxies","_detectPlatform","Element","final","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","majorIndices","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","spacing","calculateSpacing","avgMajorSpacing","skip","offset","tickLength","maxScale","maxChart","evenMajorSpacing","getEvenSpacing","factors","majorStart","majorEnd","length","diff","reverseAlign","offsetFromEdge","edge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","tick","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","raw","_userMin","_userMax","_suggestedMin","_suggestedMax","metas","sampleSize","samplingEnabled","reversePixels","startPixel","endPixel","numTicks","minRotation","maxRotation","labelRotation","tickWidth","maxLabelDiagonal","labelSizes","maxLabelWidth","maxLabelHeight","minSize","titleOpts","gridOpts","display","isHorizontal","titleHeight","widest","highest","tickPadding","angleRadians","cos","sin","labelHeight","labelWidth","isRotated","labelsBelowTicks","offsetLeft","offsetRight","paddingLeft","paddingRight","paddingTop","paddingBottom","widths","heights","widestLabelSize","highestLabelSize","jlen","label","tickFont","fontString","lineHeight","nestedLabel","valueAt","idx","decimal","optionTicks","rot","grid","border","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineWidth","lineColor","borderDash","borderDashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","mirror","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","backgroundColor","drawLine","lastLineWidth","renderTextOptions","title","tz","gz","bz","axisID","fontSize","TypedRegistry","override","proto","parentScope","isIChartComponent","registerDefaults","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","typedRegistry","arg","reg","itemReg","registry","component","camelMethod","PluginService","hook","filter","descriptor","plugin","all","plugins","allPlugins","createDescriptors","previousDescriptors","localIds","getOpts","pluginOpts","getIndexAxis","datasetDefaults","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","datasetType","mainScope","resetCache","_scopeCache","keyLists","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","isScriptable","scriptable","indexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onAnimationProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","maintainAspectRatio","_aspectRatio","newSize","newRatio","scalesOptions","axisOptions","scaleOpts","updated","isRadial","scaleType","scaleClass","hasUpdated","datasets","newControllers","ControllerClass","datasetElementType","dataElementType","animsDisabled","reset","_active","_lastEvent","existingEvents","newEvents","_hiddenIndices","changes","_dataChanges","datasetCount","makeSet","changeSet","noArea","layers","visible","dataIndex","platform","_add","_remove","detached","attached","enabled","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","clipSelf","outerRadius","innerRadius","borderWidth","borderJoinStyle","outerAngleClip","innerAngleClip","clipWidth","endX","endY","startX","startY","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","arc","angleDelta","halfThickness","innerLimit","computeOuterLimit","val","outerArcLimit","rThetaToXY","theta","pathArc","circular","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStart","outerEnd","innerStart","innerEnd","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","circumference","drawBorder","borderRadius","inner","ArcElement","chartX","chartY","rAdjust","_circumference","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineTo","getLineMethod","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","minY","maxY","lastY","pointIndex","drawX","truncX","_getSegmentMethod","_getInterpolationMethod","strokePathWithCache","path","strokePathDirect","segmentMethod","usePath2D","LineElement","_interpolate","interpolated","inRange$1","PointElement","mouseX","mouseY","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","enableBorderRadius","maxR","enableBorder","boundingRects","skipX","skipY","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","inflateAmount","borderColor","outer","addRectPath","_segments","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_loop","_shouldApplyFill","_resolveTarget","propagate","fill","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","startValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","fillColor","clipVertical","clipHorizontal","clipY","lineLoop","lastPoint","clipX","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","_args","getBoxSize","labelOpts","boxHeight","boxWidth","itemsEqual","Legend","legendItems","labelFont","itemHeight","hitboxes","lineWidths","totalHeight","row","legendItem","_itemHeight","columnSizes","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","rtlHelper","hitbox","defaultColor","halfFontSize","cursor","drawLegendBox","drawOptions","centerX","centerY","yBoxTop","xBoxLeft","fillText","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","sameItem","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","legend","ci","usePointStyle","pointStyle","useBorderRadius","Title","textSize","fontOpts","createTitle","plugin_title","titleBlock","positioners","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","bodyLineHeight","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","caretSize","caretPadding","topLeft","topRight","bottomLeft","bottomRight","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","labelCount","tooltipItem","invokeCallbackWithFallback","Tooltip","beforeTitle","afterTitle","bodyItems","scoped","beforeFooter","afterFooter","labelColors","labelPointStyles","labelTextColors","positionAndSize","backgroundPoint","tooltipPoint","caretPosition","ptX","ptY","x3","y3","titleSpacing","labelColor","labelPointStyle","colorX","rtlColorX","yOffSet","colorY","outerX","innerX","bodySpacing","bodyAlign","displayColors","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","tooltipSize","animX","animY","opacity","hasTooltipContent","positionChanged","caretX","caretY","plugin_tooltip","__spreadProps","__spreadValues","addIfString","addedLabels","findOrAddLabel","_getLabelForValue","CategoryScale","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","ratio","LinearScaleBase","setMin","setMax","minSign","maxSign","stepSize","numericGeneratorOptions","LinearScale","INTERVALS","UNITS","sorter","parse","input","adapter","parser","round","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","map","majorUnit","major","ticksFromTimestamps","TimeScale","_applyBounds","timeOpts","minor","weekday","hasWeekday","format","formats","fmt","minorFormat","majorFormat","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","displayFormats","exampleLabel","interpolate","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","curr"],"mappings":"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","x_google_ignoreList":[0,1]}